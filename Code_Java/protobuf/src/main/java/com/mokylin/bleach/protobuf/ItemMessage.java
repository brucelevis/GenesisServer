// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Item.proto

package com.mokylin.bleach.protobuf;

public final class ItemMessage {
  private ItemMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CGItemUseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.icewind.CGItemUse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     **道具TemplateID
     * </pre>
     */
    boolean hasTemplateId();
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     **道具TemplateID
     * </pre>
     */
    int getTemplateId();

    /**
     * <code>required int32 amount = 2;</code>
     *
     * <pre>
     **道具数量 
     * </pre>
     */
    boolean hasAmount();
    /**
     * <code>required int32 amount = 2;</code>
     *
     * <pre>
     **道具数量 
     * </pre>
     */
    int getAmount();
  }
  /**
   * Protobuf type {@code com.icewind.CGItemUse}
   *
   * <pre>
   **
   * 使用道具
   * </pre>
   */
  public static final class CGItemUse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.icewind.CGItemUse)
      CGItemUseOrBuilder {
    // Use CGItemUse.newBuilder() to construct.
    private CGItemUse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGItemUse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGItemUse defaultInstance;
    public static CGItemUse getDefaultInstance() {
      return defaultInstance;
    }

    public CGItemUse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGItemUse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              templateId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              amount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemUse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemUse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ItemMessage.CGItemUse.class, com.mokylin.bleach.protobuf.ItemMessage.CGItemUse.Builder.class);
    }

    public static com.google.protobuf.Parser<CGItemUse> PARSER =
        new com.google.protobuf.AbstractParser<CGItemUse>() {
      public CGItemUse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGItemUse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGItemUse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEMPLATEID_FIELD_NUMBER = 1;
    private int templateId_;
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     **道具TemplateID
     * </pre>
     */
    public boolean hasTemplateId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     **道具TemplateID
     * </pre>
     */
    public int getTemplateId() {
      return templateId_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private int amount_;
    /**
     * <code>required int32 amount = 2;</code>
     *
     * <pre>
     **道具数量 
     * </pre>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 amount = 2;</code>
     *
     * <pre>
     **道具数量 
     * </pre>
     */
    public int getAmount() {
      return amount_;
    }

    private void initFields() {
      templateId_ = 0;
      amount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTemplateId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, templateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, amount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, templateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, amount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ItemMessage.CGItemUse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.icewind.CGItemUse}
     *
     * <pre>
     **
     * 使用道具
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.icewind.CGItemUse)
        com.mokylin.bleach.protobuf.ItemMessage.CGItemUseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemUse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemUse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ItemMessage.CGItemUse.class, com.mokylin.bleach.protobuf.ItemMessage.CGItemUse.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ItemMessage.CGItemUse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        templateId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        amount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemUse_descriptor;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.CGItemUse getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.CGItemUse.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ItemMessage.CGItemUse build() {
        com.mokylin.bleach.protobuf.ItemMessage.CGItemUse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.CGItemUse buildPartial() {
        com.mokylin.bleach.protobuf.ItemMessage.CGItemUse result = new com.mokylin.bleach.protobuf.ItemMessage.CGItemUse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.templateId_ = templateId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.amount_ = amount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ItemMessage.CGItemUse) {
          return mergeFrom((com.mokylin.bleach.protobuf.ItemMessage.CGItemUse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ItemMessage.CGItemUse other) {
        if (other == com.mokylin.bleach.protobuf.ItemMessage.CGItemUse.getDefaultInstance()) return this;
        if (other.hasTemplateId()) {
          setTemplateId(other.getTemplateId());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTemplateId()) {
          
          return false;
        }
        if (!hasAmount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ItemMessage.CGItemUse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ItemMessage.CGItemUse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int templateId_ ;
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       **道具TemplateID
       * </pre>
       */
      public boolean hasTemplateId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       **道具TemplateID
       * </pre>
       */
      public int getTemplateId() {
        return templateId_;
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       **道具TemplateID
       * </pre>
       */
      public Builder setTemplateId(int value) {
        bitField0_ |= 0x00000001;
        templateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       **道具TemplateID
       * </pre>
       */
      public Builder clearTemplateId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        templateId_ = 0;
        onChanged();
        return this;
      }

      private int amount_ ;
      /**
       * <code>required int32 amount = 2;</code>
       *
       * <pre>
       **道具数量 
       * </pre>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 amount = 2;</code>
       *
       * <pre>
       **道具数量 
       * </pre>
       */
      public int getAmount() {
        return amount_;
      }
      /**
       * <code>required int32 amount = 2;</code>
       *
       * <pre>
       **道具数量 
       * </pre>
       */
      public Builder setAmount(int value) {
        bitField0_ |= 0x00000002;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 amount = 2;</code>
       *
       * <pre>
       **道具数量 
       * </pre>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        amount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.icewind.CGItemUse)
    }

    static {
      defaultInstance = new CGItemUse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.icewind.CGItemUse)
  }

  public interface CGItemSellOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.icewind.CGItemSell)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     ** 卖出的物品TemplateID 
     * </pre>
     */
    boolean hasTemplateId();
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     ** 卖出的物品TemplateID 
     * </pre>
     */
    int getTemplateId();

    /**
     * <code>required int32 amount = 2;</code>
     *
     * <pre>
     ** 卖出的数量 
     * </pre>
     */
    boolean hasAmount();
    /**
     * <code>required int32 amount = 2;</code>
     *
     * <pre>
     ** 卖出的数量 
     * </pre>
     */
    int getAmount();
  }
  /**
   * Protobuf type {@code com.icewind.CGItemSell}
   *
   * <pre>
   **
   * 卖出道具
   * </pre>
   */
  public static final class CGItemSell extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.icewind.CGItemSell)
      CGItemSellOrBuilder {
    // Use CGItemSell.newBuilder() to construct.
    private CGItemSell(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGItemSell(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGItemSell defaultInstance;
    public static CGItemSell getDefaultInstance() {
      return defaultInstance;
    }

    public CGItemSell getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGItemSell(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              templateId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              amount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemSell_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemSell_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ItemMessage.CGItemSell.class, com.mokylin.bleach.protobuf.ItemMessage.CGItemSell.Builder.class);
    }

    public static com.google.protobuf.Parser<CGItemSell> PARSER =
        new com.google.protobuf.AbstractParser<CGItemSell>() {
      public CGItemSell parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGItemSell(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGItemSell> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEMPLATEID_FIELD_NUMBER = 1;
    private int templateId_;
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     ** 卖出的物品TemplateID 
     * </pre>
     */
    public boolean hasTemplateId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     ** 卖出的物品TemplateID 
     * </pre>
     */
    public int getTemplateId() {
      return templateId_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private int amount_;
    /**
     * <code>required int32 amount = 2;</code>
     *
     * <pre>
     ** 卖出的数量 
     * </pre>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 amount = 2;</code>
     *
     * <pre>
     ** 卖出的数量 
     * </pre>
     */
    public int getAmount() {
      return amount_;
    }

    private void initFields() {
      templateId_ = 0;
      amount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTemplateId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, templateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, amount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, templateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, amount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ItemMessage.CGItemSell prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.icewind.CGItemSell}
     *
     * <pre>
     **
     * 卖出道具
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.icewind.CGItemSell)
        com.mokylin.bleach.protobuf.ItemMessage.CGItemSellOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemSell_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemSell_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ItemMessage.CGItemSell.class, com.mokylin.bleach.protobuf.ItemMessage.CGItemSell.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ItemMessage.CGItemSell.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        templateId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        amount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemSell_descriptor;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.CGItemSell getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.CGItemSell.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ItemMessage.CGItemSell build() {
        com.mokylin.bleach.protobuf.ItemMessage.CGItemSell result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.CGItemSell buildPartial() {
        com.mokylin.bleach.protobuf.ItemMessage.CGItemSell result = new com.mokylin.bleach.protobuf.ItemMessage.CGItemSell(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.templateId_ = templateId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.amount_ = amount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ItemMessage.CGItemSell) {
          return mergeFrom((com.mokylin.bleach.protobuf.ItemMessage.CGItemSell)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ItemMessage.CGItemSell other) {
        if (other == com.mokylin.bleach.protobuf.ItemMessage.CGItemSell.getDefaultInstance()) return this;
        if (other.hasTemplateId()) {
          setTemplateId(other.getTemplateId());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTemplateId()) {
          
          return false;
        }
        if (!hasAmount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ItemMessage.CGItemSell parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ItemMessage.CGItemSell) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int templateId_ ;
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       ** 卖出的物品TemplateID 
       * </pre>
       */
      public boolean hasTemplateId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       ** 卖出的物品TemplateID 
       * </pre>
       */
      public int getTemplateId() {
        return templateId_;
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       ** 卖出的物品TemplateID 
       * </pre>
       */
      public Builder setTemplateId(int value) {
        bitField0_ |= 0x00000001;
        templateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       ** 卖出的物品TemplateID 
       * </pre>
       */
      public Builder clearTemplateId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        templateId_ = 0;
        onChanged();
        return this;
      }

      private int amount_ ;
      /**
       * <code>required int32 amount = 2;</code>
       *
       * <pre>
       ** 卖出的数量 
       * </pre>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 amount = 2;</code>
       *
       * <pre>
       ** 卖出的数量 
       * </pre>
       */
      public int getAmount() {
        return amount_;
      }
      /**
       * <code>required int32 amount = 2;</code>
       *
       * <pre>
       ** 卖出的数量 
       * </pre>
       */
      public Builder setAmount(int value) {
        bitField0_ |= 0x00000002;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 amount = 2;</code>
       *
       * <pre>
       ** 卖出的数量 
       * </pre>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        amount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.icewind.CGItemSell)
    }

    static {
      defaultInstance = new CGItemSell(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.icewind.CGItemSell)
  }

  public interface CGItemCompoundOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.icewind.CGItemCompound)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 toTemplateId = 1;</code>
     *
     * <pre>
     ** 被合成的物品TemplateID 
     * </pre>
     */
    boolean hasToTemplateId();
    /**
     * <code>required int32 toTemplateId = 1;</code>
     *
     * <pre>
     ** 被合成的物品TemplateID 
     * </pre>
     */
    int getToTemplateId();
  }
  /**
   * Protobuf type {@code com.icewind.CGItemCompound}
   *
   * <pre>
   **
   * 合成道具
   * </pre>
   */
  public static final class CGItemCompound extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.icewind.CGItemCompound)
      CGItemCompoundOrBuilder {
    // Use CGItemCompound.newBuilder() to construct.
    private CGItemCompound(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGItemCompound(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGItemCompound defaultInstance;
    public static CGItemCompound getDefaultInstance() {
      return defaultInstance;
    }

    public CGItemCompound getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGItemCompound(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              toTemplateId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemCompound_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemCompound_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound.class, com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound.Builder.class);
    }

    public static com.google.protobuf.Parser<CGItemCompound> PARSER =
        new com.google.protobuf.AbstractParser<CGItemCompound>() {
      public CGItemCompound parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGItemCompound(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGItemCompound> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TOTEMPLATEID_FIELD_NUMBER = 1;
    private int toTemplateId_;
    /**
     * <code>required int32 toTemplateId = 1;</code>
     *
     * <pre>
     ** 被合成的物品TemplateID 
     * </pre>
     */
    public boolean hasToTemplateId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 toTemplateId = 1;</code>
     *
     * <pre>
     ** 被合成的物品TemplateID 
     * </pre>
     */
    public int getToTemplateId() {
      return toTemplateId_;
    }

    private void initFields() {
      toTemplateId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasToTemplateId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, toTemplateId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, toTemplateId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.icewind.CGItemCompound}
     *
     * <pre>
     **
     * 合成道具
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.icewind.CGItemCompound)
        com.mokylin.bleach.protobuf.ItemMessage.CGItemCompoundOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemCompound_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemCompound_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound.class, com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        toTemplateId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_CGItemCompound_descriptor;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound build() {
        com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound buildPartial() {
        com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound result = new com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.toTemplateId_ = toTemplateId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound) {
          return mergeFrom((com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound other) {
        if (other == com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound.getDefaultInstance()) return this;
        if (other.hasToTemplateId()) {
          setToTemplateId(other.getToTemplateId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasToTemplateId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ItemMessage.CGItemCompound) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int toTemplateId_ ;
      /**
       * <code>required int32 toTemplateId = 1;</code>
       *
       * <pre>
       ** 被合成的物品TemplateID 
       * </pre>
       */
      public boolean hasToTemplateId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 toTemplateId = 1;</code>
       *
       * <pre>
       ** 被合成的物品TemplateID 
       * </pre>
       */
      public int getToTemplateId() {
        return toTemplateId_;
      }
      /**
       * <code>required int32 toTemplateId = 1;</code>
       *
       * <pre>
       ** 被合成的物品TemplateID 
       * </pre>
       */
      public Builder setToTemplateId(int value) {
        bitField0_ |= 0x00000001;
        toTemplateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 toTemplateId = 1;</code>
       *
       * <pre>
       ** 被合成的物品TemplateID 
       * </pre>
       */
      public Builder clearToTemplateId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        toTemplateId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.icewind.CGItemCompound)
    }

    static {
      defaultInstance = new CGItemCompound(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.icewind.CGItemCompound)
  }

  public interface GCInventoryInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.icewind.GCInventoryInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> 
        getItemsList();
    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getItems(int index);
    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    int getItemsCount();
    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.icewind.GCInventoryInfo}
   *
   * <pre>
   **
   * 背包详细信息
   * </pre>
   */
  public static final class GCInventoryInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.icewind.GCInventoryInfo)
      GCInventoryInfoOrBuilder {
    // Use GCInventoryInfo.newBuilder() to construct.
    private GCInventoryInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCInventoryInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCInventoryInfo defaultInstance;
    public static GCInventoryInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GCInventoryInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCInventoryInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                items_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCInventoryInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCInventoryInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo.class, com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GCInventoryInfo> PARSER =
        new com.google.protobuf.AbstractParser<GCInventoryInfo>() {
      public GCInventoryInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCInventoryInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCInventoryInfo> getParserForType() {
      return PARSER;
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> items_;
    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .com.icewind.ItemData items = 1;</code>
     *
     * <pre>
     **所有道具 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private void initFields() {
      items_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getItemsCount(); i++) {
        if (!getItems(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.icewind.GCInventoryInfo}
     *
     * <pre>
     **
     * 背包详细信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.icewind.GCInventoryInfo)
        com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCInventoryInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCInventoryInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo.class, com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCInventoryInfo_descriptor;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo build() {
        com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo buildPartial() {
        com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo result = new com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo) {
          return mergeFrom((com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo other) {
        if (other == com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getItemsCount(); i++) {
          if (!getItems(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ItemMessage.GCInventoryInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public Builder setItems(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public Builder setItems(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public Builder addItems(com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public Builder addItems(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public Builder addItems(
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public Builder addItems(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.getDefaultInstance());
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.getDefaultInstance());
      }
      /**
       * <code>repeated .com.icewind.ItemData items = 1;</code>
       *
       * <pre>
       **所有道具 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.icewind.GCInventoryInfo)
    }

    static {
      defaultInstance = new GCInventoryInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.icewind.GCInventoryInfo)
  }

  public interface GCItemUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.icewind.GCItemUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> 
        getUpdatedItemsList();
    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getUpdatedItems(int index);
    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    int getUpdatedItemsCount();
    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
        getUpdatedItemsOrBuilderList();
    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder getUpdatedItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.icewind.GCItemUpdate}
   *
   * <pre>
   **
   * 物品更新消息。&lt;p&gt;
   * 该消息暂时只能用于特定业务的物品更新，如GM命令等。&lt;p&gt;
   * 在使用前请咨询尽可能多的人员，用错了弄死你丫的。
   * </pre>
   */
  public static final class GCItemUpdate extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.icewind.GCItemUpdate)
      GCItemUpdateOrBuilder {
    // Use GCItemUpdate.newBuilder() to construct.
    private GCItemUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCItemUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCItemUpdate defaultInstance;
    public static GCItemUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public GCItemUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCItemUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                updatedItems_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData>();
                mutable_bitField0_ |= 0x00000001;
              }
              updatedItems_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          updatedItems_ = java.util.Collections.unmodifiableList(updatedItems_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCItemUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCItemUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate.class, com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<GCItemUpdate> PARSER =
        new com.google.protobuf.AbstractParser<GCItemUpdate>() {
      public GCItemUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCItemUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCItemUpdate> getParserForType() {
      return PARSER;
    }

    public static final int UPDATEDITEMS_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> updatedItems_;
    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> getUpdatedItemsList() {
      return updatedItems_;
    }
    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
        getUpdatedItemsOrBuilderList() {
      return updatedItems_;
    }
    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    public int getUpdatedItemsCount() {
      return updatedItems_.size();
    }
    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getUpdatedItems(int index) {
      return updatedItems_.get(index);
    }
    /**
     * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
     */
    public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder getUpdatedItemsOrBuilder(
        int index) {
      return updatedItems_.get(index);
    }

    private void initFields() {
      updatedItems_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getUpdatedItemsCount(); i++) {
        if (!getUpdatedItems(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < updatedItems_.size(); i++) {
        output.writeMessage(1, updatedItems_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < updatedItems_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, updatedItems_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.icewind.GCItemUpdate}
     *
     * <pre>
     **
     * 物品更新消息。&lt;p&gt;
     * 该消息暂时只能用于特定业务的物品更新，如GM命令等。&lt;p&gt;
     * 在使用前请咨询尽可能多的人员，用错了弄死你丫的。
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.icewind.GCItemUpdate)
        com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCItemUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCItemUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate.class, com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUpdatedItemsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (updatedItemsBuilder_ == null) {
          updatedItems_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          updatedItemsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.internal_static_com_icewind_GCItemUpdate_descriptor;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate build() {
        com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate buildPartial() {
        com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate result = new com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate(this);
        int from_bitField0_ = bitField0_;
        if (updatedItemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            updatedItems_ = java.util.Collections.unmodifiableList(updatedItems_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.updatedItems_ = updatedItems_;
        } else {
          result.updatedItems_ = updatedItemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate) {
          return mergeFrom((com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate other) {
        if (other == com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate.getDefaultInstance()) return this;
        if (updatedItemsBuilder_ == null) {
          if (!other.updatedItems_.isEmpty()) {
            if (updatedItems_.isEmpty()) {
              updatedItems_ = other.updatedItems_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureUpdatedItemsIsMutable();
              updatedItems_.addAll(other.updatedItems_);
            }
            onChanged();
          }
        } else {
          if (!other.updatedItems_.isEmpty()) {
            if (updatedItemsBuilder_.isEmpty()) {
              updatedItemsBuilder_.dispose();
              updatedItemsBuilder_ = null;
              updatedItems_ = other.updatedItems_;
              bitField0_ = (bitField0_ & ~0x00000001);
              updatedItemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUpdatedItemsFieldBuilder() : null;
            } else {
              updatedItemsBuilder_.addAllMessages(other.updatedItems_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getUpdatedItemsCount(); i++) {
          if (!getUpdatedItems(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ItemMessage.GCItemUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> updatedItems_ =
        java.util.Collections.emptyList();
      private void ensureUpdatedItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          updatedItems_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData>(updatedItems_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> updatedItemsBuilder_;

      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> getUpdatedItemsList() {
        if (updatedItemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(updatedItems_);
        } else {
          return updatedItemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public int getUpdatedItemsCount() {
        if (updatedItemsBuilder_ == null) {
          return updatedItems_.size();
        } else {
          return updatedItemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getUpdatedItems(int index) {
        if (updatedItemsBuilder_ == null) {
          return updatedItems_.get(index);
        } else {
          return updatedItemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public Builder setUpdatedItems(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData value) {
        if (updatedItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatedItemsIsMutable();
          updatedItems_.set(index, value);
          onChanged();
        } else {
          updatedItemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public Builder setUpdatedItems(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder builderForValue) {
        if (updatedItemsBuilder_ == null) {
          ensureUpdatedItemsIsMutable();
          updatedItems_.set(index, builderForValue.build());
          onChanged();
        } else {
          updatedItemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public Builder addUpdatedItems(com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData value) {
        if (updatedItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatedItemsIsMutable();
          updatedItems_.add(value);
          onChanged();
        } else {
          updatedItemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public Builder addUpdatedItems(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData value) {
        if (updatedItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatedItemsIsMutable();
          updatedItems_.add(index, value);
          onChanged();
        } else {
          updatedItemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public Builder addUpdatedItems(
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder builderForValue) {
        if (updatedItemsBuilder_ == null) {
          ensureUpdatedItemsIsMutable();
          updatedItems_.add(builderForValue.build());
          onChanged();
        } else {
          updatedItemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public Builder addUpdatedItems(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder builderForValue) {
        if (updatedItemsBuilder_ == null) {
          ensureUpdatedItemsIsMutable();
          updatedItems_.add(index, builderForValue.build());
          onChanged();
        } else {
          updatedItemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public Builder addAllUpdatedItems(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> values) {
        if (updatedItemsBuilder_ == null) {
          ensureUpdatedItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, updatedItems_);
          onChanged();
        } else {
          updatedItemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public Builder clearUpdatedItems() {
        if (updatedItemsBuilder_ == null) {
          updatedItems_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          updatedItemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public Builder removeUpdatedItems(int index) {
        if (updatedItemsBuilder_ == null) {
          ensureUpdatedItemsIsMutable();
          updatedItems_.remove(index);
          onChanged();
        } else {
          updatedItemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder getUpdatedItemsBuilder(
          int index) {
        return getUpdatedItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder getUpdatedItemsOrBuilder(
          int index) {
        if (updatedItemsBuilder_ == null) {
          return updatedItems_.get(index);  } else {
          return updatedItemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
           getUpdatedItemsOrBuilderList() {
        if (updatedItemsBuilder_ != null) {
          return updatedItemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(updatedItems_);
        }
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder addUpdatedItemsBuilder() {
        return getUpdatedItemsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.getDefaultInstance());
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder addUpdatedItemsBuilder(
          int index) {
        return getUpdatedItemsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.getDefaultInstance());
      }
      /**
       * <code>repeated .com.icewind.ItemData updatedItems = 1;</code>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder> 
           getUpdatedItemsBuilderList() {
        return getUpdatedItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
          getUpdatedItemsFieldBuilder() {
        if (updatedItemsBuilder_ == null) {
          updatedItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder>(
                  updatedItems_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          updatedItems_ = null;
        }
        return updatedItemsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.icewind.GCItemUpdate)
    }

    static {
      defaultInstance = new GCItemUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.icewind.GCItemUpdate)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_icewind_CGItemUse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_icewind_CGItemUse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_icewind_CGItemSell_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_icewind_CGItemSell_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_icewind_CGItemCompound_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_icewind_CGItemCompound_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_icewind_GCInventoryInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_icewind_GCInventoryInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_icewind_GCItemUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_icewind_GCItemUpdate_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nItem.proto\022\013com.icewind\032\021MessageType.p" +
      "roto\032\024db/DBInventory.proto\"5\n\tCGItemUse\022" +
      "\022\n\ntemplateId\030\001 \002(\005\022\016\n\006amount\030\002 \002(\005:\004\210\265\030" +
      "e\"6\n\nCGItemSell\022\022\n\ntemplateId\030\001 \002(\005\022\016\n\006a" +
      "mount\030\002 \002(\005:\004\210\265\030f\",\n\016CGItemCompound\022\024\n\014t" +
      "oTemplateId\030\001 \002(\005:\004\210\265\030g\">\n\017GCInventoryIn" +
      "fo\022$\n\005items\030\001 \003(\0132\025.com.icewind.ItemData" +
      ":\005\220\265\030\255\002\"B\n\014GCItemUpdate\022+\n\014updatedItems\030" +
      "\001 \003(\0132\025.com.icewind.ItemData:\005\220\265\030\256\002B*\n\033c" +
      "om.mokylin.bleach.protobufB\013ItemMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.icewind.MessageType.getDescriptor(),
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.getDescriptor(),
        }, assigner);
    internal_static_com_icewind_CGItemUse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_icewind_CGItemUse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_icewind_CGItemUse_descriptor,
        new java.lang.String[] { "TemplateId", "Amount", });
    internal_static_com_icewind_CGItemSell_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_icewind_CGItemSell_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_icewind_CGItemSell_descriptor,
        new java.lang.String[] { "TemplateId", "Amount", });
    internal_static_com_icewind_CGItemCompound_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_icewind_CGItemCompound_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_icewind_CGItemCompound_descriptor,
        new java.lang.String[] { "ToTemplateId", });
    internal_static_com_icewind_GCInventoryInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_icewind_GCInventoryInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_icewind_GCInventoryInfo_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_com_icewind_GCItemUpdate_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_icewind_GCItemUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_icewind_GCItemUpdate_descriptor,
        new java.lang.String[] { "UpdatedItems", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.icewind.MessageType.cgMessageType);
    registry.add(com.icewind.MessageType.cgMessageType);
    registry.add(com.icewind.MessageType.cgMessageType);
    registry.add(com.icewind.MessageType.gcMessageType);
    registry.add(com.icewind.MessageType.gcMessageType);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.icewind.MessageType.getDescriptor();
    com.mokylin.bleach.protobuf.db.DBInventoryBlob.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
