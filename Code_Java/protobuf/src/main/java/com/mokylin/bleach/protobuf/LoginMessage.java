// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

package com.mokylin.bleach.protobuf;

public final class LoginMessage {
  private LoginMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CSLoginOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.CSLogin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 serverId = 1;</code>
     *
     * <pre>
     **服务器ID。联服的几个Server共用一个LoginServer，因此登陆时需要选择serverId 
     * </pre>
     */
    boolean hasServerId();
    /**
     * <code>required int32 serverId = 1;</code>
     *
     * <pre>
     **服务器ID。联服的几个Server共用一个LoginServer，因此登陆时需要选择serverId 
     * </pre>
     */
    int getServerId();

    /**
     * <code>required string channel = 2;</code>
     *
     * <pre>
     **渠道ID 
     * </pre>
     */
    boolean hasChannel();
    /**
     * <code>required string channel = 2;</code>
     *
     * <pre>
     **渠道ID 
     * </pre>
     */
    java.lang.String getChannel();
    /**
     * <code>required string channel = 2;</code>
     *
     * <pre>
     **渠道ID 
     * </pre>
     */
    com.google.protobuf.ByteString
        getChannelBytes();

    /**
     * <code>required string accountId = 3;</code>
     *
     * <pre>
     **账号ID 
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>required string accountId = 3;</code>
     *
     * <pre>
     **账号ID 
     * </pre>
     */
    java.lang.String getAccountId();
    /**
     * <code>required string accountId = 3;</code>
     *
     * <pre>
     **账号ID 
     * </pre>
     */
    com.google.protobuf.ByteString
        getAccountIdBytes();

    /**
     * <code>required string key = 4;</code>
     *
     * <pre>
     **登录秘钥 
     * </pre>
     */
    boolean hasKey();
    /**
     * <code>required string key = 4;</code>
     *
     * <pre>
     **登录秘钥 
     * </pre>
     */
    java.lang.String getKey();
    /**
     * <code>required string key = 4;</code>
     *
     * <pre>
     **登录秘钥 
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyBytes();
  }
  /**
   * Protobuf type {@code com.mokylin.CSLogin}
   *
   * <pre>
   **
   * 客户端请求，登录
   * </pre>
   */
  public static final class CSLogin extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.CSLogin)
      CSLoginOrBuilder {
    // Use CSLogin.newBuilder() to construct.
    private CSLogin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSLogin(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSLogin defaultInstance;
    public static CSLogin getDefaultInstance() {
      return defaultInstance;
    }

    public CSLogin getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSLogin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              serverId_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              channel_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              accountId_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              key_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.LoginMessage.internal_static_com_mokylin_CSLogin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.LoginMessage.internal_static_com_mokylin_CSLogin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.LoginMessage.CSLogin.class, com.mokylin.bleach.protobuf.LoginMessage.CSLogin.Builder.class);
    }

    public static com.google.protobuf.Parser<CSLogin> PARSER =
        new com.google.protobuf.AbstractParser<CSLogin>() {
      public CSLogin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSLogin(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSLogin> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SERVERID_FIELD_NUMBER = 1;
    private int serverId_;
    /**
     * <code>required int32 serverId = 1;</code>
     *
     * <pre>
     **服务器ID。联服的几个Server共用一个LoginServer，因此登陆时需要选择serverId 
     * </pre>
     */
    public boolean hasServerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 serverId = 1;</code>
     *
     * <pre>
     **服务器ID。联服的几个Server共用一个LoginServer，因此登陆时需要选择serverId 
     * </pre>
     */
    public int getServerId() {
      return serverId_;
    }

    public static final int CHANNEL_FIELD_NUMBER = 2;
    private java.lang.Object channel_;
    /**
     * <code>required string channel = 2;</code>
     *
     * <pre>
     **渠道ID 
     * </pre>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string channel = 2;</code>
     *
     * <pre>
     **渠道ID 
     * </pre>
     */
    public java.lang.String getChannel() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channel_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string channel = 2;</code>
     *
     * <pre>
     **渠道ID 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getChannelBytes() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACCOUNTID_FIELD_NUMBER = 3;
    private java.lang.Object accountId_;
    /**
     * <code>required string accountId = 3;</code>
     *
     * <pre>
     **账号ID 
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string accountId = 3;</code>
     *
     * <pre>
     **账号ID 
     * </pre>
     */
    public java.lang.String getAccountId() {
      java.lang.Object ref = accountId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          accountId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string accountId = 3;</code>
     *
     * <pre>
     **账号ID 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAccountIdBytes() {
      java.lang.Object ref = accountId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accountId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_FIELD_NUMBER = 4;
    private java.lang.Object key_;
    /**
     * <code>required string key = 4;</code>
     *
     * <pre>
     **登录秘钥 
     * </pre>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string key = 4;</code>
     *
     * <pre>
     **登录秘钥 
     * </pre>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 4;</code>
     *
     * <pre>
     **登录秘钥 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      serverId_ = 0;
      channel_ = "";
      accountId_ = "";
      key_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasServerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChannel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccountId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, serverId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getChannelBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getAccountIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getKeyBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, serverId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getChannelBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAccountIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getKeyBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.LoginMessage.CSLogin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.LoginMessage.CSLogin prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.CSLogin}
     *
     * <pre>
     **
     * 客户端请求，登录
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.CSLogin)
        com.mokylin.bleach.protobuf.LoginMessage.CSLoginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.LoginMessage.internal_static_com_mokylin_CSLogin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.LoginMessage.internal_static_com_mokylin_CSLogin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.LoginMessage.CSLogin.class, com.mokylin.bleach.protobuf.LoginMessage.CSLogin.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.LoginMessage.CSLogin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serverId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.LoginMessage.internal_static_com_mokylin_CSLogin_descriptor;
      }

      public com.mokylin.bleach.protobuf.LoginMessage.CSLogin getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.LoginMessage.CSLogin.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.LoginMessage.CSLogin build() {
        com.mokylin.bleach.protobuf.LoginMessage.CSLogin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.LoginMessage.CSLogin buildPartial() {
        com.mokylin.bleach.protobuf.LoginMessage.CSLogin result = new com.mokylin.bleach.protobuf.LoginMessage.CSLogin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serverId_ = serverId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.key_ = key_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.LoginMessage.CSLogin) {
          return mergeFrom((com.mokylin.bleach.protobuf.LoginMessage.CSLogin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.LoginMessage.CSLogin other) {
        if (other == com.mokylin.bleach.protobuf.LoginMessage.CSLogin.getDefaultInstance()) return this;
        if (other.hasServerId()) {
          setServerId(other.getServerId());
        }
        if (other.hasChannel()) {
          bitField0_ |= 0x00000002;
          channel_ = other.channel_;
          onChanged();
        }
        if (other.hasAccountId()) {
          bitField0_ |= 0x00000004;
          accountId_ = other.accountId_;
          onChanged();
        }
        if (other.hasKey()) {
          bitField0_ |= 0x00000008;
          key_ = other.key_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasServerId()) {
          
          return false;
        }
        if (!hasChannel()) {
          
          return false;
        }
        if (!hasAccountId()) {
          
          return false;
        }
        if (!hasKey()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.LoginMessage.CSLogin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.LoginMessage.CSLogin) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int serverId_ ;
      /**
       * <code>required int32 serverId = 1;</code>
       *
       * <pre>
       **服务器ID。联服的几个Server共用一个LoginServer，因此登陆时需要选择serverId 
       * </pre>
       */
      public boolean hasServerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 serverId = 1;</code>
       *
       * <pre>
       **服务器ID。联服的几个Server共用一个LoginServer，因此登陆时需要选择serverId 
       * </pre>
       */
      public int getServerId() {
        return serverId_;
      }
      /**
       * <code>required int32 serverId = 1;</code>
       *
       * <pre>
       **服务器ID。联服的几个Server共用一个LoginServer，因此登陆时需要选择serverId 
       * </pre>
       */
      public Builder setServerId(int value) {
        bitField0_ |= 0x00000001;
        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 serverId = 1;</code>
       *
       * <pre>
       **服务器ID。联服的几个Server共用一个LoginServer，因此登陆时需要选择serverId 
       * </pre>
       */
      public Builder clearServerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serverId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object channel_ = "";
      /**
       * <code>required string channel = 2;</code>
       *
       * <pre>
       **渠道ID 
       * </pre>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string channel = 2;</code>
       *
       * <pre>
       **渠道ID 
       * </pre>
       */
      public java.lang.String getChannel() {
        java.lang.Object ref = channel_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channel_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string channel = 2;</code>
       *
       * <pre>
       **渠道ID 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChannelBytes() {
        java.lang.Object ref = channel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string channel = 2;</code>
       *
       * <pre>
       **渠道ID 
       * </pre>
       */
      public Builder setChannel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string channel = 2;</code>
       *
       * <pre>
       **渠道ID 
       * </pre>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = getDefaultInstance().getChannel();
        onChanged();
        return this;
      }
      /**
       * <code>required string channel = 2;</code>
       *
       * <pre>
       **渠道ID 
       * </pre>
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object accountId_ = "";
      /**
       * <code>required string accountId = 3;</code>
       *
       * <pre>
       **账号ID 
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string accountId = 3;</code>
       *
       * <pre>
       **账号ID 
       * </pre>
       */
      public java.lang.String getAccountId() {
        java.lang.Object ref = accountId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accountId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string accountId = 3;</code>
       *
       * <pre>
       **账号ID 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAccountIdBytes() {
        java.lang.Object ref = accountId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accountId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string accountId = 3;</code>
       *
       * <pre>
       **账号ID 
       * </pre>
       */
      public Builder setAccountId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string accountId = 3;</code>
       *
       * <pre>
       **账号ID 
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accountId_ = getDefaultInstance().getAccountId();
        onChanged();
        return this;
      }
      /**
       * <code>required string accountId = 3;</code>
       *
       * <pre>
       **账号ID 
       * </pre>
       */
      public Builder setAccountIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        accountId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>required string key = 4;</code>
       *
       * <pre>
       **登录秘钥 
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string key = 4;</code>
       *
       * <pre>
       **登录秘钥 
       * </pre>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string key = 4;</code>
       *
       * <pre>
       **登录秘钥 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 4;</code>
       *
       * <pre>
       **登录秘钥 
       * </pre>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 4;</code>
       *
       * <pre>
       **登录秘钥 
       * </pre>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000008);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 4;</code>
       *
       * <pre>
       **登录秘钥 
       * </pre>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        key_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.CSLogin)
    }

    static {
      defaultInstance = new CSLogin(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.CSLogin)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_CSLogin_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_CSLogin_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Login.proto\022\013com.mokylin\032\021MessageType." +
      "proto\"R\n\007CSLogin\022\020\n\010serverId\030\001 \002(\005\022\017\n\007ch" +
      "annel\030\002 \002(\t\022\021\n\taccountId\030\003 \002(\t\022\013\n\003key\030\004 " +
      "\002(\t:\004\210\265\030\013B+\n\033com.mokylin.bleach.protobuf" +
      "B\014LoginMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.mokylin.bleach.protobuf.MessageType.getDescriptor(),
        }, assigner);
    internal_static_com_mokylin_CSLogin_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_mokylin_CSLogin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_CSLogin_descriptor,
        new java.lang.String[] { "ServerId", "Channel", "AccountId", "Key", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.mokylin.bleach.protobuf.MessageType.cgMessageType);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.mokylin.bleach.protobuf.MessageType.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
