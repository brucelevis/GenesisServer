// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Arena.proto

package com.mokylin.bleach.protobuf;

public final class ArenaMessage {
  private ArenaMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CGArenaOpenPanelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.CGArenaOpenPanel)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.mokylin.CGArenaOpenPanel}
   *
   * <pre>
   **
   * 客户端请求，打开竞技场面板
   * </pre>
   */
  public static final class CGArenaOpenPanel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.CGArenaOpenPanel)
      CGArenaOpenPanelOrBuilder {
    // Use CGArenaOpenPanel.newBuilder() to construct.
    private CGArenaOpenPanel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGArenaOpenPanel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGArenaOpenPanel defaultInstance;
    public static CGArenaOpenPanel getDefaultInstance() {
      return defaultInstance;
    }

    public CGArenaOpenPanel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGArenaOpenPanel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenPanel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenPanel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel.Builder.class);
    }

    public static com.google.protobuf.Parser<CGArenaOpenPanel> PARSER =
        new com.google.protobuf.AbstractParser<CGArenaOpenPanel>() {
      public CGArenaOpenPanel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGArenaOpenPanel(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGArenaOpenPanel> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.CGArenaOpenPanel}
     *
     * <pre>
     **
     * 客户端请求，打开竞技场面板
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.CGArenaOpenPanel)
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenPanel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenPanel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenPanel_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel build() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel result = new com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenPanel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.CGArenaOpenPanel)
    }

    static {
      defaultInstance = new CGArenaOpenPanel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.CGArenaOpenPanel)
  }

  public interface CGArenaAttackOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.CGArenaAttack)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 rank = 1;</code>
     *
     * <pre>
     *排名//
     * </pre>
     */
    boolean hasRank();
    /**
     * <code>required int32 rank = 1;</code>
     *
     * <pre>
     *排名//
     * </pre>
     */
    int getRank();

    /**
     * <code>repeated int64 heroUuids = 2;</code>
     *
     * <pre>
     *攻击阵容//
     * </pre>
     */
    java.util.List<java.lang.Long> getHeroUuidsList();
    /**
     * <code>repeated int64 heroUuids = 2;</code>
     *
     * <pre>
     *攻击阵容//
     * </pre>
     */
    int getHeroUuidsCount();
    /**
     * <code>repeated int64 heroUuids = 2;</code>
     *
     * <pre>
     *攻击阵容//
     * </pre>
     */
    long getHeroUuids(int index);

    /**
     * <code>required bool isUnconditionalAttack = 3;</code>
     *
     * <pre>
     *是否无条件攻打//
     * </pre>
     */
    boolean hasIsUnconditionalAttack();
    /**
     * <code>required bool isUnconditionalAttack = 3;</code>
     *
     * <pre>
     *是否无条件攻打//
     * </pre>
     */
    boolean getIsUnconditionalAttack();
  }
  /**
   * Protobuf type {@code com.mokylin.CGArenaAttack}
   *
   * <pre>
   **
   * 客户端请求，发起挑战
   * </pre>
   */
  public static final class CGArenaAttack extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.CGArenaAttack)
      CGArenaAttackOrBuilder {
    // Use CGArenaAttack.newBuilder() to construct.
    private CGArenaAttack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGArenaAttack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGArenaAttack defaultInstance;
    public static CGArenaAttack getDefaultInstance() {
      return defaultInstance;
    }

    public CGArenaAttack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGArenaAttack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rank_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                heroUuids_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              heroUuids_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                heroUuids_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                heroUuids_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isUnconditionalAttack_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          heroUuids_ = java.util.Collections.unmodifiableList(heroUuids_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaAttack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaAttack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack.Builder.class);
    }

    public static com.google.protobuf.Parser<CGArenaAttack> PARSER =
        new com.google.protobuf.AbstractParser<CGArenaAttack>() {
      public CGArenaAttack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGArenaAttack(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGArenaAttack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RANK_FIELD_NUMBER = 1;
    private int rank_;
    /**
     * <code>required int32 rank = 1;</code>
     *
     * <pre>
     *排名//
     * </pre>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 rank = 1;</code>
     *
     * <pre>
     *排名//
     * </pre>
     */
    public int getRank() {
      return rank_;
    }

    public static final int HEROUUIDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> heroUuids_;
    /**
     * <code>repeated int64 heroUuids = 2;</code>
     *
     * <pre>
     *攻击阵容//
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getHeroUuidsList() {
      return heroUuids_;
    }
    /**
     * <code>repeated int64 heroUuids = 2;</code>
     *
     * <pre>
     *攻击阵容//
     * </pre>
     */
    public int getHeroUuidsCount() {
      return heroUuids_.size();
    }
    /**
     * <code>repeated int64 heroUuids = 2;</code>
     *
     * <pre>
     *攻击阵容//
     * </pre>
     */
    public long getHeroUuids(int index) {
      return heroUuids_.get(index);
    }

    public static final int ISUNCONDITIONALATTACK_FIELD_NUMBER = 3;
    private boolean isUnconditionalAttack_;
    /**
     * <code>required bool isUnconditionalAttack = 3;</code>
     *
     * <pre>
     *是否无条件攻打//
     * </pre>
     */
    public boolean hasIsUnconditionalAttack() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool isUnconditionalAttack = 3;</code>
     *
     * <pre>
     *是否无条件攻打//
     * </pre>
     */
    public boolean getIsUnconditionalAttack() {
      return isUnconditionalAttack_;
    }

    private void initFields() {
      rank_ = 0;
      heroUuids_ = java.util.Collections.emptyList();
      isUnconditionalAttack_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsUnconditionalAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rank_);
      }
      for (int i = 0; i < heroUuids_.size(); i++) {
        output.writeInt64(2, heroUuids_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, isUnconditionalAttack_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rank_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heroUuids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(heroUuids_.get(i));
        }
        size += dataSize;
        size += 1 * getHeroUuidsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isUnconditionalAttack_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.CGArenaAttack}
     *
     * <pre>
     **
     * 客户端请求，发起挑战
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.CGArenaAttack)
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaAttack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaAttack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        heroUuids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        isUnconditionalAttack_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaAttack_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack build() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack result = new com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rank_ = rank_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          heroUuids_ = java.util.Collections.unmodifiableList(heroUuids_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.heroUuids_ = heroUuids_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isUnconditionalAttack_ = isUnconditionalAttack_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack.getDefaultInstance()) return this;
        if (other.hasRank()) {
          setRank(other.getRank());
        }
        if (!other.heroUuids_.isEmpty()) {
          if (heroUuids_.isEmpty()) {
            heroUuids_ = other.heroUuids_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHeroUuidsIsMutable();
            heroUuids_.addAll(other.heroUuids_);
          }
          onChanged();
        }
        if (other.hasIsUnconditionalAttack()) {
          setIsUnconditionalAttack(other.getIsUnconditionalAttack());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRank()) {
          
          return false;
        }
        if (!hasIsUnconditionalAttack()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.CGArenaAttack) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int rank_ ;
      /**
       * <code>required int32 rank = 1;</code>
       *
       * <pre>
       *排名//
       * </pre>
       */
      public boolean hasRank() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 rank = 1;</code>
       *
       * <pre>
       *排名//
       * </pre>
       */
      public int getRank() {
        return rank_;
      }
      /**
       * <code>required int32 rank = 1;</code>
       *
       * <pre>
       *排名//
       * </pre>
       */
      public Builder setRank(int value) {
        bitField0_ |= 0x00000001;
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 rank = 1;</code>
       *
       * <pre>
       *排名//
       * </pre>
       */
      public Builder clearRank() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rank_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> heroUuids_ = java.util.Collections.emptyList();
      private void ensureHeroUuidsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          heroUuids_ = new java.util.ArrayList<java.lang.Long>(heroUuids_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 heroUuids = 2;</code>
       *
       * <pre>
       *攻击阵容//
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getHeroUuidsList() {
        return java.util.Collections.unmodifiableList(heroUuids_);
      }
      /**
       * <code>repeated int64 heroUuids = 2;</code>
       *
       * <pre>
       *攻击阵容//
       * </pre>
       */
      public int getHeroUuidsCount() {
        return heroUuids_.size();
      }
      /**
       * <code>repeated int64 heroUuids = 2;</code>
       *
       * <pre>
       *攻击阵容//
       * </pre>
       */
      public long getHeroUuids(int index) {
        return heroUuids_.get(index);
      }
      /**
       * <code>repeated int64 heroUuids = 2;</code>
       *
       * <pre>
       *攻击阵容//
       * </pre>
       */
      public Builder setHeroUuids(
          int index, long value) {
        ensureHeroUuidsIsMutable();
        heroUuids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 heroUuids = 2;</code>
       *
       * <pre>
       *攻击阵容//
       * </pre>
       */
      public Builder addHeroUuids(long value) {
        ensureHeroUuidsIsMutable();
        heroUuids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 heroUuids = 2;</code>
       *
       * <pre>
       *攻击阵容//
       * </pre>
       */
      public Builder addAllHeroUuids(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureHeroUuidsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heroUuids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 heroUuids = 2;</code>
       *
       * <pre>
       *攻击阵容//
       * </pre>
       */
      public Builder clearHeroUuids() {
        heroUuids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private boolean isUnconditionalAttack_ ;
      /**
       * <code>required bool isUnconditionalAttack = 3;</code>
       *
       * <pre>
       *是否无条件攻打//
       * </pre>
       */
      public boolean hasIsUnconditionalAttack() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool isUnconditionalAttack = 3;</code>
       *
       * <pre>
       *是否无条件攻打//
       * </pre>
       */
      public boolean getIsUnconditionalAttack() {
        return isUnconditionalAttack_;
      }
      /**
       * <code>required bool isUnconditionalAttack = 3;</code>
       *
       * <pre>
       *是否无条件攻打//
       * </pre>
       */
      public Builder setIsUnconditionalAttack(boolean value) {
        bitField0_ |= 0x00000004;
        isUnconditionalAttack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool isUnconditionalAttack = 3;</code>
       *
       * <pre>
       *是否无条件攻打//
       * </pre>
       */
      public Builder clearIsUnconditionalAttack() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isUnconditionalAttack_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.CGArenaAttack)
    }

    static {
      defaultInstance = new CGArenaAttack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.CGArenaAttack)
  }

  public interface CGArenaResetEnemysOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.CGArenaResetEnemys)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.mokylin.CGArenaResetEnemys}
   *
   * <pre>
   **
   * 客户端请求，重置挑战列表
   * </pre>
   */
  public static final class CGArenaResetEnemys extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.CGArenaResetEnemys)
      CGArenaResetEnemysOrBuilder {
    // Use CGArenaResetEnemys.newBuilder() to construct.
    private CGArenaResetEnemys(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGArenaResetEnemys(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGArenaResetEnemys defaultInstance;
    public static CGArenaResetEnemys getDefaultInstance() {
      return defaultInstance;
    }

    public CGArenaResetEnemys getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGArenaResetEnemys(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaResetEnemys_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaResetEnemys_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys.Builder.class);
    }

    public static com.google.protobuf.Parser<CGArenaResetEnemys> PARSER =
        new com.google.protobuf.AbstractParser<CGArenaResetEnemys>() {
      public CGArenaResetEnemys parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGArenaResetEnemys(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGArenaResetEnemys> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.CGArenaResetEnemys}
     *
     * <pre>
     **
     * 客户端请求，重置挑战列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.CGArenaResetEnemys)
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemysOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaResetEnemys_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaResetEnemys_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaResetEnemys_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys build() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys result = new com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.CGArenaResetEnemys) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.CGArenaResetEnemys)
    }

    static {
      defaultInstance = new CGArenaResetEnemys(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.CGArenaResetEnemys)
  }

  public interface CGArenaOpenReportsPanelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.CGArenaOpenReportsPanel)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.mokylin.CGArenaOpenReportsPanel}
   *
   * <pre>
   **
   * 客户端请求，打开战报列表面板
   * </pre>
   */
  public static final class CGArenaOpenReportsPanel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.CGArenaOpenReportsPanel)
      CGArenaOpenReportsPanelOrBuilder {
    // Use CGArenaOpenReportsPanel.newBuilder() to construct.
    private CGArenaOpenReportsPanel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGArenaOpenReportsPanel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGArenaOpenReportsPanel defaultInstance;
    public static CGArenaOpenReportsPanel getDefaultInstance() {
      return defaultInstance;
    }

    public CGArenaOpenReportsPanel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGArenaOpenReportsPanel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenReportsPanel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenReportsPanel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel.Builder.class);
    }

    public static com.google.protobuf.Parser<CGArenaOpenReportsPanel> PARSER =
        new com.google.protobuf.AbstractParser<CGArenaOpenReportsPanel>() {
      public CGArenaOpenReportsPanel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGArenaOpenReportsPanel(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGArenaOpenReportsPanel> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.CGArenaOpenReportsPanel}
     *
     * <pre>
     **
     * 客户端请求，打开战报列表面板
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.CGArenaOpenReportsPanel)
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenReportsPanel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenReportsPanel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaOpenReportsPanel_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel build() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel result = new com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.CGArenaOpenReportsPanel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.CGArenaOpenReportsPanel)
    }

    static {
      defaultInstance = new CGArenaOpenReportsPanel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.CGArenaOpenReportsPanel)
  }

  public interface CGArenaViewAllReportsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.CGArenaViewAllReports)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.mokylin.CGArenaViewAllReports}
   *
   * <pre>
   **
   * 客户端请求，阅览所有战报（并不是播放战报）
   * </pre>
   */
  public static final class CGArenaViewAllReports extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.CGArenaViewAllReports)
      CGArenaViewAllReportsOrBuilder {
    // Use CGArenaViewAllReports.newBuilder() to construct.
    private CGArenaViewAllReports(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGArenaViewAllReports(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGArenaViewAllReports defaultInstance;
    public static CGArenaViewAllReports getDefaultInstance() {
      return defaultInstance;
    }

    public CGArenaViewAllReports getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGArenaViewAllReports(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaViewAllReports_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaViewAllReports_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports.Builder.class);
    }

    public static com.google.protobuf.Parser<CGArenaViewAllReports> PARSER =
        new com.google.protobuf.AbstractParser<CGArenaViewAllReports>() {
      public CGArenaViewAllReports parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGArenaViewAllReports(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGArenaViewAllReports> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.CGArenaViewAllReports}
     *
     * <pre>
     **
     * 客户端请求，阅览所有战报（并不是播放战报）
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.CGArenaViewAllReports)
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReportsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaViewAllReports_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaViewAllReports_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports.class, com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_CGArenaViewAllReports_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports build() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports result = new com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.CGArenaViewAllReports) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.CGArenaViewAllReports)
    }

    static {
      defaultInstance = new CGArenaViewAllReports(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.CGArenaViewAllReports)
  }

  public interface GCArenaInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.GCArenaInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> 
        getEnemiesList();
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.Enemy getEnemies(int index);
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    int getEnemiesCount();
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
        getEnemiesOrBuilderList();
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder getEnemiesOrBuilder(
        int index);

    /**
     * <code>required int32 myRank = 2;</code>
     *
     * <pre>
     *我的排名//
     * </pre>
     */
    boolean hasMyRank();
    /**
     * <code>required int32 myRank = 2;</code>
     *
     * <pre>
     *我的排名//
     * </pre>
     */
    int getMyRank();

    /**
     * <code>required int32 myBestRank = 3;</code>
     *
     * <pre>
     *我的历史最高排名//
     * </pre>
     */
    boolean hasMyBestRank();
    /**
     * <code>required int32 myBestRank = 3;</code>
     *
     * <pre>
     *我的历史最高排名//
     * </pre>
     */
    int getMyBestRank();

    /**
     * <code>required bool isReportNotView = 4;</code>
     *
     * <pre>
     *是否有未浏览的对战记录//
     * </pre>
     */
    boolean hasIsReportNotView();
    /**
     * <code>required bool isReportNotView = 4;</code>
     *
     * <pre>
     *是否有未浏览的对战记录//
     * </pre>
     */
    boolean getIsReportNotView();

    /**
     * <code>required int32 totalAttackCount = 5;</code>
     *
     * <pre>
     **累计活跃攻击次数 
     * </pre>
     */
    boolean hasTotalAttackCount();
    /**
     * <code>required int32 totalAttackCount = 5;</code>
     *
     * <pre>
     **累计活跃攻击次数 
     * </pre>
     */
    int getTotalAttackCount();
  }
  /**
   * Protobuf type {@code com.mokylin.GCArenaInfo}
   *
   * <pre>
   **
   * 服务器通知，竞技场面板信息
   * </pre>
   */
  public static final class GCArenaInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.GCArenaInfo)
      GCArenaInfoOrBuilder {
    // Use GCArenaInfo.newBuilder() to construct.
    private GCArenaInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCArenaInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCArenaInfo defaultInstance;
    public static GCArenaInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GCArenaInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCArenaInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                enemies_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.Enemy>();
                mutable_bitField0_ |= 0x00000001;
              }
              enemies_.add(input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.Enemy.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              myRank_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              myBestRank_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              isReportNotView_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              totalAttackCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          enemies_ = java.util.Collections.unmodifiableList(enemies_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GCArenaInfo> PARSER =
        new com.google.protobuf.AbstractParser<GCArenaInfo>() {
      public GCArenaInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCArenaInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCArenaInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENEMIES_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> enemies_;
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> getEnemiesList() {
      return enemies_;
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
        getEnemiesOrBuilderList() {
      return enemies_;
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public int getEnemiesCount() {
      return enemies_.size();
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.Enemy getEnemies(int index) {
      return enemies_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder getEnemiesOrBuilder(
        int index) {
      return enemies_.get(index);
    }

    public static final int MYRANK_FIELD_NUMBER = 2;
    private int myRank_;
    /**
     * <code>required int32 myRank = 2;</code>
     *
     * <pre>
     *我的排名//
     * </pre>
     */
    public boolean hasMyRank() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 myRank = 2;</code>
     *
     * <pre>
     *我的排名//
     * </pre>
     */
    public int getMyRank() {
      return myRank_;
    }

    public static final int MYBESTRANK_FIELD_NUMBER = 3;
    private int myBestRank_;
    /**
     * <code>required int32 myBestRank = 3;</code>
     *
     * <pre>
     *我的历史最高排名//
     * </pre>
     */
    public boolean hasMyBestRank() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 myBestRank = 3;</code>
     *
     * <pre>
     *我的历史最高排名//
     * </pre>
     */
    public int getMyBestRank() {
      return myBestRank_;
    }

    public static final int ISREPORTNOTVIEW_FIELD_NUMBER = 4;
    private boolean isReportNotView_;
    /**
     * <code>required bool isReportNotView = 4;</code>
     *
     * <pre>
     *是否有未浏览的对战记录//
     * </pre>
     */
    public boolean hasIsReportNotView() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool isReportNotView = 4;</code>
     *
     * <pre>
     *是否有未浏览的对战记录//
     * </pre>
     */
    public boolean getIsReportNotView() {
      return isReportNotView_;
    }

    public static final int TOTALATTACKCOUNT_FIELD_NUMBER = 5;
    private int totalAttackCount_;
    /**
     * <code>required int32 totalAttackCount = 5;</code>
     *
     * <pre>
     **累计活跃攻击次数 
     * </pre>
     */
    public boolean hasTotalAttackCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 totalAttackCount = 5;</code>
     *
     * <pre>
     **累计活跃攻击次数 
     * </pre>
     */
    public int getTotalAttackCount() {
      return totalAttackCount_;
    }

    private void initFields() {
      enemies_ = java.util.Collections.emptyList();
      myRank_ = 0;
      myBestRank_ = 0;
      isReportNotView_ = false;
      totalAttackCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMyRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMyBestRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsReportNotView()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalAttackCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getEnemiesCount(); i++) {
        if (!getEnemies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < enemies_.size(); i++) {
        output.writeMessage(1, enemies_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, myRank_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, myBestRank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, isReportNotView_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, totalAttackCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < enemies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, enemies_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, myRank_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, myBestRank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isReportNotView_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, totalAttackCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.GCArenaInfo}
     *
     * <pre>
     **
     * 服务器通知，竞技场面板信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.GCArenaInfo)
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEnemiesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (enemiesBuilder_ == null) {
          enemies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          enemiesBuilder_.clear();
        }
        myRank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        myBestRank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isReportNotView_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        totalAttackCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaInfo_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo build() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo result = new com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (enemiesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            enemies_ = java.util.Collections.unmodifiableList(enemies_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.enemies_ = enemies_;
        } else {
          result.enemies_ = enemiesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.myRank_ = myRank_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.myBestRank_ = myBestRank_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isReportNotView_ = isReportNotView_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalAttackCount_ = totalAttackCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo.getDefaultInstance()) return this;
        if (enemiesBuilder_ == null) {
          if (!other.enemies_.isEmpty()) {
            if (enemies_.isEmpty()) {
              enemies_ = other.enemies_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEnemiesIsMutable();
              enemies_.addAll(other.enemies_);
            }
            onChanged();
          }
        } else {
          if (!other.enemies_.isEmpty()) {
            if (enemiesBuilder_.isEmpty()) {
              enemiesBuilder_.dispose();
              enemiesBuilder_ = null;
              enemies_ = other.enemies_;
              bitField0_ = (bitField0_ & ~0x00000001);
              enemiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEnemiesFieldBuilder() : null;
            } else {
              enemiesBuilder_.addAllMessages(other.enemies_);
            }
          }
        }
        if (other.hasMyRank()) {
          setMyRank(other.getMyRank());
        }
        if (other.hasMyBestRank()) {
          setMyBestRank(other.getMyBestRank());
        }
        if (other.hasIsReportNotView()) {
          setIsReportNotView(other.getIsReportNotView());
        }
        if (other.hasTotalAttackCount()) {
          setTotalAttackCount(other.getTotalAttackCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMyRank()) {
          
          return false;
        }
        if (!hasMyBestRank()) {
          
          return false;
        }
        if (!hasIsReportNotView()) {
          
          return false;
        }
        if (!hasTotalAttackCount()) {
          
          return false;
        }
        for (int i = 0; i < getEnemiesCount(); i++) {
          if (!getEnemies(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.GCArenaInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> enemies_ =
        java.util.Collections.emptyList();
      private void ensureEnemiesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          enemies_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.Enemy>(enemies_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.Enemy, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> enemiesBuilder_;

      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> getEnemiesList() {
        if (enemiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(enemies_);
        } else {
          return enemiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public int getEnemiesCount() {
        if (enemiesBuilder_ == null) {
          return enemies_.size();
        } else {
          return enemiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy getEnemies(int index) {
        if (enemiesBuilder_ == null) {
          return enemies_.get(index);
        } else {
          return enemiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder setEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.set(index, value);
          onChanged();
        } else {
          enemiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder setEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.set(index, builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addEnemies(com.mokylin.bleach.protobuf.ArenaMessage.Enemy value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.add(value);
          onChanged();
        } else {
          enemiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.add(index, value);
          onChanged();
        } else {
          enemiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addEnemies(
          com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.add(builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.add(index, builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addAllEnemies(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.ArenaMessage.Enemy> values) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, enemies_);
          onChanged();
        } else {
          enemiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder clearEnemies() {
        if (enemiesBuilder_ == null) {
          enemies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          enemiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder removeEnemies(int index) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.remove(index);
          onChanged();
        } else {
          enemiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder getEnemiesBuilder(
          int index) {
        return getEnemiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder getEnemiesOrBuilder(
          int index) {
        if (enemiesBuilder_ == null) {
          return enemies_.get(index);  } else {
          return enemiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
           getEnemiesOrBuilderList() {
        if (enemiesBuilder_ != null) {
          return enemiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(enemies_);
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder addEnemiesBuilder() {
        return getEnemiesFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.ArenaMessage.Enemy.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder addEnemiesBuilder(
          int index) {
        return getEnemiesFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder> 
           getEnemiesBuilderList() {
        return getEnemiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.Enemy, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
          getEnemiesFieldBuilder() {
        if (enemiesBuilder_ == null) {
          enemiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.Enemy, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder>(
                  enemies_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          enemies_ = null;
        }
        return enemiesBuilder_;
      }

      private int myRank_ ;
      /**
       * <code>required int32 myRank = 2;</code>
       *
       * <pre>
       *我的排名//
       * </pre>
       */
      public boolean hasMyRank() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 myRank = 2;</code>
       *
       * <pre>
       *我的排名//
       * </pre>
       */
      public int getMyRank() {
        return myRank_;
      }
      /**
       * <code>required int32 myRank = 2;</code>
       *
       * <pre>
       *我的排名//
       * </pre>
       */
      public Builder setMyRank(int value) {
        bitField0_ |= 0x00000002;
        myRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 myRank = 2;</code>
       *
       * <pre>
       *我的排名//
       * </pre>
       */
      public Builder clearMyRank() {
        bitField0_ = (bitField0_ & ~0x00000002);
        myRank_ = 0;
        onChanged();
        return this;
      }

      private int myBestRank_ ;
      /**
       * <code>required int32 myBestRank = 3;</code>
       *
       * <pre>
       *我的历史最高排名//
       * </pre>
       */
      public boolean hasMyBestRank() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 myBestRank = 3;</code>
       *
       * <pre>
       *我的历史最高排名//
       * </pre>
       */
      public int getMyBestRank() {
        return myBestRank_;
      }
      /**
       * <code>required int32 myBestRank = 3;</code>
       *
       * <pre>
       *我的历史最高排名//
       * </pre>
       */
      public Builder setMyBestRank(int value) {
        bitField0_ |= 0x00000004;
        myBestRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 myBestRank = 3;</code>
       *
       * <pre>
       *我的历史最高排名//
       * </pre>
       */
      public Builder clearMyBestRank() {
        bitField0_ = (bitField0_ & ~0x00000004);
        myBestRank_ = 0;
        onChanged();
        return this;
      }

      private boolean isReportNotView_ ;
      /**
       * <code>required bool isReportNotView = 4;</code>
       *
       * <pre>
       *是否有未浏览的对战记录//
       * </pre>
       */
      public boolean hasIsReportNotView() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool isReportNotView = 4;</code>
       *
       * <pre>
       *是否有未浏览的对战记录//
       * </pre>
       */
      public boolean getIsReportNotView() {
        return isReportNotView_;
      }
      /**
       * <code>required bool isReportNotView = 4;</code>
       *
       * <pre>
       *是否有未浏览的对战记录//
       * </pre>
       */
      public Builder setIsReportNotView(boolean value) {
        bitField0_ |= 0x00000008;
        isReportNotView_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool isReportNotView = 4;</code>
       *
       * <pre>
       *是否有未浏览的对战记录//
       * </pre>
       */
      public Builder clearIsReportNotView() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isReportNotView_ = false;
        onChanged();
        return this;
      }

      private int totalAttackCount_ ;
      /**
       * <code>required int32 totalAttackCount = 5;</code>
       *
       * <pre>
       **累计活跃攻击次数 
       * </pre>
       */
      public boolean hasTotalAttackCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 totalAttackCount = 5;</code>
       *
       * <pre>
       **累计活跃攻击次数 
       * </pre>
       */
      public int getTotalAttackCount() {
        return totalAttackCount_;
      }
      /**
       * <code>required int32 totalAttackCount = 5;</code>
       *
       * <pre>
       **累计活跃攻击次数 
       * </pre>
       */
      public Builder setTotalAttackCount(int value) {
        bitField0_ |= 0x00000010;
        totalAttackCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 totalAttackCount = 5;</code>
       *
       * <pre>
       **累计活跃攻击次数 
       * </pre>
       */
      public Builder clearTotalAttackCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalAttackCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.GCArenaInfo)
    }

    static {
      defaultInstance = new GCArenaInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.GCArenaInfo)
  }

  public interface EnemyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.Enemy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 uuid = 1;</code>
     *
     * <pre>
     *数据库ID//
     * </pre>
     */
    boolean hasUuid();
    /**
     * <code>required int64 uuid = 1;</code>
     *
     * <pre>
     *数据库ID//
     * </pre>
     */
    long getUuid();

    /**
     * <code>required int32 rank = 2;</code>
     *
     * <pre>
     *排名//
     * </pre>
     */
    boolean hasRank();
    /**
     * <code>required int32 rank = 2;</code>
     *
     * <pre>
     *排名//
     * </pre>
     */
    int getRank();

    /**
     * <code>required int32 force = 3;</code>
     *
     * <pre>
     *战力//
     * </pre>
     */
    boolean hasForce();
    /**
     * <code>required int32 force = 3;</code>
     *
     * <pre>
     *战力//
     * </pre>
     */
    int getForce();

    /**
     * <code>required int32 avatar = 4;</code>
     *
     * <pre>
     *作为外形展示的英雄模板ID//
     * </pre>
     */
    boolean hasAvatar();
    /**
     * <code>required int32 avatar = 4;</code>
     *
     * <pre>
     *作为外形展示的英雄模板ID//
     * </pre>
     */
    int getAvatar();

    /**
     * <code>required int32 headFrameId = 5;</code>
     *
     * <pre>
     *头像框//
     * </pre>
     */
    boolean hasHeadFrameId();
    /**
     * <code>required int32 headFrameId = 5;</code>
     *
     * <pre>
     *头像框//
     * </pre>
     */
    int getHeadFrameId();

    /**
     * <code>required int32 level = 6;</code>
     *
     * <pre>
     *等级//
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 6;</code>
     *
     * <pre>
     *等级//
     * </pre>
     */
    int getLevel();

    /**
     * <code>required string name = 7;</code>
     *
     * <pre>
     *名字//
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 7;</code>
     *
     * <pre>
     *名字//
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 7;</code>
     *
     * <pre>
     *名字//
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero> 
        getEnemyHerosList();
    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero getEnemyHeros(int index);
    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    int getEnemyHerosCount();
    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder> 
        getEnemyHerosOrBuilderList();
    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder getEnemyHerosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.Enemy}
   *
   * <pre>
   **
   * 可挑战的对手信息
   * </pre>
   */
  public static final class Enemy extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.Enemy)
      EnemyOrBuilder {
    // Use Enemy.newBuilder() to construct.
    private Enemy(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Enemy(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Enemy defaultInstance;
    public static Enemy getDefaultInstance() {
      return defaultInstance;
    }

    public Enemy getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Enemy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rank_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              force_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              avatar_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              headFrameId_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              level_ = input.readInt32();
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              name_ = bs;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                enemyHeros_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero>();
                mutable_bitField0_ |= 0x00000080;
              }
              enemyHeros_.add(input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          enemyHeros_ = java.util.Collections.unmodifiableList(enemyHeros_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_Enemy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_Enemy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.Enemy.class, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder.class);
    }

    public static com.google.protobuf.Parser<Enemy> PARSER =
        new com.google.protobuf.AbstractParser<Enemy>() {
      public Enemy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Enemy(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Enemy> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private long uuid_;
    /**
     * <code>required int64 uuid = 1;</code>
     *
     * <pre>
     *数据库ID//
     * </pre>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 uuid = 1;</code>
     *
     * <pre>
     *数据库ID//
     * </pre>
     */
    public long getUuid() {
      return uuid_;
    }

    public static final int RANK_FIELD_NUMBER = 2;
    private int rank_;
    /**
     * <code>required int32 rank = 2;</code>
     *
     * <pre>
     *排名//
     * </pre>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 rank = 2;</code>
     *
     * <pre>
     *排名//
     * </pre>
     */
    public int getRank() {
      return rank_;
    }

    public static final int FORCE_FIELD_NUMBER = 3;
    private int force_;
    /**
     * <code>required int32 force = 3;</code>
     *
     * <pre>
     *战力//
     * </pre>
     */
    public boolean hasForce() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 force = 3;</code>
     *
     * <pre>
     *战力//
     * </pre>
     */
    public int getForce() {
      return force_;
    }

    public static final int AVATAR_FIELD_NUMBER = 4;
    private int avatar_;
    /**
     * <code>required int32 avatar = 4;</code>
     *
     * <pre>
     *作为外形展示的英雄模板ID//
     * </pre>
     */
    public boolean hasAvatar() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 avatar = 4;</code>
     *
     * <pre>
     *作为外形展示的英雄模板ID//
     * </pre>
     */
    public int getAvatar() {
      return avatar_;
    }

    public static final int HEADFRAMEID_FIELD_NUMBER = 5;
    private int headFrameId_;
    /**
     * <code>required int32 headFrameId = 5;</code>
     *
     * <pre>
     *头像框//
     * </pre>
     */
    public boolean hasHeadFrameId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 headFrameId = 5;</code>
     *
     * <pre>
     *头像框//
     * </pre>
     */
    public int getHeadFrameId() {
      return headFrameId_;
    }

    public static final int LEVEL_FIELD_NUMBER = 6;
    private int level_;
    /**
     * <code>required int32 level = 6;</code>
     *
     * <pre>
     *等级//
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 level = 6;</code>
     *
     * <pre>
     *等级//
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    public static final int NAME_FIELD_NUMBER = 7;
    private java.lang.Object name_;
    /**
     * <code>required string name = 7;</code>
     *
     * <pre>
     *名字//
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required string name = 7;</code>
     *
     * <pre>
     *名字//
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 7;</code>
     *
     * <pre>
     *名字//
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENEMYHEROS_FIELD_NUMBER = 8;
    private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero> enemyHeros_;
    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero> getEnemyHerosList() {
      return enemyHeros_;
    }
    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder> 
        getEnemyHerosOrBuilderList() {
      return enemyHeros_;
    }
    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    public int getEnemyHerosCount() {
      return enemyHeros_.size();
    }
    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero getEnemyHeros(int index) {
      return enemyHeros_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
     *
     * <pre>
     *上阵英雄列表//
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder getEnemyHerosOrBuilder(
        int index) {
      return enemyHeros_.get(index);
    }

    private void initFields() {
      uuid_ = 0L;
      rank_ = 0;
      force_ = 0;
      avatar_ = 0;
      headFrameId_ = 0;
      level_ = 0;
      name_ = "";
      enemyHeros_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAvatar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeadFrameId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getEnemyHerosCount(); i++) {
        if (!getEnemyHeros(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, rank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, force_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, avatar_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, headFrameId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, level_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getNameBytes());
      }
      for (int i = 0; i < enemyHeros_.size(); i++) {
        output.writeMessage(8, enemyHeros_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, force_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, avatar_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, headFrameId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, level_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getNameBytes());
      }
      for (int i = 0; i < enemyHeros_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, enemyHeros_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.Enemy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.Enemy prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.Enemy}
     *
     * <pre>
     **
     * 可挑战的对手信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.Enemy)
        com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_Enemy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_Enemy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.Enemy.class, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.Enemy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEnemyHerosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        rank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        force_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        avatar_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        headFrameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        if (enemyHerosBuilder_ == null) {
          enemyHeros_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          enemyHerosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_Enemy_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.Enemy.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy build() {
        com.mokylin.bleach.protobuf.ArenaMessage.Enemy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.Enemy result = new com.mokylin.bleach.protobuf.ArenaMessage.Enemy(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rank_ = rank_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.force_ = force_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.avatar_ = avatar_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.headFrameId_ = headFrameId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.name_ = name_;
        if (enemyHerosBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            enemyHeros_ = java.util.Collections.unmodifiableList(enemyHeros_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.enemyHeros_ = enemyHeros_;
        } else {
          result.enemyHeros_ = enemyHerosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.Enemy) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.Enemy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.Enemy other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.Enemy.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasRank()) {
          setRank(other.getRank());
        }
        if (other.hasForce()) {
          setForce(other.getForce());
        }
        if (other.hasAvatar()) {
          setAvatar(other.getAvatar());
        }
        if (other.hasHeadFrameId()) {
          setHeadFrameId(other.getHeadFrameId());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000040;
          name_ = other.name_;
          onChanged();
        }
        if (enemyHerosBuilder_ == null) {
          if (!other.enemyHeros_.isEmpty()) {
            if (enemyHeros_.isEmpty()) {
              enemyHeros_ = other.enemyHeros_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureEnemyHerosIsMutable();
              enemyHeros_.addAll(other.enemyHeros_);
            }
            onChanged();
          }
        } else {
          if (!other.enemyHeros_.isEmpty()) {
            if (enemyHerosBuilder_.isEmpty()) {
              enemyHerosBuilder_.dispose();
              enemyHerosBuilder_ = null;
              enemyHeros_ = other.enemyHeros_;
              bitField0_ = (bitField0_ & ~0x00000080);
              enemyHerosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEnemyHerosFieldBuilder() : null;
            } else {
              enemyHerosBuilder_.addAllMessages(other.enemyHeros_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasRank()) {
          
          return false;
        }
        if (!hasForce()) {
          
          return false;
        }
        if (!hasAvatar()) {
          
          return false;
        }
        if (!hasHeadFrameId()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getEnemyHerosCount(); i++) {
          if (!getEnemyHeros(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.Enemy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.Enemy) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long uuid_ ;
      /**
       * <code>required int64 uuid = 1;</code>
       *
       * <pre>
       *数据库ID//
       * </pre>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 uuid = 1;</code>
       *
       * <pre>
       *数据库ID//
       * </pre>
       */
      public long getUuid() {
        return uuid_;
      }
      /**
       * <code>required int64 uuid = 1;</code>
       *
       * <pre>
       *数据库ID//
       * </pre>
       */
      public Builder setUuid(long value) {
        bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 uuid = 1;</code>
       *
       * <pre>
       *数据库ID//
       * </pre>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = 0L;
        onChanged();
        return this;
      }

      private int rank_ ;
      /**
       * <code>required int32 rank = 2;</code>
       *
       * <pre>
       *排名//
       * </pre>
       */
      public boolean hasRank() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 rank = 2;</code>
       *
       * <pre>
       *排名//
       * </pre>
       */
      public int getRank() {
        return rank_;
      }
      /**
       * <code>required int32 rank = 2;</code>
       *
       * <pre>
       *排名//
       * </pre>
       */
      public Builder setRank(int value) {
        bitField0_ |= 0x00000002;
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 rank = 2;</code>
       *
       * <pre>
       *排名//
       * </pre>
       */
      public Builder clearRank() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rank_ = 0;
        onChanged();
        return this;
      }

      private int force_ ;
      /**
       * <code>required int32 force = 3;</code>
       *
       * <pre>
       *战力//
       * </pre>
       */
      public boolean hasForce() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 force = 3;</code>
       *
       * <pre>
       *战力//
       * </pre>
       */
      public int getForce() {
        return force_;
      }
      /**
       * <code>required int32 force = 3;</code>
       *
       * <pre>
       *战力//
       * </pre>
       */
      public Builder setForce(int value) {
        bitField0_ |= 0x00000004;
        force_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 force = 3;</code>
       *
       * <pre>
       *战力//
       * </pre>
       */
      public Builder clearForce() {
        bitField0_ = (bitField0_ & ~0x00000004);
        force_ = 0;
        onChanged();
        return this;
      }

      private int avatar_ ;
      /**
       * <code>required int32 avatar = 4;</code>
       *
       * <pre>
       *作为外形展示的英雄模板ID//
       * </pre>
       */
      public boolean hasAvatar() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 avatar = 4;</code>
       *
       * <pre>
       *作为外形展示的英雄模板ID//
       * </pre>
       */
      public int getAvatar() {
        return avatar_;
      }
      /**
       * <code>required int32 avatar = 4;</code>
       *
       * <pre>
       *作为外形展示的英雄模板ID//
       * </pre>
       */
      public Builder setAvatar(int value) {
        bitField0_ |= 0x00000008;
        avatar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 avatar = 4;</code>
       *
       * <pre>
       *作为外形展示的英雄模板ID//
       * </pre>
       */
      public Builder clearAvatar() {
        bitField0_ = (bitField0_ & ~0x00000008);
        avatar_ = 0;
        onChanged();
        return this;
      }

      private int headFrameId_ ;
      /**
       * <code>required int32 headFrameId = 5;</code>
       *
       * <pre>
       *头像框//
       * </pre>
       */
      public boolean hasHeadFrameId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 headFrameId = 5;</code>
       *
       * <pre>
       *头像框//
       * </pre>
       */
      public int getHeadFrameId() {
        return headFrameId_;
      }
      /**
       * <code>required int32 headFrameId = 5;</code>
       *
       * <pre>
       *头像框//
       * </pre>
       */
      public Builder setHeadFrameId(int value) {
        bitField0_ |= 0x00000010;
        headFrameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 headFrameId = 5;</code>
       *
       * <pre>
       *头像框//
       * </pre>
       */
      public Builder clearHeadFrameId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        headFrameId_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>required int32 level = 6;</code>
       *
       * <pre>
       *等级//
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 level = 6;</code>
       *
       * <pre>
       *等级//
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 6;</code>
       *
       * <pre>
       *等级//
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000020;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 6;</code>
       *
       * <pre>
       *等级//
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        level_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 7;</code>
       *
       * <pre>
       *名字//
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required string name = 7;</code>
       *
       * <pre>
       *名字//
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 7;</code>
       *
       * <pre>
       *名字//
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 7;</code>
       *
       * <pre>
       *名字//
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 7;</code>
       *
       * <pre>
       *名字//
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 7;</code>
       *
       * <pre>
       *名字//
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero> enemyHeros_ =
        java.util.Collections.emptyList();
      private void ensureEnemyHerosIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          enemyHeros_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero>(enemyHeros_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder> enemyHerosBuilder_;

      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero> getEnemyHerosList() {
        if (enemyHerosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(enemyHeros_);
        } else {
          return enemyHerosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public int getEnemyHerosCount() {
        if (enemyHerosBuilder_ == null) {
          return enemyHeros_.size();
        } else {
          return enemyHerosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero getEnemyHeros(int index) {
        if (enemyHerosBuilder_ == null) {
          return enemyHeros_.get(index);
        } else {
          return enemyHerosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public Builder setEnemyHeros(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero value) {
        if (enemyHerosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemyHerosIsMutable();
          enemyHeros_.set(index, value);
          onChanged();
        } else {
          enemyHerosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public Builder setEnemyHeros(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder builderForValue) {
        if (enemyHerosBuilder_ == null) {
          ensureEnemyHerosIsMutable();
          enemyHeros_.set(index, builderForValue.build());
          onChanged();
        } else {
          enemyHerosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public Builder addEnemyHeros(com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero value) {
        if (enemyHerosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemyHerosIsMutable();
          enemyHeros_.add(value);
          onChanged();
        } else {
          enemyHerosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public Builder addEnemyHeros(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero value) {
        if (enemyHerosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemyHerosIsMutable();
          enemyHeros_.add(index, value);
          onChanged();
        } else {
          enemyHerosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public Builder addEnemyHeros(
          com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder builderForValue) {
        if (enemyHerosBuilder_ == null) {
          ensureEnemyHerosIsMutable();
          enemyHeros_.add(builderForValue.build());
          onChanged();
        } else {
          enemyHerosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public Builder addEnemyHeros(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder builderForValue) {
        if (enemyHerosBuilder_ == null) {
          ensureEnemyHerosIsMutable();
          enemyHeros_.add(index, builderForValue.build());
          onChanged();
        } else {
          enemyHerosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public Builder addAllEnemyHeros(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero> values) {
        if (enemyHerosBuilder_ == null) {
          ensureEnemyHerosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, enemyHeros_);
          onChanged();
        } else {
          enemyHerosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public Builder clearEnemyHeros() {
        if (enemyHerosBuilder_ == null) {
          enemyHeros_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          enemyHerosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public Builder removeEnemyHeros(int index) {
        if (enemyHerosBuilder_ == null) {
          ensureEnemyHerosIsMutable();
          enemyHeros_.remove(index);
          onChanged();
        } else {
          enemyHerosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder getEnemyHerosBuilder(
          int index) {
        return getEnemyHerosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder getEnemyHerosOrBuilder(
          int index) {
        if (enemyHerosBuilder_ == null) {
          return enemyHeros_.get(index);  } else {
          return enemyHerosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder> 
           getEnemyHerosOrBuilderList() {
        if (enemyHerosBuilder_ != null) {
          return enemyHerosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(enemyHeros_);
        }
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder addEnemyHerosBuilder() {
        return getEnemyHerosFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder addEnemyHerosBuilder(
          int index) {
        return getEnemyHerosFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.EnemyHero enemyHeros = 8;</code>
       *
       * <pre>
       *上阵英雄列表//
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder> 
           getEnemyHerosBuilderList() {
        return getEnemyHerosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder> 
          getEnemyHerosFieldBuilder() {
        if (enemyHerosBuilder_ == null) {
          enemyHerosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder>(
                  enemyHeros_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          enemyHeros_ = null;
        }
        return enemyHerosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.Enemy)
    }

    static {
      defaultInstance = new Enemy(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.Enemy)
  }

  public interface EnemyHeroOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.EnemyHero)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     *英雄模板ID//
     * </pre>
     */
    boolean hasTemplateId();
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     *英雄模板ID//
     * </pre>
     */
    int getTemplateId();

    /**
     * <code>required int32 starCount = 2;</code>
     *
     * <pre>
     *星星数//
     * </pre>
     */
    boolean hasStarCount();
    /**
     * <code>required int32 starCount = 2;</code>
     *
     * <pre>
     *星星数//
     * </pre>
     */
    int getStarCount();

    /**
     * <code>required int32 level = 3;</code>
     *
     * <pre>
     *等级//
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 3;</code>
     *
     * <pre>
     *等级//
     * </pre>
     */
    int getLevel();
  }
  /**
   * Protobuf type {@code com.mokylin.EnemyHero}
   *
   * <pre>
   **
   * 对手的防守阵容中的英雄信息
   * </pre>
   */
  public static final class EnemyHero extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.EnemyHero)
      EnemyHeroOrBuilder {
    // Use EnemyHero.newBuilder() to construct.
    private EnemyHero(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EnemyHero(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EnemyHero defaultInstance;
    public static EnemyHero getDefaultInstance() {
      return defaultInstance;
    }

    public EnemyHero getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EnemyHero(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              templateId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              starCount_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              level_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyHero_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyHero_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.class, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder.class);
    }

    public static com.google.protobuf.Parser<EnemyHero> PARSER =
        new com.google.protobuf.AbstractParser<EnemyHero>() {
      public EnemyHero parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnemyHero(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EnemyHero> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEMPLATEID_FIELD_NUMBER = 1;
    private int templateId_;
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     *英雄模板ID//
     * </pre>
     */
    public boolean hasTemplateId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     *英雄模板ID//
     * </pre>
     */
    public int getTemplateId() {
      return templateId_;
    }

    public static final int STARCOUNT_FIELD_NUMBER = 2;
    private int starCount_;
    /**
     * <code>required int32 starCount = 2;</code>
     *
     * <pre>
     *星星数//
     * </pre>
     */
    public boolean hasStarCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 starCount = 2;</code>
     *
     * <pre>
     *星星数//
     * </pre>
     */
    public int getStarCount() {
      return starCount_;
    }

    public static final int LEVEL_FIELD_NUMBER = 3;
    private int level_;
    /**
     * <code>required int32 level = 3;</code>
     *
     * <pre>
     *等级//
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 level = 3;</code>
     *
     * <pre>
     *等级//
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    private void initFields() {
      templateId_ = 0;
      starCount_ = 0;
      level_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTemplateId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStarCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, templateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, starCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, level_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, templateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, starCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, level_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.EnemyHero}
     *
     * <pre>
     **
     * 对手的防守阵容中的英雄信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.EnemyHero)
        com.mokylin.bleach.protobuf.ArenaMessage.EnemyHeroOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyHero_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyHero_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.class, com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        templateId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        starCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyHero_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero build() {
        com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero result = new com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.templateId_ = templateId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.starCount_ = starCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.level_ = level_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero.getDefaultInstance()) return this;
        if (other.hasTemplateId()) {
          setTemplateId(other.getTemplateId());
        }
        if (other.hasStarCount()) {
          setStarCount(other.getStarCount());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTemplateId()) {
          
          return false;
        }
        if (!hasStarCount()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.EnemyHero) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int templateId_ ;
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       *英雄模板ID//
       * </pre>
       */
      public boolean hasTemplateId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       *英雄模板ID//
       * </pre>
       */
      public int getTemplateId() {
        return templateId_;
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       *英雄模板ID//
       * </pre>
       */
      public Builder setTemplateId(int value) {
        bitField0_ |= 0x00000001;
        templateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       *英雄模板ID//
       * </pre>
       */
      public Builder clearTemplateId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        templateId_ = 0;
        onChanged();
        return this;
      }

      private int starCount_ ;
      /**
       * <code>required int32 starCount = 2;</code>
       *
       * <pre>
       *星星数//
       * </pre>
       */
      public boolean hasStarCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 starCount = 2;</code>
       *
       * <pre>
       *星星数//
       * </pre>
       */
      public int getStarCount() {
        return starCount_;
      }
      /**
       * <code>required int32 starCount = 2;</code>
       *
       * <pre>
       *星星数//
       * </pre>
       */
      public Builder setStarCount(int value) {
        bitField0_ |= 0x00000002;
        starCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 starCount = 2;</code>
       *
       * <pre>
       *星星数//
       * </pre>
       */
      public Builder clearStarCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        starCount_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>required int32 level = 3;</code>
       *
       * <pre>
       *等级//
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 level = 3;</code>
       *
       * <pre>
       *等级//
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 3;</code>
       *
       * <pre>
       *等级//
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000004;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 3;</code>
       *
       * <pre>
       *等级//
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.EnemyHero)
    }

    static {
      defaultInstance = new EnemyHero(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.EnemyHero)
  }

  public interface GCArenaEnemysOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.GCArenaEnemys)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> 
        getEnemiesList();
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.Enemy getEnemies(int index);
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    int getEnemiesCount();
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
        getEnemiesOrBuilderList();
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder getEnemiesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.GCArenaEnemys}
   *
   * <pre>
   **
   * 服务器通知，竞技场挑战列表
   * </pre>
   */
  public static final class GCArenaEnemys extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.GCArenaEnemys)
      GCArenaEnemysOrBuilder {
    // Use GCArenaEnemys.newBuilder() to construct.
    private GCArenaEnemys(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCArenaEnemys(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCArenaEnemys defaultInstance;
    public static GCArenaEnemys getDefaultInstance() {
      return defaultInstance;
    }

    public GCArenaEnemys getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCArenaEnemys(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                enemies_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.Enemy>();
                mutable_bitField0_ |= 0x00000001;
              }
              enemies_.add(input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.Enemy.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          enemies_ = java.util.Collections.unmodifiableList(enemies_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaEnemys_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaEnemys_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys.Builder.class);
    }

    public static com.google.protobuf.Parser<GCArenaEnemys> PARSER =
        new com.google.protobuf.AbstractParser<GCArenaEnemys>() {
      public GCArenaEnemys parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCArenaEnemys(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCArenaEnemys> getParserForType() {
      return PARSER;
    }

    public static final int ENEMIES_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> enemies_;
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> getEnemiesList() {
      return enemies_;
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
        getEnemiesOrBuilderList() {
      return enemies_;
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public int getEnemiesCount() {
      return enemies_.size();
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.Enemy getEnemies(int index) {
      return enemies_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
     *
     * <pre>
     *可挑战列表//
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder getEnemiesOrBuilder(
        int index) {
      return enemies_.get(index);
    }

    private void initFields() {
      enemies_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getEnemiesCount(); i++) {
        if (!getEnemies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < enemies_.size(); i++) {
        output.writeMessage(1, enemies_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < enemies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, enemies_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.GCArenaEnemys}
     *
     * <pre>
     **
     * 服务器通知，竞技场挑战列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.GCArenaEnemys)
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemysOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaEnemys_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaEnemys_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEnemiesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (enemiesBuilder_ == null) {
          enemies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          enemiesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaEnemys_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys build() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys result = new com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys(this);
        int from_bitField0_ = bitField0_;
        if (enemiesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            enemies_ = java.util.Collections.unmodifiableList(enemies_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.enemies_ = enemies_;
        } else {
          result.enemies_ = enemiesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys.getDefaultInstance()) return this;
        if (enemiesBuilder_ == null) {
          if (!other.enemies_.isEmpty()) {
            if (enemies_.isEmpty()) {
              enemies_ = other.enemies_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEnemiesIsMutable();
              enemies_.addAll(other.enemies_);
            }
            onChanged();
          }
        } else {
          if (!other.enemies_.isEmpty()) {
            if (enemiesBuilder_.isEmpty()) {
              enemiesBuilder_.dispose();
              enemiesBuilder_ = null;
              enemies_ = other.enemies_;
              bitField0_ = (bitField0_ & ~0x00000001);
              enemiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEnemiesFieldBuilder() : null;
            } else {
              enemiesBuilder_.addAllMessages(other.enemies_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getEnemiesCount(); i++) {
          if (!getEnemies(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.GCArenaEnemys) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> enemies_ =
        java.util.Collections.emptyList();
      private void ensureEnemiesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          enemies_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.Enemy>(enemies_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.Enemy, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> enemiesBuilder_;

      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> getEnemiesList() {
        if (enemiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(enemies_);
        } else {
          return enemiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public int getEnemiesCount() {
        if (enemiesBuilder_ == null) {
          return enemies_.size();
        } else {
          return enemiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy getEnemies(int index) {
        if (enemiesBuilder_ == null) {
          return enemies_.get(index);
        } else {
          return enemiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder setEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.set(index, value);
          onChanged();
        } else {
          enemiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder setEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.set(index, builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addEnemies(com.mokylin.bleach.protobuf.ArenaMessage.Enemy value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.add(value);
          onChanged();
        } else {
          enemiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.add(index, value);
          onChanged();
        } else {
          enemiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addEnemies(
          com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.add(builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.add(index, builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder addAllEnemies(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.ArenaMessage.Enemy> values) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, enemies_);
          onChanged();
        } else {
          enemiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder clearEnemies() {
        if (enemiesBuilder_ == null) {
          enemies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          enemiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public Builder removeEnemies(int index) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.remove(index);
          onChanged();
        } else {
          enemiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder getEnemiesBuilder(
          int index) {
        return getEnemiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder getEnemiesOrBuilder(
          int index) {
        if (enemiesBuilder_ == null) {
          return enemies_.get(index);  } else {
          return enemiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
           getEnemiesOrBuilderList() {
        if (enemiesBuilder_ != null) {
          return enemiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(enemies_);
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder addEnemiesBuilder() {
        return getEnemiesFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.ArenaMessage.Enemy.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder addEnemiesBuilder(
          int index) {
        return getEnemiesFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 1;</code>
       *
       * <pre>
       *可挑战列表//
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder> 
           getEnemiesBuilderList() {
        return getEnemiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.Enemy, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
          getEnemiesFieldBuilder() {
        if (enemiesBuilder_ == null) {
          enemiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.Enemy, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder>(
                  enemies_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          enemies_ = null;
        }
        return enemiesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.GCArenaEnemys)
    }

    static {
      defaultInstance = new GCArenaEnemys(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.GCArenaEnemys)
  }

  public interface GCArenaSelectedEnemyChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.GCArenaSelectedEnemyChange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 oldUuid = 1;</code>
     *
     * <pre>
     **原先的对手的UUID 
     * </pre>
     */
    boolean hasOldUuid();
    /**
     * <code>required int64 oldUuid = 1;</code>
     *
     * <pre>
     **原先的对手的UUID 
     * </pre>
     */
    long getOldUuid();

    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> 
        getEnemiesList();
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.Enemy getEnemies(int index);
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    int getEnemiesCount();
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
        getEnemiesOrBuilderList();
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder getEnemiesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.GCArenaSelectedEnemyChange}
   *
   * <pre>
   **
   * 服务器通知，你的挑战列表发生变化
   * 客户端请弹出提示：“您选择挑战的第{}名{}的当前排名已发生变化，是否挑战现在的第{}名？”
   * </pre>
   */
  public static final class GCArenaSelectedEnemyChange extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.GCArenaSelectedEnemyChange)
      GCArenaSelectedEnemyChangeOrBuilder {
    // Use GCArenaSelectedEnemyChange.newBuilder() to construct.
    private GCArenaSelectedEnemyChange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCArenaSelectedEnemyChange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCArenaSelectedEnemyChange defaultInstance;
    public static GCArenaSelectedEnemyChange getDefaultInstance() {
      return defaultInstance;
    }

    public GCArenaSelectedEnemyChange getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCArenaSelectedEnemyChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oldUuid_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                enemies_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.Enemy>();
                mutable_bitField0_ |= 0x00000002;
              }
              enemies_.add(input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.Enemy.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          enemies_ = java.util.Collections.unmodifiableList(enemies_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaSelectedEnemyChange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaSelectedEnemyChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange.Builder.class);
    }

    public static com.google.protobuf.Parser<GCArenaSelectedEnemyChange> PARSER =
        new com.google.protobuf.AbstractParser<GCArenaSelectedEnemyChange>() {
      public GCArenaSelectedEnemyChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCArenaSelectedEnemyChange(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCArenaSelectedEnemyChange> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int OLDUUID_FIELD_NUMBER = 1;
    private long oldUuid_;
    /**
     * <code>required int64 oldUuid = 1;</code>
     *
     * <pre>
     **原先的对手的UUID 
     * </pre>
     */
    public boolean hasOldUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 oldUuid = 1;</code>
     *
     * <pre>
     **原先的对手的UUID 
     * </pre>
     */
    public long getOldUuid() {
      return oldUuid_;
    }

    public static final int ENEMIES_FIELD_NUMBER = 2;
    private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> enemies_;
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> getEnemiesList() {
      return enemies_;
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
        getEnemiesOrBuilderList() {
      return enemies_;
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    public int getEnemiesCount() {
      return enemies_.size();
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.Enemy getEnemies(int index) {
      return enemies_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
     *
     * <pre>
     **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder getEnemiesOrBuilder(
        int index) {
      return enemies_.get(index);
    }

    private void initFields() {
      oldUuid_ = 0L;
      enemies_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOldUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getEnemiesCount(); i++) {
        if (!getEnemies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, oldUuid_);
      }
      for (int i = 0; i < enemies_.size(); i++) {
        output.writeMessage(2, enemies_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, oldUuid_);
      }
      for (int i = 0; i < enemies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, enemies_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.GCArenaSelectedEnemyChange}
     *
     * <pre>
     **
     * 服务器通知，你的挑战列表发生变化
     * 客户端请弹出提示：“您选择挑战的第{}名{}的当前排名已发生变化，是否挑战现在的第{}名？”
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.GCArenaSelectedEnemyChange)
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaSelectedEnemyChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaSelectedEnemyChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEnemiesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oldUuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (enemiesBuilder_ == null) {
          enemies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          enemiesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaSelectedEnemyChange_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange build() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange result = new com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oldUuid_ = oldUuid_;
        if (enemiesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            enemies_ = java.util.Collections.unmodifiableList(enemies_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.enemies_ = enemies_;
        } else {
          result.enemies_ = enemiesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange.getDefaultInstance()) return this;
        if (other.hasOldUuid()) {
          setOldUuid(other.getOldUuid());
        }
        if (enemiesBuilder_ == null) {
          if (!other.enemies_.isEmpty()) {
            if (enemies_.isEmpty()) {
              enemies_ = other.enemies_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEnemiesIsMutable();
              enemies_.addAll(other.enemies_);
            }
            onChanged();
          }
        } else {
          if (!other.enemies_.isEmpty()) {
            if (enemiesBuilder_.isEmpty()) {
              enemiesBuilder_.dispose();
              enemiesBuilder_ = null;
              enemies_ = other.enemies_;
              bitField0_ = (bitField0_ & ~0x00000002);
              enemiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEnemiesFieldBuilder() : null;
            } else {
              enemiesBuilder_.addAllMessages(other.enemies_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOldUuid()) {
          
          return false;
        }
        for (int i = 0; i < getEnemiesCount(); i++) {
          if (!getEnemies(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.GCArenaSelectedEnemyChange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long oldUuid_ ;
      /**
       * <code>required int64 oldUuid = 1;</code>
       *
       * <pre>
       **原先的对手的UUID 
       * </pre>
       */
      public boolean hasOldUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 oldUuid = 1;</code>
       *
       * <pre>
       **原先的对手的UUID 
       * </pre>
       */
      public long getOldUuid() {
        return oldUuid_;
      }
      /**
       * <code>required int64 oldUuid = 1;</code>
       *
       * <pre>
       **原先的对手的UUID 
       * </pre>
       */
      public Builder setOldUuid(long value) {
        bitField0_ |= 0x00000001;
        oldUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 oldUuid = 1;</code>
       *
       * <pre>
       **原先的对手的UUID 
       * </pre>
       */
      public Builder clearOldUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oldUuid_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> enemies_ =
        java.util.Collections.emptyList();
      private void ensureEnemiesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          enemies_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.Enemy>(enemies_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.Enemy, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> enemiesBuilder_;

      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy> getEnemiesList() {
        if (enemiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(enemies_);
        } else {
          return enemiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public int getEnemiesCount() {
        if (enemiesBuilder_ == null) {
          return enemies_.size();
        } else {
          return enemiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy getEnemies(int index) {
        if (enemiesBuilder_ == null) {
          return enemies_.get(index);
        } else {
          return enemiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public Builder setEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.set(index, value);
          onChanged();
        } else {
          enemiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public Builder setEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.set(index, builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public Builder addEnemies(com.mokylin.bleach.protobuf.ArenaMessage.Enemy value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.add(value);
          onChanged();
        } else {
          enemiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public Builder addEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy value) {
        if (enemiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnemiesIsMutable();
          enemies_.add(index, value);
          onChanged();
        } else {
          enemiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public Builder addEnemies(
          com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.add(builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public Builder addEnemies(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder builderForValue) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.add(index, builderForValue.build());
          onChanged();
        } else {
          enemiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public Builder addAllEnemies(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.ArenaMessage.Enemy> values) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, enemies_);
          onChanged();
        } else {
          enemiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public Builder clearEnemies() {
        if (enemiesBuilder_ == null) {
          enemies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          enemiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public Builder removeEnemies(int index) {
        if (enemiesBuilder_ == null) {
          ensureEnemiesIsMutable();
          enemies_.remove(index);
          onChanged();
        } else {
          enemiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder getEnemiesBuilder(
          int index) {
        return getEnemiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder getEnemiesOrBuilder(
          int index) {
        if (enemiesBuilder_ == null) {
          return enemies_.get(index);  } else {
          return enemiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
           getEnemiesOrBuilderList() {
        if (enemiesBuilder_ != null) {
          return enemiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(enemies_);
        }
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder addEnemiesBuilder() {
        return getEnemiesFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.ArenaMessage.Enemy.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder addEnemiesBuilder(
          int index) {
        return getEnemiesFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.Enemy enemies = 2;</code>
       *
       * <pre>
       **可挑战列表。因为其他人可能也发生了变化，所以干脆把挑战列表刷新一遍 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder> 
           getEnemiesBuilderList() {
        return getEnemiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.Enemy, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder> 
          getEnemiesFieldBuilder() {
        if (enemiesBuilder_ == null) {
          enemiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.Enemy, com.mokylin.bleach.protobuf.ArenaMessage.Enemy.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyOrBuilder>(
                  enemies_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          enemies_ = null;
        }
        return enemiesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.GCArenaSelectedEnemyChange)
    }

    static {
      defaultInstance = new GCArenaSelectedEnemyChange(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.GCArenaSelectedEnemyChange)
  }

  public interface GCArenaCombatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.GCArenaCombat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
     *
     * <pre>
     **战报 
     * </pre>
     */
    boolean hasCombatReport();
    /**
     * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
     *
     * <pre>
     **战报 
     * </pre>
     */
    com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport getCombatReport();
    /**
     * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
     *
     * <pre>
     **战报 
     * </pre>
     */
    com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportOrBuilder getCombatReportOrBuilder();

    /**
     * <code>required int64 fightGold = 2;</code>
     *
     * <pre>
     **单场金币奖励 
     * </pre>
     */
    boolean hasFightGold();
    /**
     * <code>required int64 fightGold = 2;</code>
     *
     * <pre>
     **单场金币奖励 
     * </pre>
     */
    long getFightGold();

    /**
     * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
     *
     * <pre>
     **累计失败奖励，为null表示没有得到此奖励 
     * </pre>
     */
    boolean hasFailReward();
    /**
     * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
     *
     * <pre>
     **累计失败奖励，为null表示没有得到此奖励 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward getFailReward();
    /**
     * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
     *
     * <pre>
     **累计失败奖励，为null表示没有得到此奖励 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailRewardOrBuilder getFailRewardOrBuilder();

    /**
     * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
     *
     * <pre>
     **历史最高排名奖，为null表示没有得到此奖励 
     * </pre>
     */
    boolean hasBestRankReward();
    /**
     * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
     *
     * <pre>
     **历史最高排名奖，为null表示没有得到此奖励 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward getBestRankReward();
    /**
     * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
     *
     * <pre>
     **历史最高排名奖，为null表示没有得到此奖励 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankRewardOrBuilder getBestRankRewardOrBuilder();
  }
  /**
   * Protobuf type {@code com.mokylin.GCArenaCombat}
   *
   * <pre>
   **
   * 服务器通知，竞技场战斗过程及结果
   * </pre>
   */
  public static final class GCArenaCombat extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.GCArenaCombat)
      GCArenaCombatOrBuilder {
    // Use GCArenaCombat.newBuilder() to construct.
    private GCArenaCombat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCArenaCombat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCArenaCombat defaultInstance;
    public static GCArenaCombat getDefaultInstance() {
      return defaultInstance;
    }

    public GCArenaCombat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCArenaCombat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = combatReport_.toBuilder();
              }
              combatReport_ = input.readMessage(com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(combatReport_);
                combatReport_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fightGold_ = input.readInt64();
              break;
            }
            case 26: {
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = failReward_.toBuilder();
              }
              failReward_ = input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(failReward_);
                failReward_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = bestRankReward_.toBuilder();
              }
              bestRankReward_ = input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bestRankReward_);
                bestRankReward_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaCombat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaCombat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat.Builder.class);
    }

    public static com.google.protobuf.Parser<GCArenaCombat> PARSER =
        new com.google.protobuf.AbstractParser<GCArenaCombat>() {
      public GCArenaCombat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCArenaCombat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCArenaCombat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int COMBATREPORT_FIELD_NUMBER = 1;
    private com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport combatReport_;
    /**
     * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
     *
     * <pre>
     **战报 
     * </pre>
     */
    public boolean hasCombatReport() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
     *
     * <pre>
     **战报 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport getCombatReport() {
      return combatReport_;
    }
    /**
     * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
     *
     * <pre>
     **战报 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportOrBuilder getCombatReportOrBuilder() {
      return combatReport_;
    }

    public static final int FIGHTGOLD_FIELD_NUMBER = 2;
    private long fightGold_;
    /**
     * <code>required int64 fightGold = 2;</code>
     *
     * <pre>
     **单场金币奖励 
     * </pre>
     */
    public boolean hasFightGold() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 fightGold = 2;</code>
     *
     * <pre>
     **单场金币奖励 
     * </pre>
     */
    public long getFightGold() {
      return fightGold_;
    }

    public static final int FAILREWARD_FIELD_NUMBER = 3;
    private com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward failReward_;
    /**
     * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
     *
     * <pre>
     **累计失败奖励，为null表示没有得到此奖励 
     * </pre>
     */
    public boolean hasFailReward() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
     *
     * <pre>
     **累计失败奖励，为null表示没有得到此奖励 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward getFailReward() {
      return failReward_;
    }
    /**
     * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
     *
     * <pre>
     **累计失败奖励，为null表示没有得到此奖励 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailRewardOrBuilder getFailRewardOrBuilder() {
      return failReward_;
    }

    public static final int BESTRANKREWARD_FIELD_NUMBER = 4;
    private com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward bestRankReward_;
    /**
     * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
     *
     * <pre>
     **历史最高排名奖，为null表示没有得到此奖励 
     * </pre>
     */
    public boolean hasBestRankReward() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
     *
     * <pre>
     **历史最高排名奖，为null表示没有得到此奖励 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward getBestRankReward() {
      return bestRankReward_;
    }
    /**
     * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
     *
     * <pre>
     **历史最高排名奖，为null表示没有得到此奖励 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankRewardOrBuilder getBestRankRewardOrBuilder() {
      return bestRankReward_;
    }

    private void initFields() {
      combatReport_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.getDefaultInstance();
      fightGold_ = 0L;
      failReward_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.getDefaultInstance();
      bestRankReward_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCombatReport()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFightGold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCombatReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasFailReward()) {
        if (!getFailReward().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBestRankReward()) {
        if (!getBestRankReward().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, combatReport_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, fightGold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, failReward_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, bestRankReward_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, combatReport_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, fightGold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, failReward_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, bestRankReward_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.GCArenaCombat}
     *
     * <pre>
     **
     * 服务器通知，竞技场战斗过程及结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.GCArenaCombat)
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaCombat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaCombat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCombatReportFieldBuilder();
          getFailRewardFieldBuilder();
          getBestRankRewardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (combatReportBuilder_ == null) {
          combatReport_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.getDefaultInstance();
        } else {
          combatReportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        fightGold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (failRewardBuilder_ == null) {
          failReward_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.getDefaultInstance();
        } else {
          failRewardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (bestRankRewardBuilder_ == null) {
          bestRankReward_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.getDefaultInstance();
        } else {
          bestRankRewardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaCombat_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat build() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat result = new com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (combatReportBuilder_ == null) {
          result.combatReport_ = combatReport_;
        } else {
          result.combatReport_ = combatReportBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fightGold_ = fightGold_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (failRewardBuilder_ == null) {
          result.failReward_ = failReward_;
        } else {
          result.failReward_ = failRewardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (bestRankRewardBuilder_ == null) {
          result.bestRankReward_ = bestRankReward_;
        } else {
          result.bestRankReward_ = bestRankRewardBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat.getDefaultInstance()) return this;
        if (other.hasCombatReport()) {
          mergeCombatReport(other.getCombatReport());
        }
        if (other.hasFightGold()) {
          setFightGold(other.getFightGold());
        }
        if (other.hasFailReward()) {
          mergeFailReward(other.getFailReward());
        }
        if (other.hasBestRankReward()) {
          mergeBestRankReward(other.getBestRankReward());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCombatReport()) {
          
          return false;
        }
        if (!hasFightGold()) {
          
          return false;
        }
        if (!getCombatReport().isInitialized()) {
          
          return false;
        }
        if (hasFailReward()) {
          if (!getFailReward().isInitialized()) {
            
            return false;
          }
        }
        if (hasBestRankReward()) {
          if (!getBestRankReward().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.GCArenaCombat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport combatReport_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.Builder, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportOrBuilder> combatReportBuilder_;
      /**
       * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
       *
       * <pre>
       **战报 
       * </pre>
       */
      public boolean hasCombatReport() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
       *
       * <pre>
       **战报 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport getCombatReport() {
        if (combatReportBuilder_ == null) {
          return combatReport_;
        } else {
          return combatReportBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
       *
       * <pre>
       **战报 
       * </pre>
       */
      public Builder setCombatReport(com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport value) {
        if (combatReportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          combatReport_ = value;
          onChanged();
        } else {
          combatReportBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
       *
       * <pre>
       **战报 
       * </pre>
       */
      public Builder setCombatReport(
          com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.Builder builderForValue) {
        if (combatReportBuilder_ == null) {
          combatReport_ = builderForValue.build();
          onChanged();
        } else {
          combatReportBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
       *
       * <pre>
       **战报 
       * </pre>
       */
      public Builder mergeCombatReport(com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport value) {
        if (combatReportBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              combatReport_ != com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.getDefaultInstance()) {
            combatReport_ =
              com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.newBuilder(combatReport_).mergeFrom(value).buildPartial();
          } else {
            combatReport_ = value;
          }
          onChanged();
        } else {
          combatReportBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
       *
       * <pre>
       **战报 
       * </pre>
       */
      public Builder clearCombatReport() {
        if (combatReportBuilder_ == null) {
          combatReport_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.getDefaultInstance();
          onChanged();
        } else {
          combatReportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
       *
       * <pre>
       **战报 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.Builder getCombatReportBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCombatReportFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
       *
       * <pre>
       **战报 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportOrBuilder getCombatReportOrBuilder() {
        if (combatReportBuilder_ != null) {
          return combatReportBuilder_.getMessageOrBuilder();
        } else {
          return combatReport_;
        }
      }
      /**
       * <code>required .com.mokylin.CombatReport combatReport = 1;</code>
       *
       * <pre>
       **战报 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.Builder, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportOrBuilder> 
          getCombatReportFieldBuilder() {
        if (combatReportBuilder_ == null) {
          combatReportBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReport.Builder, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportOrBuilder>(
                  getCombatReport(),
                  getParentForChildren(),
                  isClean());
          combatReport_ = null;
        }
        return combatReportBuilder_;
      }

      private long fightGold_ ;
      /**
       * <code>required int64 fightGold = 2;</code>
       *
       * <pre>
       **单场金币奖励 
       * </pre>
       */
      public boolean hasFightGold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 fightGold = 2;</code>
       *
       * <pre>
       **单场金币奖励 
       * </pre>
       */
      public long getFightGold() {
        return fightGold_;
      }
      /**
       * <code>required int64 fightGold = 2;</code>
       *
       * <pre>
       **单场金币奖励 
       * </pre>
       */
      public Builder setFightGold(long value) {
        bitField0_ |= 0x00000002;
        fightGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 fightGold = 2;</code>
       *
       * <pre>
       **单场金币奖励 
       * </pre>
       */
      public Builder clearFightGold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fightGold_ = 0L;
        onChanged();
        return this;
      }

      private com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward failReward_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward, com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailRewardOrBuilder> failRewardBuilder_;
      /**
       * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
       *
       * <pre>
       **累计失败奖励，为null表示没有得到此奖励 
       * </pre>
       */
      public boolean hasFailReward() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
       *
       * <pre>
       **累计失败奖励，为null表示没有得到此奖励 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward getFailReward() {
        if (failRewardBuilder_ == null) {
          return failReward_;
        } else {
          return failRewardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
       *
       * <pre>
       **累计失败奖励，为null表示没有得到此奖励 
       * </pre>
       */
      public Builder setFailReward(com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward value) {
        if (failRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          failReward_ = value;
          onChanged();
        } else {
          failRewardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
       *
       * <pre>
       **累计失败奖励，为null表示没有得到此奖励 
       * </pre>
       */
      public Builder setFailReward(
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.Builder builderForValue) {
        if (failRewardBuilder_ == null) {
          failReward_ = builderForValue.build();
          onChanged();
        } else {
          failRewardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
       *
       * <pre>
       **累计失败奖励，为null表示没有得到此奖励 
       * </pre>
       */
      public Builder mergeFailReward(com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward value) {
        if (failRewardBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              failReward_ != com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.getDefaultInstance()) {
            failReward_ =
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.newBuilder(failReward_).mergeFrom(value).buildPartial();
          } else {
            failReward_ = value;
          }
          onChanged();
        } else {
          failRewardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
       *
       * <pre>
       **累计失败奖励，为null表示没有得到此奖励 
       * </pre>
       */
      public Builder clearFailReward() {
        if (failRewardBuilder_ == null) {
          failReward_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.getDefaultInstance();
          onChanged();
        } else {
          failRewardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
       *
       * <pre>
       **累计失败奖励，为null表示没有得到此奖励 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.Builder getFailRewardBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFailRewardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
       *
       * <pre>
       **累计失败奖励，为null表示没有得到此奖励 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailRewardOrBuilder getFailRewardOrBuilder() {
        if (failRewardBuilder_ != null) {
          return failRewardBuilder_.getMessageOrBuilder();
        } else {
          return failReward_;
        }
      }
      /**
       * <code>optional .com.mokylin.ArenaFailReward failReward = 3;</code>
       *
       * <pre>
       **累计失败奖励，为null表示没有得到此奖励 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward, com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailRewardOrBuilder> 
          getFailRewardFieldBuilder() {
        if (failRewardBuilder_ == null) {
          failRewardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward, com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailRewardOrBuilder>(
                  getFailReward(),
                  getParentForChildren(),
                  isClean());
          failReward_ = null;
        }
        return failRewardBuilder_;
      }

      private com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward bestRankReward_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward, com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankRewardOrBuilder> bestRankRewardBuilder_;
      /**
       * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
       *
       * <pre>
       **历史最高排名奖，为null表示没有得到此奖励 
       * </pre>
       */
      public boolean hasBestRankReward() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
       *
       * <pre>
       **历史最高排名奖，为null表示没有得到此奖励 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward getBestRankReward() {
        if (bestRankRewardBuilder_ == null) {
          return bestRankReward_;
        } else {
          return bestRankRewardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
       *
       * <pre>
       **历史最高排名奖，为null表示没有得到此奖励 
       * </pre>
       */
      public Builder setBestRankReward(com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward value) {
        if (bestRankRewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bestRankReward_ = value;
          onChanged();
        } else {
          bestRankRewardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
       *
       * <pre>
       **历史最高排名奖，为null表示没有得到此奖励 
       * </pre>
       */
      public Builder setBestRankReward(
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.Builder builderForValue) {
        if (bestRankRewardBuilder_ == null) {
          bestRankReward_ = builderForValue.build();
          onChanged();
        } else {
          bestRankRewardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
       *
       * <pre>
       **历史最高排名奖，为null表示没有得到此奖励 
       * </pre>
       */
      public Builder mergeBestRankReward(com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward value) {
        if (bestRankRewardBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              bestRankReward_ != com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.getDefaultInstance()) {
            bestRankReward_ =
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.newBuilder(bestRankReward_).mergeFrom(value).buildPartial();
          } else {
            bestRankReward_ = value;
          }
          onChanged();
        } else {
          bestRankRewardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
       *
       * <pre>
       **历史最高排名奖，为null表示没有得到此奖励 
       * </pre>
       */
      public Builder clearBestRankReward() {
        if (bestRankRewardBuilder_ == null) {
          bestRankReward_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.getDefaultInstance();
          onChanged();
        } else {
          bestRankRewardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
       *
       * <pre>
       **历史最高排名奖，为null表示没有得到此奖励 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.Builder getBestRankRewardBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getBestRankRewardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
       *
       * <pre>
       **历史最高排名奖，为null表示没有得到此奖励 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankRewardOrBuilder getBestRankRewardOrBuilder() {
        if (bestRankRewardBuilder_ != null) {
          return bestRankRewardBuilder_.getMessageOrBuilder();
        } else {
          return bestRankReward_;
        }
      }
      /**
       * <code>optional .com.mokylin.ArenaBestRankReward bestRankReward = 4;</code>
       *
       * <pre>
       **历史最高排名奖，为null表示没有得到此奖励 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward, com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankRewardOrBuilder> 
          getBestRankRewardFieldBuilder() {
        if (bestRankRewardBuilder_ == null) {
          bestRankRewardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward, com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankRewardOrBuilder>(
                  getBestRankReward(),
                  getParentForChildren(),
                  isClean());
          bestRankReward_ = null;
        }
        return bestRankRewardBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.GCArenaCombat)
    }

    static {
      defaultInstance = new GCArenaCombat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.GCArenaCombat)
  }

  public interface ArenaFailRewardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.ArenaFailReward)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DBMail.PrizResource> 
        getResourcesList();
    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    com.mokylin.bleach.protobuf.db.DBMail.PrizResource getResources(int index);
    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    int getResourcesCount();
    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DBMail.PrizResourceOrBuilder> 
        getResourcesOrBuilderList();
    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    com.mokylin.bleach.protobuf.db.DBMail.PrizResourceOrBuilder getResourcesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.ArenaFailReward}
   *
   * <pre>
   **
   * 累计失败奖励
   * </pre>
   */
  public static final class ArenaFailReward extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.ArenaFailReward)
      ArenaFailRewardOrBuilder {
    // Use ArenaFailReward.newBuilder() to construct.
    private ArenaFailReward(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ArenaFailReward(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ArenaFailReward defaultInstance;
    public static ArenaFailReward getDefaultInstance() {
      return defaultInstance;
    }

    public ArenaFailReward getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ArenaFailReward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                resources_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DBMail.PrizResource>();
                mutable_bitField0_ |= 0x00000001;
              }
              resources_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DBMail.PrizResource.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          resources_ = java.util.Collections.unmodifiableList(resources_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaFailReward_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaFailReward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.class, com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.Builder.class);
    }

    public static com.google.protobuf.Parser<ArenaFailReward> PARSER =
        new com.google.protobuf.AbstractParser<ArenaFailReward>() {
      public ArenaFailReward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArenaFailReward(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ArenaFailReward> getParserForType() {
      return PARSER;
    }

    public static final int RESOURCES_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.db.DBMail.PrizResource> resources_;
    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DBMail.PrizResource> getResourcesList() {
      return resources_;
    }
    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DBMail.PrizResourceOrBuilder> 
        getResourcesOrBuilderList() {
      return resources_;
    }
    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    public int getResourcesCount() {
      return resources_.size();
    }
    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    public com.mokylin.bleach.protobuf.db.DBMail.PrizResource getResources(int index) {
      return resources_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
     */
    public com.mokylin.bleach.protobuf.db.DBMail.PrizResourceOrBuilder getResourcesOrBuilder(
        int index) {
      return resources_.get(index);
    }

    private void initFields() {
      resources_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getResourcesCount(); i++) {
        if (!getResources(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < resources_.size(); i++) {
        output.writeMessage(1, resources_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < resources_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, resources_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.ArenaFailReward}
     *
     * <pre>
     **
     * 累计失败奖励
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.ArenaFailReward)
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailRewardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaFailReward_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaFailReward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.class, com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResourcesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (resourcesBuilder_ == null) {
          resources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resourcesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaFailReward_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward build() {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward result = new com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward(this);
        int from_bitField0_ = bitField0_;
        if (resourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            resources_ = java.util.Collections.unmodifiableList(resources_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward.getDefaultInstance()) return this;
        if (resourcesBuilder_ == null) {
          if (!other.resources_.isEmpty()) {
            if (resources_.isEmpty()) {
              resources_ = other.resources_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResourcesIsMutable();
              resources_.addAll(other.resources_);
            }
            onChanged();
          }
        } else {
          if (!other.resources_.isEmpty()) {
            if (resourcesBuilder_.isEmpty()) {
              resourcesBuilder_.dispose();
              resourcesBuilder_ = null;
              resources_ = other.resources_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resourcesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResourcesFieldBuilder() : null;
            } else {
              resourcesBuilder_.addAllMessages(other.resources_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getResourcesCount(); i++) {
          if (!getResources(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.ArenaFailReward) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.mokylin.bleach.protobuf.db.DBMail.PrizResource> resources_ =
        java.util.Collections.emptyList();
      private void ensureResourcesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          resources_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DBMail.PrizResource>(resources_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DBMail.PrizResource, com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder, com.mokylin.bleach.protobuf.db.DBMail.PrizResourceOrBuilder> resourcesBuilder_;

      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DBMail.PrizResource> getResourcesList() {
        if (resourcesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(resources_);
        } else {
          return resourcesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public int getResourcesCount() {
        if (resourcesBuilder_ == null) {
          return resources_.size();
        } else {
          return resourcesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBMail.PrizResource getResources(int index) {
        if (resourcesBuilder_ == null) {
          return resources_.get(index);
        } else {
          return resourcesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public Builder setResources(
          int index, com.mokylin.bleach.protobuf.db.DBMail.PrizResource value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResourcesIsMutable();
          resources_.set(index, value);
          onChanged();
        } else {
          resourcesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public Builder setResources(
          int index, com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          resources_.set(index, builderForValue.build());
          onChanged();
        } else {
          resourcesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public Builder addResources(com.mokylin.bleach.protobuf.db.DBMail.PrizResource value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResourcesIsMutable();
          resources_.add(value);
          onChanged();
        } else {
          resourcesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public Builder addResources(
          int index, com.mokylin.bleach.protobuf.db.DBMail.PrizResource value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResourcesIsMutable();
          resources_.add(index, value);
          onChanged();
        } else {
          resourcesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public Builder addResources(
          com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          resources_.add(builderForValue.build());
          onChanged();
        } else {
          resourcesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public Builder addResources(
          int index, com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          resources_.add(index, builderForValue.build());
          onChanged();
        } else {
          resourcesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public Builder addAllResources(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DBMail.PrizResource> values) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, resources_);
          onChanged();
        } else {
          resourcesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resourcesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public Builder removeResources(int index) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          resources_.remove(index);
          onChanged();
        } else {
          resourcesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder getResourcesBuilder(
          int index) {
        return getResourcesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBMail.PrizResourceOrBuilder getResourcesOrBuilder(
          int index) {
        if (resourcesBuilder_ == null) {
          return resources_.get(index);  } else {
          return resourcesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DBMail.PrizResourceOrBuilder> 
           getResourcesOrBuilderList() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(resources_);
        }
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder addResourcesBuilder() {
        return getResourcesFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DBMail.PrizResource.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder addResourcesBuilder(
          int index) {
        return getResourcesFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DBMail.PrizResource.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.PrizResource resources = 1;</code>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder> 
           getResourcesBuilderList() {
        return getResourcesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DBMail.PrizResource, com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder, com.mokylin.bleach.protobuf.db.DBMail.PrizResourceOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DBMail.PrizResource, com.mokylin.bleach.protobuf.db.DBMail.PrizResource.Builder, com.mokylin.bleach.protobuf.db.DBMail.PrizResourceOrBuilder>(
                  resources_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.ArenaFailReward)
    }

    static {
      defaultInstance = new ArenaFailReward(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.ArenaFailReward)
  }

  public interface ArenaBestRankRewardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.ArenaBestRankReward)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 diamond = 1;</code>
     *
     * <pre>
     **奖励的钻石数量 
     * </pre>
     */
    boolean hasDiamond();
    /**
     * <code>required int32 diamond = 1;</code>
     *
     * <pre>
     **奖励的钻石数量 
     * </pre>
     */
    int getDiamond();

    /**
     * <code>required int32 oldBestRank = 2;</code>
     *
     * <pre>
     **你曾经的历史最高排名 
     * </pre>
     */
    boolean hasOldBestRank();
    /**
     * <code>required int32 oldBestRank = 2;</code>
     *
     * <pre>
     **你曾经的历史最高排名 
     * </pre>
     */
    int getOldBestRank();

    /**
     * <code>required int32 newBestRank = 3;</code>
     *
     * <pre>
     **你本次达到的历史最高排名 
     * </pre>
     */
    boolean hasNewBestRank();
    /**
     * <code>required int32 newBestRank = 3;</code>
     *
     * <pre>
     **你本次达到的历史最高排名 
     * </pre>
     */
    int getNewBestRank();
  }
  /**
   * Protobuf type {@code com.mokylin.ArenaBestRankReward}
   *
   * <pre>
   **
   * 历史最高排名奖
   * </pre>
   */
  public static final class ArenaBestRankReward extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.ArenaBestRankReward)
      ArenaBestRankRewardOrBuilder {
    // Use ArenaBestRankReward.newBuilder() to construct.
    private ArenaBestRankReward(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ArenaBestRankReward(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ArenaBestRankReward defaultInstance;
    public static ArenaBestRankReward getDefaultInstance() {
      return defaultInstance;
    }

    public ArenaBestRankReward getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ArenaBestRankReward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              diamond_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              oldBestRank_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              newBestRank_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaBestRankReward_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaBestRankReward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.class, com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.Builder.class);
    }

    public static com.google.protobuf.Parser<ArenaBestRankReward> PARSER =
        new com.google.protobuf.AbstractParser<ArenaBestRankReward>() {
      public ArenaBestRankReward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArenaBestRankReward(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ArenaBestRankReward> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DIAMOND_FIELD_NUMBER = 1;
    private int diamond_;
    /**
     * <code>required int32 diamond = 1;</code>
     *
     * <pre>
     **奖励的钻石数量 
     * </pre>
     */
    public boolean hasDiamond() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 diamond = 1;</code>
     *
     * <pre>
     **奖励的钻石数量 
     * </pre>
     */
    public int getDiamond() {
      return diamond_;
    }

    public static final int OLDBESTRANK_FIELD_NUMBER = 2;
    private int oldBestRank_;
    /**
     * <code>required int32 oldBestRank = 2;</code>
     *
     * <pre>
     **你曾经的历史最高排名 
     * </pre>
     */
    public boolean hasOldBestRank() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 oldBestRank = 2;</code>
     *
     * <pre>
     **你曾经的历史最高排名 
     * </pre>
     */
    public int getOldBestRank() {
      return oldBestRank_;
    }

    public static final int NEWBESTRANK_FIELD_NUMBER = 3;
    private int newBestRank_;
    /**
     * <code>required int32 newBestRank = 3;</code>
     *
     * <pre>
     **你本次达到的历史最高排名 
     * </pre>
     */
    public boolean hasNewBestRank() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 newBestRank = 3;</code>
     *
     * <pre>
     **你本次达到的历史最高排名 
     * </pre>
     */
    public int getNewBestRank() {
      return newBestRank_;
    }

    private void initFields() {
      diamond_ = 0;
      oldBestRank_ = 0;
      newBestRank_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDiamond()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOldBestRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNewBestRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, diamond_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, oldBestRank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, newBestRank_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, diamond_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, oldBestRank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, newBestRank_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.ArenaBestRankReward}
     *
     * <pre>
     **
     * 历史最高排名奖
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.ArenaBestRankReward)
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankRewardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaBestRankReward_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaBestRankReward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.class, com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        diamond_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        oldBestRank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        newBestRank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaBestRankReward_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward build() {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward result = new com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.diamond_ = diamond_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oldBestRank_ = oldBestRank_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.newBestRank_ = newBestRank_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward.getDefaultInstance()) return this;
        if (other.hasDiamond()) {
          setDiamond(other.getDiamond());
        }
        if (other.hasOldBestRank()) {
          setOldBestRank(other.getOldBestRank());
        }
        if (other.hasNewBestRank()) {
          setNewBestRank(other.getNewBestRank());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDiamond()) {
          
          return false;
        }
        if (!hasOldBestRank()) {
          
          return false;
        }
        if (!hasNewBestRank()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.ArenaBestRankReward) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int diamond_ ;
      /**
       * <code>required int32 diamond = 1;</code>
       *
       * <pre>
       **奖励的钻石数量 
       * </pre>
       */
      public boolean hasDiamond() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 diamond = 1;</code>
       *
       * <pre>
       **奖励的钻石数量 
       * </pre>
       */
      public int getDiamond() {
        return diamond_;
      }
      /**
       * <code>required int32 diamond = 1;</code>
       *
       * <pre>
       **奖励的钻石数量 
       * </pre>
       */
      public Builder setDiamond(int value) {
        bitField0_ |= 0x00000001;
        diamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 diamond = 1;</code>
       *
       * <pre>
       **奖励的钻石数量 
       * </pre>
       */
      public Builder clearDiamond() {
        bitField0_ = (bitField0_ & ~0x00000001);
        diamond_ = 0;
        onChanged();
        return this;
      }

      private int oldBestRank_ ;
      /**
       * <code>required int32 oldBestRank = 2;</code>
       *
       * <pre>
       **你曾经的历史最高排名 
       * </pre>
       */
      public boolean hasOldBestRank() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 oldBestRank = 2;</code>
       *
       * <pre>
       **你曾经的历史最高排名 
       * </pre>
       */
      public int getOldBestRank() {
        return oldBestRank_;
      }
      /**
       * <code>required int32 oldBestRank = 2;</code>
       *
       * <pre>
       **你曾经的历史最高排名 
       * </pre>
       */
      public Builder setOldBestRank(int value) {
        bitField0_ |= 0x00000002;
        oldBestRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 oldBestRank = 2;</code>
       *
       * <pre>
       **你曾经的历史最高排名 
       * </pre>
       */
      public Builder clearOldBestRank() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oldBestRank_ = 0;
        onChanged();
        return this;
      }

      private int newBestRank_ ;
      /**
       * <code>required int32 newBestRank = 3;</code>
       *
       * <pre>
       **你本次达到的历史最高排名 
       * </pre>
       */
      public boolean hasNewBestRank() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 newBestRank = 3;</code>
       *
       * <pre>
       **你本次达到的历史最高排名 
       * </pre>
       */
      public int getNewBestRank() {
        return newBestRank_;
      }
      /**
       * <code>required int32 newBestRank = 3;</code>
       *
       * <pre>
       **你本次达到的历史最高排名 
       * </pre>
       */
      public Builder setNewBestRank(int value) {
        bitField0_ |= 0x00000004;
        newBestRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 newBestRank = 3;</code>
       *
       * <pre>
       **你本次达到的历史最高排名 
       * </pre>
       */
      public Builder clearNewBestRank() {
        bitField0_ = (bitField0_ & ~0x00000004);
        newBestRank_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.ArenaBestRankReward)
    }

    static {
      defaultInstance = new ArenaBestRankReward(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.ArenaBestRankReward)
  }

  public interface GCArenaIsSendingRewardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.GCArenaIsSendingReward)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.mokylin.GCArenaIsSendingReward}
   *
   * <pre>
   **
   * 服务器通知，竞技场正在发奖，请稍后再打
   * </pre>
   */
  public static final class GCArenaIsSendingReward extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.GCArenaIsSendingReward)
      GCArenaIsSendingRewardOrBuilder {
    // Use GCArenaIsSendingReward.newBuilder() to construct.
    private GCArenaIsSendingReward(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCArenaIsSendingReward(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCArenaIsSendingReward defaultInstance;
    public static GCArenaIsSendingReward getDefaultInstance() {
      return defaultInstance;
    }

    public GCArenaIsSendingReward getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCArenaIsSendingReward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaIsSendingReward_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaIsSendingReward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward.Builder.class);
    }

    public static com.google.protobuf.Parser<GCArenaIsSendingReward> PARSER =
        new com.google.protobuf.AbstractParser<GCArenaIsSendingReward>() {
      public GCArenaIsSendingReward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCArenaIsSendingReward(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCArenaIsSendingReward> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.GCArenaIsSendingReward}
     *
     * <pre>
     **
     * 服务器通知，竞技场正在发奖，请稍后再打
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.GCArenaIsSendingReward)
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingRewardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaIsSendingReward_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaIsSendingReward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaIsSendingReward_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward build() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward result = new com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.GCArenaIsSendingReward) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.GCArenaIsSendingReward)
    }

    static {
      defaultInstance = new GCArenaIsSendingReward(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.GCArenaIsSendingReward)
  }

  public interface GCArenaHasNewReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.GCArenaHasNewReport)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.mokylin.GCArenaHasNewReport}
   *
   * <pre>
   **
   * 服务器通知，您有新的未读战报
   * </pre>
   */
  public static final class GCArenaHasNewReport extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.GCArenaHasNewReport)
      GCArenaHasNewReportOrBuilder {
    // Use GCArenaHasNewReport.newBuilder() to construct.
    private GCArenaHasNewReport(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCArenaHasNewReport(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCArenaHasNewReport defaultInstance;
    public static GCArenaHasNewReport getDefaultInstance() {
      return defaultInstance;
    }

    public GCArenaHasNewReport getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCArenaHasNewReport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaHasNewReport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaHasNewReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport.Builder.class);
    }

    public static com.google.protobuf.Parser<GCArenaHasNewReport> PARSER =
        new com.google.protobuf.AbstractParser<GCArenaHasNewReport>() {
      public GCArenaHasNewReport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCArenaHasNewReport(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCArenaHasNewReport> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.GCArenaHasNewReport}
     *
     * <pre>
     **
     * 服务器通知，您有新的未读战报
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.GCArenaHasNewReport)
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaHasNewReport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaHasNewReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaHasNewReport_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport build() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport result = new com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.GCArenaHasNewReport) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.GCArenaHasNewReport)
    }

    static {
      defaultInstance = new GCArenaHasNewReport(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.GCArenaHasNewReport)
  }

  public interface GCArenaReportsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.GCArenaReports)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> 
        getArenaReportsList();
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getArenaReports(int index);
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    int getArenaReportsCount();
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> 
        getArenaReportsOrBuilderList();
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder getArenaReportsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.GCArenaReports}
   *
   * <pre>
   **
   * 服务器通知，竞技场所有战报信息
   * </pre>
   */
  public static final class GCArenaReports extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.GCArenaReports)
      GCArenaReportsOrBuilder {
    // Use GCArenaReports.newBuilder() to construct.
    private GCArenaReports(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCArenaReports(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCArenaReports defaultInstance;
    public static GCArenaReports getDefaultInstance() {
      return defaultInstance;
    }

    public GCArenaReports getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCArenaReports(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                arenaReports_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport>();
                mutable_bitField0_ |= 0x00000001;
              }
              arenaReports_.add(input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          arenaReports_ = java.util.Collections.unmodifiableList(arenaReports_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReports_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReports_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports.Builder.class);
    }

    public static com.google.protobuf.Parser<GCArenaReports> PARSER =
        new com.google.protobuf.AbstractParser<GCArenaReports>() {
      public GCArenaReports parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCArenaReports(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCArenaReports> getParserForType() {
      return PARSER;
    }

    public static final int ARENAREPORTS_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> arenaReports_;
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> getArenaReportsList() {
      return arenaReports_;
    }
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> 
        getArenaReportsOrBuilderList() {
      return arenaReports_;
    }
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public int getArenaReportsCount() {
      return arenaReports_.size();
    }
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getArenaReports(int index) {
      return arenaReports_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder getArenaReportsOrBuilder(
        int index) {
      return arenaReports_.get(index);
    }

    private void initFields() {
      arenaReports_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getArenaReportsCount(); i++) {
        if (!getArenaReports(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < arenaReports_.size(); i++) {
        output.writeMessage(1, arenaReports_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < arenaReports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, arenaReports_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.GCArenaReports}
     *
     * <pre>
     **
     * 服务器通知，竞技场所有战报信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.GCArenaReports)
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReports_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReports_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getArenaReportsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (arenaReportsBuilder_ == null) {
          arenaReports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          arenaReportsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReports_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports build() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports result = new com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports(this);
        int from_bitField0_ = bitField0_;
        if (arenaReportsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            arenaReports_ = java.util.Collections.unmodifiableList(arenaReports_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.arenaReports_ = arenaReports_;
        } else {
          result.arenaReports_ = arenaReportsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports.getDefaultInstance()) return this;
        if (arenaReportsBuilder_ == null) {
          if (!other.arenaReports_.isEmpty()) {
            if (arenaReports_.isEmpty()) {
              arenaReports_ = other.arenaReports_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureArenaReportsIsMutable();
              arenaReports_.addAll(other.arenaReports_);
            }
            onChanged();
          }
        } else {
          if (!other.arenaReports_.isEmpty()) {
            if (arenaReportsBuilder_.isEmpty()) {
              arenaReportsBuilder_.dispose();
              arenaReportsBuilder_ = null;
              arenaReports_ = other.arenaReports_;
              bitField0_ = (bitField0_ & ~0x00000001);
              arenaReportsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getArenaReportsFieldBuilder() : null;
            } else {
              arenaReportsBuilder_.addAllMessages(other.arenaReports_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getArenaReportsCount(); i++) {
          if (!getArenaReports(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReports) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> arenaReports_ =
        java.util.Collections.emptyList();
      private void ensureArenaReportsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          arenaReports_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport>(arenaReports_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> arenaReportsBuilder_;

      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> getArenaReportsList() {
        if (arenaReportsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(arenaReports_);
        } else {
          return arenaReportsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public int getArenaReportsCount() {
        if (arenaReportsBuilder_ == null) {
          return arenaReports_.size();
        } else {
          return arenaReportsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getArenaReports(int index) {
        if (arenaReportsBuilder_ == null) {
          return arenaReports_.get(index);
        } else {
          return arenaReportsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder setArenaReports(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport value) {
        if (arenaReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArenaReportsIsMutable();
          arenaReports_.set(index, value);
          onChanged();
        } else {
          arenaReportsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder setArenaReports(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder builderForValue) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          arenaReports_.set(index, builderForValue.build());
          onChanged();
        } else {
          arenaReportsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addArenaReports(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport value) {
        if (arenaReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArenaReportsIsMutable();
          arenaReports_.add(value);
          onChanged();
        } else {
          arenaReportsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addArenaReports(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport value) {
        if (arenaReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArenaReportsIsMutable();
          arenaReports_.add(index, value);
          onChanged();
        } else {
          arenaReportsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addArenaReports(
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder builderForValue) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          arenaReports_.add(builderForValue.build());
          onChanged();
        } else {
          arenaReportsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addArenaReports(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder builderForValue) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          arenaReports_.add(index, builderForValue.build());
          onChanged();
        } else {
          arenaReportsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addAllArenaReports(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> values) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, arenaReports_);
          onChanged();
        } else {
          arenaReportsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder clearArenaReports() {
        if (arenaReportsBuilder_ == null) {
          arenaReports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          arenaReportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder removeArenaReports(int index) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          arenaReports_.remove(index);
          onChanged();
        } else {
          arenaReportsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder getArenaReportsBuilder(
          int index) {
        return getArenaReportsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder getArenaReportsOrBuilder(
          int index) {
        if (arenaReportsBuilder_ == null) {
          return arenaReports_.get(index);  } else {
          return arenaReportsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> 
           getArenaReportsOrBuilderList() {
        if (arenaReportsBuilder_ != null) {
          return arenaReportsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(arenaReports_);
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder addArenaReportsBuilder() {
        return getArenaReportsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder addArenaReportsBuilder(
          int index) {
        return getArenaReportsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder> 
           getArenaReportsBuilderList() {
        return getArenaReportsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> 
          getArenaReportsFieldBuilder() {
        if (arenaReportsBuilder_ == null) {
          arenaReportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder>(
                  arenaReports_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          arenaReports_ = null;
        }
        return arenaReportsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.GCArenaReports)
    }

    static {
      defaultInstance = new GCArenaReports(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.GCArenaReports)
  }

  public interface GCArenaReportUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.GCArenaReportUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
     *
     * <pre>
     **要添加的战报 
     * </pre>
     */
    boolean hasNewReport();
    /**
     * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
     *
     * <pre>
     **要添加的战报 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getNewReport();
    /**
     * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
     *
     * <pre>
     **要添加的战报 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder getNewReportOrBuilder();

    /**
     * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
     *
     * <pre>
     **要删除的战报，为null时表示不删除 
     * </pre>
     */
    boolean hasDelReport();
    /**
     * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
     *
     * <pre>
     **要删除的战报，为null时表示不删除 
     * </pre>
     */
    com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId getDelReport();
    /**
     * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
     *
     * <pre>
     **要删除的战报，为null时表示不删除 
     * </pre>
     */
    com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder getDelReportOrBuilder();
  }
  /**
   * Protobuf type {@code com.mokylin.GCArenaReportUpdate}
   *
   * <pre>
   **
   * 服务器通知，竞技场战报列表中，添加一个新战报，删除一个战报
   * </pre>
   */
  public static final class GCArenaReportUpdate extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.GCArenaReportUpdate)
      GCArenaReportUpdateOrBuilder {
    // Use GCArenaReportUpdate.newBuilder() to construct.
    private GCArenaReportUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GCArenaReportUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GCArenaReportUpdate defaultInstance;
    public static GCArenaReportUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public GCArenaReportUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GCArenaReportUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = newReport_.toBuilder();
              }
              newReport_ = input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(newReport_);
                newReport_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = delReport_.toBuilder();
              }
              delReport_ = input.readMessage(com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(delReport_);
                delReport_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReportUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReportUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<GCArenaReportUpdate> PARSER =
        new com.google.protobuf.AbstractParser<GCArenaReportUpdate>() {
      public GCArenaReportUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCArenaReportUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GCArenaReportUpdate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NEWREPORT_FIELD_NUMBER = 1;
    private com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport newReport_;
    /**
     * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
     *
     * <pre>
     **要添加的战报 
     * </pre>
     */
    public boolean hasNewReport() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
     *
     * <pre>
     **要添加的战报 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getNewReport() {
      return newReport_;
    }
    /**
     * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
     *
     * <pre>
     **要添加的战报 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder getNewReportOrBuilder() {
      return newReport_;
    }

    public static final int DELREPORT_FIELD_NUMBER = 2;
    private com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId delReport_;
    /**
     * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
     *
     * <pre>
     **要删除的战报，为null时表示不删除 
     * </pre>
     */
    public boolean hasDelReport() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
     *
     * <pre>
     **要删除的战报，为null时表示不删除 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId getDelReport() {
      return delReport_;
    }
    /**
     * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
     *
     * <pre>
     **要删除的战报，为null时表示不删除 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder getDelReportOrBuilder() {
      return delReport_;
    }

    private void initFields() {
      newReport_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance();
      delReport_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasNewReport()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getNewReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasDelReport()) {
        if (!getDelReport().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, newReport_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, delReport_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, newReport_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, delReport_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.GCArenaReportUpdate}
     *
     * <pre>
     **
     * 服务器通知，竞技场战报列表中，添加一个新战报，删除一个战报
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.GCArenaReportUpdate)
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReportUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReportUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate.class, com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewReportFieldBuilder();
          getDelReportFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (newReportBuilder_ == null) {
          newReport_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance();
        } else {
          newReportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (delReportBuilder_ == null) {
          delReport_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance();
        } else {
          delReportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_GCArenaReportUpdate_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate build() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate result = new com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (newReportBuilder_ == null) {
          result.newReport_ = newReport_;
        } else {
          result.newReport_ = newReportBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (delReportBuilder_ == null) {
          result.delReport_ = delReport_;
        } else {
          result.delReport_ = delReportBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate.getDefaultInstance()) return this;
        if (other.hasNewReport()) {
          mergeNewReport(other.getNewReport());
        }
        if (other.hasDelReport()) {
          mergeDelReport(other.getDelReport());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNewReport()) {
          
          return false;
        }
        if (!getNewReport().isInitialized()) {
          
          return false;
        }
        if (hasDelReport()) {
          if (!getDelReport().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.GCArenaReportUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport newReport_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> newReportBuilder_;
      /**
       * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
       *
       * <pre>
       **要添加的战报 
       * </pre>
       */
      public boolean hasNewReport() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
       *
       * <pre>
       **要添加的战报 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getNewReport() {
        if (newReportBuilder_ == null) {
          return newReport_;
        } else {
          return newReportBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
       *
       * <pre>
       **要添加的战报 
       * </pre>
       */
      public Builder setNewReport(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport value) {
        if (newReportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          newReport_ = value;
          onChanged();
        } else {
          newReportBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
       *
       * <pre>
       **要添加的战报 
       * </pre>
       */
      public Builder setNewReport(
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder builderForValue) {
        if (newReportBuilder_ == null) {
          newReport_ = builderForValue.build();
          onChanged();
        } else {
          newReportBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
       *
       * <pre>
       **要添加的战报 
       * </pre>
       */
      public Builder mergeNewReport(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport value) {
        if (newReportBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              newReport_ != com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance()) {
            newReport_ =
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.newBuilder(newReport_).mergeFrom(value).buildPartial();
          } else {
            newReport_ = value;
          }
          onChanged();
        } else {
          newReportBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
       *
       * <pre>
       **要添加的战报 
       * </pre>
       */
      public Builder clearNewReport() {
        if (newReportBuilder_ == null) {
          newReport_ = com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance();
          onChanged();
        } else {
          newReportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
       *
       * <pre>
       **要添加的战报 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder getNewReportBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getNewReportFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
       *
       * <pre>
       **要添加的战报 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder getNewReportOrBuilder() {
        if (newReportBuilder_ != null) {
          return newReportBuilder_.getMessageOrBuilder();
        } else {
          return newReport_;
        }
      }
      /**
       * <code>required .com.mokylin.ArenaReport newReport = 1;</code>
       *
       * <pre>
       **要添加的战报 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> 
          getNewReportFieldBuilder() {
        if (newReportBuilder_ == null) {
          newReportBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder>(
                  getNewReport(),
                  getParentForChildren(),
                  isClean());
          newReport_ = null;
        }
        return newReportBuilder_;
      }

      private com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId delReport_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder> delReportBuilder_;
      /**
       * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
       *
       * <pre>
       **要删除的战报，为null时表示不删除 
       * </pre>
       */
      public boolean hasDelReport() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
       *
       * <pre>
       **要删除的战报，为null时表示不删除 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId getDelReport() {
        if (delReportBuilder_ == null) {
          return delReport_;
        } else {
          return delReportBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
       *
       * <pre>
       **要删除的战报，为null时表示不删除 
       * </pre>
       */
      public Builder setDelReport(com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId value) {
        if (delReportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          delReport_ = value;
          onChanged();
        } else {
          delReportBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
       *
       * <pre>
       **要删除的战报，为null时表示不删除 
       * </pre>
       */
      public Builder setDelReport(
          com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder builderForValue) {
        if (delReportBuilder_ == null) {
          delReport_ = builderForValue.build();
          onChanged();
        } else {
          delReportBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
       *
       * <pre>
       **要删除的战报，为null时表示不删除 
       * </pre>
       */
      public Builder mergeDelReport(com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId value) {
        if (delReportBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              delReport_ != com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance()) {
            delReport_ =
              com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.newBuilder(delReport_).mergeFrom(value).buildPartial();
          } else {
            delReport_ = value;
          }
          onChanged();
        } else {
          delReportBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
       *
       * <pre>
       **要删除的战报，为null时表示不删除 
       * </pre>
       */
      public Builder clearDelReport() {
        if (delReportBuilder_ == null) {
          delReport_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance();
          onChanged();
        } else {
          delReportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
       *
       * <pre>
       **要删除的战报，为null时表示不删除 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder getDelReportBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDelReportFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
       *
       * <pre>
       **要删除的战报，为null时表示不删除 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder getDelReportOrBuilder() {
        if (delReportBuilder_ != null) {
          return delReportBuilder_.getMessageOrBuilder();
        } else {
          return delReport_;
        }
      }
      /**
       * <code>optional .com.mokylin.CombatReportId delReport = 2;</code>
       *
       * <pre>
       **要删除的战报，为null时表示不删除 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder> 
          getDelReportFieldBuilder() {
        if (delReportBuilder_ == null) {
          delReportBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder>(
                  getDelReport(),
                  getParentForChildren(),
                  isClean());
          delReport_ = null;
        }
        return delReportBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.GCArenaReportUpdate)
    }

    static {
      defaultInstance = new GCArenaReportUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.GCArenaReportUpdate)
  }

  public interface ArenaReportsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.ArenaReports)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> 
        getArenaReportsList();
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getArenaReports(int index);
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    int getArenaReportsCount();
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> 
        getArenaReportsOrBuilderList();
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder getArenaReportsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.ArenaReports}
   *
   * <pre>
   **
   * 竞技场战报列表
   * </pre>
   */
  public static final class ArenaReports extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.ArenaReports)
      ArenaReportsOrBuilder {
    // Use ArenaReports.newBuilder() to construct.
    private ArenaReports(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ArenaReports(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ArenaReports defaultInstance;
    public static ArenaReports getDefaultInstance() {
      return defaultInstance;
    }

    public ArenaReports getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ArenaReports(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                arenaReports_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport>();
                mutable_bitField0_ |= 0x00000001;
              }
              arenaReports_.add(input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          arenaReports_ = java.util.Collections.unmodifiableList(arenaReports_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReports_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReports_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports.class, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports.Builder.class);
    }

    public static com.google.protobuf.Parser<ArenaReports> PARSER =
        new com.google.protobuf.AbstractParser<ArenaReports>() {
      public ArenaReports parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArenaReports(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ArenaReports> getParserForType() {
      return PARSER;
    }

    public static final int ARENAREPORTS_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> arenaReports_;
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> getArenaReportsList() {
      return arenaReports_;
    }
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> 
        getArenaReportsOrBuilderList() {
      return arenaReports_;
    }
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public int getArenaReportsCount() {
      return arenaReports_.size();
    }
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getArenaReports(int index) {
      return arenaReports_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
     *
     * <pre>
     **所有战报，从旧到新 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder getArenaReportsOrBuilder(
        int index) {
      return arenaReports_.get(index);
    }

    private void initFields() {
      arenaReports_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getArenaReportsCount(); i++) {
        if (!getArenaReports(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < arenaReports_.size(); i++) {
        output.writeMessage(1, arenaReports_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < arenaReports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, arenaReports_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.ArenaReports}
     *
     * <pre>
     **
     * 竞技场战报列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.ArenaReports)
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReports_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReports_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports.class, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getArenaReportsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (arenaReportsBuilder_ == null) {
          arenaReports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          arenaReportsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReports_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports build() {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports result = new com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports(this);
        int from_bitField0_ = bitField0_;
        if (arenaReportsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            arenaReports_ = java.util.Collections.unmodifiableList(arenaReports_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.arenaReports_ = arenaReports_;
        } else {
          result.arenaReports_ = arenaReportsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports.getDefaultInstance()) return this;
        if (arenaReportsBuilder_ == null) {
          if (!other.arenaReports_.isEmpty()) {
            if (arenaReports_.isEmpty()) {
              arenaReports_ = other.arenaReports_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureArenaReportsIsMutable();
              arenaReports_.addAll(other.arenaReports_);
            }
            onChanged();
          }
        } else {
          if (!other.arenaReports_.isEmpty()) {
            if (arenaReportsBuilder_.isEmpty()) {
              arenaReportsBuilder_.dispose();
              arenaReportsBuilder_ = null;
              arenaReports_ = other.arenaReports_;
              bitField0_ = (bitField0_ & ~0x00000001);
              arenaReportsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getArenaReportsFieldBuilder() : null;
            } else {
              arenaReportsBuilder_.addAllMessages(other.arenaReports_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getArenaReportsCount(); i++) {
          if (!getArenaReports(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.ArenaReports) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> arenaReports_ =
        java.util.Collections.emptyList();
      private void ensureArenaReportsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          arenaReports_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport>(arenaReports_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> arenaReportsBuilder_;

      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> getArenaReportsList() {
        if (arenaReportsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(arenaReports_);
        } else {
          return arenaReportsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public int getArenaReportsCount() {
        if (arenaReportsBuilder_ == null) {
          return arenaReports_.size();
        } else {
          return arenaReportsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getArenaReports(int index) {
        if (arenaReportsBuilder_ == null) {
          return arenaReports_.get(index);
        } else {
          return arenaReportsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder setArenaReports(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport value) {
        if (arenaReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArenaReportsIsMutable();
          arenaReports_.set(index, value);
          onChanged();
        } else {
          arenaReportsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder setArenaReports(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder builderForValue) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          arenaReports_.set(index, builderForValue.build());
          onChanged();
        } else {
          arenaReportsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addArenaReports(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport value) {
        if (arenaReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArenaReportsIsMutable();
          arenaReports_.add(value);
          onChanged();
        } else {
          arenaReportsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addArenaReports(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport value) {
        if (arenaReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArenaReportsIsMutable();
          arenaReports_.add(index, value);
          onChanged();
        } else {
          arenaReportsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addArenaReports(
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder builderForValue) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          arenaReports_.add(builderForValue.build());
          onChanged();
        } else {
          arenaReportsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addArenaReports(
          int index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder builderForValue) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          arenaReports_.add(index, builderForValue.build());
          onChanged();
        } else {
          arenaReportsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder addAllArenaReports(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport> values) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, arenaReports_);
          onChanged();
        } else {
          arenaReportsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder clearArenaReports() {
        if (arenaReportsBuilder_ == null) {
          arenaReports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          arenaReportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public Builder removeArenaReports(int index) {
        if (arenaReportsBuilder_ == null) {
          ensureArenaReportsIsMutable();
          arenaReports_.remove(index);
          onChanged();
        } else {
          arenaReportsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder getArenaReportsBuilder(
          int index) {
        return getArenaReportsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder getArenaReportsOrBuilder(
          int index) {
        if (arenaReportsBuilder_ == null) {
          return arenaReports_.get(index);  } else {
          return arenaReportsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> 
           getArenaReportsOrBuilderList() {
        if (arenaReportsBuilder_ != null) {
          return arenaReportsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(arenaReports_);
        }
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder addArenaReportsBuilder() {
        return getArenaReportsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder addArenaReportsBuilder(
          int index) {
        return getArenaReportsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.ArenaReport arenaReports = 1;</code>
       *
       * <pre>
       **所有战报，从旧到新 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder> 
           getArenaReportsBuilderList() {
        return getArenaReportsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder> 
          getArenaReportsFieldBuilder() {
        if (arenaReportsBuilder_ == null) {
          arenaReportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder>(
                  arenaReports_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          arenaReports_ = null;
        }
        return arenaReportsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.ArenaReports)
    }

    static {
      defaultInstance = new ArenaReports(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.ArenaReports)
  }

  public interface ArenaReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.ArenaReport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
     *
     * <pre>
     **战报ID 
     * </pre>
     */
    boolean hasCombatReportId();
    /**
     * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
     *
     * <pre>
     **战报ID 
     * </pre>
     */
    com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId getCombatReportId();
    /**
     * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
     *
     * <pre>
     **战报ID 
     * </pre>
     */
    com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder getCombatReportIdOrBuilder();

    /**
     * <code>required int32 oldRank = 2;</code>
     *
     * <pre>
     **战斗之前的名次 
     * </pre>
     */
    boolean hasOldRank();
    /**
     * <code>required int32 oldRank = 2;</code>
     *
     * <pre>
     **战斗之前的名次 
     * </pre>
     */
    int getOldRank();

    /**
     * <code>required int32 newRank = 3;</code>
     *
     * <pre>
     **战斗之后的名次 
     * </pre>
     */
    boolean hasNewRank();
    /**
     * <code>required int32 newRank = 3;</code>
     *
     * <pre>
     **战斗之后的名次 
     * </pre>
     */
    int getNewRank();

    /**
     * <code>required int64 time = 4;</code>
     *
     * <pre>
     **
     * 若用于DB存储：战斗发生的时间点。
     * 若用于给客户端的消息：战斗在多久之前发生的，单位：毫秒。
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required int64 time = 4;</code>
     *
     * <pre>
     **
     * 若用于DB存储：战斗发生的时间点。
     * 若用于给客户端的消息：战斗在多久之前发生的，单位：毫秒。
     * </pre>
     */
    long getTime();

    /**
     * <code>required bool isVictory = 5;</code>
     *
     * <pre>
     **我是否胜利了 
     * </pre>
     */
    boolean hasIsVictory();
    /**
     * <code>required bool isVictory = 5;</code>
     *
     * <pre>
     **我是否胜利了 
     * </pre>
     */
    boolean getIsVictory();

    /**
     * <code>required bool isAttacker = 6;</code>
     *
     * <pre>
     **我是否是挑战方 
     * </pre>
     */
    boolean hasIsAttacker();
    /**
     * <code>required bool isAttacker = 6;</code>
     *
     * <pre>
     **我是否是挑战方 
     * </pre>
     */
    boolean getIsAttacker();

    /**
     * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
     *
     * <pre>
     **对手的信息 
     * </pre>
     */
    boolean hasEnemy();
    /**
     * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
     *
     * <pre>
     **对手的信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo getEnemy();
    /**
     * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
     *
     * <pre>
     **对手的信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfoOrBuilder getEnemyOrBuilder();
  }
  /**
   * Protobuf type {@code com.mokylin.ArenaReport}
   *
   * <pre>
   **
   * 竞技场战斗记录
   * </pre>
   */
  public static final class ArenaReport extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.ArenaReport)
      ArenaReportOrBuilder {
    // Use ArenaReport.newBuilder() to construct.
    private ArenaReport(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ArenaReport(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ArenaReport defaultInstance;
    public static ArenaReport getDefaultInstance() {
      return defaultInstance;
    }

    public ArenaReport getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ArenaReport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = combatReportId_.toBuilder();
              }
              combatReportId_ = input.readMessage(com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(combatReportId_);
                combatReportId_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              oldRank_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              newRank_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              time_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              isVictory_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isAttacker_ = input.readBool();
              break;
            }
            case 58: {
              com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = enemy_.toBuilder();
              }
              enemy_ = input.readMessage(com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(enemy_);
                enemy_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.class, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder.class);
    }

    public static com.google.protobuf.Parser<ArenaReport> PARSER =
        new com.google.protobuf.AbstractParser<ArenaReport>() {
      public ArenaReport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArenaReport(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ArenaReport> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int COMBATREPORTID_FIELD_NUMBER = 1;
    private com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId combatReportId_;
    /**
     * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
     *
     * <pre>
     **战报ID 
     * </pre>
     */
    public boolean hasCombatReportId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
     *
     * <pre>
     **战报ID 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId getCombatReportId() {
      return combatReportId_;
    }
    /**
     * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
     *
     * <pre>
     **战报ID 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder getCombatReportIdOrBuilder() {
      return combatReportId_;
    }

    public static final int OLDRANK_FIELD_NUMBER = 2;
    private int oldRank_;
    /**
     * <code>required int32 oldRank = 2;</code>
     *
     * <pre>
     **战斗之前的名次 
     * </pre>
     */
    public boolean hasOldRank() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 oldRank = 2;</code>
     *
     * <pre>
     **战斗之前的名次 
     * </pre>
     */
    public int getOldRank() {
      return oldRank_;
    }

    public static final int NEWRANK_FIELD_NUMBER = 3;
    private int newRank_;
    /**
     * <code>required int32 newRank = 3;</code>
     *
     * <pre>
     **战斗之后的名次 
     * </pre>
     */
    public boolean hasNewRank() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 newRank = 3;</code>
     *
     * <pre>
     **战斗之后的名次 
     * </pre>
     */
    public int getNewRank() {
      return newRank_;
    }

    public static final int TIME_FIELD_NUMBER = 4;
    private long time_;
    /**
     * <code>required int64 time = 4;</code>
     *
     * <pre>
     **
     * 若用于DB存储：战斗发生的时间点。
     * 若用于给客户端的消息：战斗在多久之前发生的，单位：毫秒。
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 time = 4;</code>
     *
     * <pre>
     **
     * 若用于DB存储：战斗发生的时间点。
     * 若用于给客户端的消息：战斗在多久之前发生的，单位：毫秒。
     * </pre>
     */
    public long getTime() {
      return time_;
    }

    public static final int ISVICTORY_FIELD_NUMBER = 5;
    private boolean isVictory_;
    /**
     * <code>required bool isVictory = 5;</code>
     *
     * <pre>
     **我是否胜利了 
     * </pre>
     */
    public boolean hasIsVictory() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bool isVictory = 5;</code>
     *
     * <pre>
     **我是否胜利了 
     * </pre>
     */
    public boolean getIsVictory() {
      return isVictory_;
    }

    public static final int ISATTACKER_FIELD_NUMBER = 6;
    private boolean isAttacker_;
    /**
     * <code>required bool isAttacker = 6;</code>
     *
     * <pre>
     **我是否是挑战方 
     * </pre>
     */
    public boolean hasIsAttacker() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bool isAttacker = 6;</code>
     *
     * <pre>
     **我是否是挑战方 
     * </pre>
     */
    public boolean getIsAttacker() {
      return isAttacker_;
    }

    public static final int ENEMY_FIELD_NUMBER = 7;
    private com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo enemy_;
    /**
     * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
     *
     * <pre>
     **对手的信息 
     * </pre>
     */
    public boolean hasEnemy() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
     *
     * <pre>
     **对手的信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo getEnemy() {
      return enemy_;
    }
    /**
     * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
     *
     * <pre>
     **对手的信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfoOrBuilder getEnemyOrBuilder() {
      return enemy_;
    }

    private void initFields() {
      combatReportId_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance();
      oldRank_ = 0;
      newRank_ = 0;
      time_ = 0L;
      isVictory_ = false;
      isAttacker_ = false;
      enemy_ = com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCombatReportId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOldRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNewRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsVictory()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsAttacker()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEnemy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCombatReportId().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getEnemy().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, combatReportId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, oldRank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, newRank_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, isVictory_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, isAttacker_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, enemy_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, combatReportId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, oldRank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, newRank_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isVictory_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isAttacker_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, enemy_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.ArenaReport}
     *
     * <pre>
     **
     * 竞技场战斗记录
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.ArenaReport)
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaReportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.class, com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCombatReportIdFieldBuilder();
          getEnemyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (combatReportIdBuilder_ == null) {
          combatReportId_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance();
        } else {
          combatReportIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        oldRank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        newRank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        isVictory_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        isAttacker_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (enemyBuilder_ == null) {
          enemy_ = com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.getDefaultInstance();
        } else {
          enemyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_ArenaReport_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport build() {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport result = new com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (combatReportIdBuilder_ == null) {
          result.combatReportId_ = combatReportId_;
        } else {
          result.combatReportId_ = combatReportIdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.oldRank_ = oldRank_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.newRank_ = newRank_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isVictory_ = isVictory_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isAttacker_ = isAttacker_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (enemyBuilder_ == null) {
          result.enemy_ = enemy_;
        } else {
          result.enemy_ = enemyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport.getDefaultInstance()) return this;
        if (other.hasCombatReportId()) {
          mergeCombatReportId(other.getCombatReportId());
        }
        if (other.hasOldRank()) {
          setOldRank(other.getOldRank());
        }
        if (other.hasNewRank()) {
          setNewRank(other.getNewRank());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasIsVictory()) {
          setIsVictory(other.getIsVictory());
        }
        if (other.hasIsAttacker()) {
          setIsAttacker(other.getIsAttacker());
        }
        if (other.hasEnemy()) {
          mergeEnemy(other.getEnemy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCombatReportId()) {
          
          return false;
        }
        if (!hasOldRank()) {
          
          return false;
        }
        if (!hasNewRank()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        if (!hasIsVictory()) {
          
          return false;
        }
        if (!hasIsAttacker()) {
          
          return false;
        }
        if (!hasEnemy()) {
          
          return false;
        }
        if (!getCombatReportId().isInitialized()) {
          
          return false;
        }
        if (!getEnemy().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.ArenaReport) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId combatReportId_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder> combatReportIdBuilder_;
      /**
       * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
       *
       * <pre>
       **战报ID 
       * </pre>
       */
      public boolean hasCombatReportId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
       *
       * <pre>
       **战报ID 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId getCombatReportId() {
        if (combatReportIdBuilder_ == null) {
          return combatReportId_;
        } else {
          return combatReportIdBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
       *
       * <pre>
       **战报ID 
       * </pre>
       */
      public Builder setCombatReportId(com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId value) {
        if (combatReportIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          combatReportId_ = value;
          onChanged();
        } else {
          combatReportIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
       *
       * <pre>
       **战报ID 
       * </pre>
       */
      public Builder setCombatReportId(
          com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder builderForValue) {
        if (combatReportIdBuilder_ == null) {
          combatReportId_ = builderForValue.build();
          onChanged();
        } else {
          combatReportIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
       *
       * <pre>
       **战报ID 
       * </pre>
       */
      public Builder mergeCombatReportId(com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId value) {
        if (combatReportIdBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              combatReportId_ != com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance()) {
            combatReportId_ =
              com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.newBuilder(combatReportId_).mergeFrom(value).buildPartial();
          } else {
            combatReportId_ = value;
          }
          onChanged();
        } else {
          combatReportIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
       *
       * <pre>
       **战报ID 
       * </pre>
       */
      public Builder clearCombatReportId() {
        if (combatReportIdBuilder_ == null) {
          combatReportId_ = com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.getDefaultInstance();
          onChanged();
        } else {
          combatReportIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
       *
       * <pre>
       **战报ID 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder getCombatReportIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCombatReportIdFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
       *
       * <pre>
       **战报ID 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder getCombatReportIdOrBuilder() {
        if (combatReportIdBuilder_ != null) {
          return combatReportIdBuilder_.getMessageOrBuilder();
        } else {
          return combatReportId_;
        }
      }
      /**
       * <code>required .com.mokylin.CombatReportId combatReportId = 1;</code>
       *
       * <pre>
       **战报ID 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder> 
          getCombatReportIdFieldBuilder() {
        if (combatReportIdBuilder_ == null) {
          combatReportIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportId.Builder, com.mokylin.bleach.protobuf.CombatReportMessage.CombatReportIdOrBuilder>(
                  getCombatReportId(),
                  getParentForChildren(),
                  isClean());
          combatReportId_ = null;
        }
        return combatReportIdBuilder_;
      }

      private int oldRank_ ;
      /**
       * <code>required int32 oldRank = 2;</code>
       *
       * <pre>
       **战斗之前的名次 
       * </pre>
       */
      public boolean hasOldRank() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 oldRank = 2;</code>
       *
       * <pre>
       **战斗之前的名次 
       * </pre>
       */
      public int getOldRank() {
        return oldRank_;
      }
      /**
       * <code>required int32 oldRank = 2;</code>
       *
       * <pre>
       **战斗之前的名次 
       * </pre>
       */
      public Builder setOldRank(int value) {
        bitField0_ |= 0x00000002;
        oldRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 oldRank = 2;</code>
       *
       * <pre>
       **战斗之前的名次 
       * </pre>
       */
      public Builder clearOldRank() {
        bitField0_ = (bitField0_ & ~0x00000002);
        oldRank_ = 0;
        onChanged();
        return this;
      }

      private int newRank_ ;
      /**
       * <code>required int32 newRank = 3;</code>
       *
       * <pre>
       **战斗之后的名次 
       * </pre>
       */
      public boolean hasNewRank() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 newRank = 3;</code>
       *
       * <pre>
       **战斗之后的名次 
       * </pre>
       */
      public int getNewRank() {
        return newRank_;
      }
      /**
       * <code>required int32 newRank = 3;</code>
       *
       * <pre>
       **战斗之后的名次 
       * </pre>
       */
      public Builder setNewRank(int value) {
        bitField0_ |= 0x00000004;
        newRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 newRank = 3;</code>
       *
       * <pre>
       **战斗之后的名次 
       * </pre>
       */
      public Builder clearNewRank() {
        bitField0_ = (bitField0_ & ~0x00000004);
        newRank_ = 0;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>required int64 time = 4;</code>
       *
       * <pre>
       **
       * 若用于DB存储：战斗发生的时间点。
       * 若用于给客户端的消息：战斗在多久之前发生的，单位：毫秒。
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 time = 4;</code>
       *
       * <pre>
       **
       * 若用于DB存储：战斗发生的时间点。
       * 若用于给客户端的消息：战斗在多久之前发生的，单位：毫秒。
       * </pre>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>required int64 time = 4;</code>
       *
       * <pre>
       **
       * 若用于DB存储：战斗发生的时间点。
       * 若用于给客户端的消息：战斗在多久之前发生的，单位：毫秒。
       * </pre>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000008;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 time = 4;</code>
       *
       * <pre>
       **
       * 若用于DB存储：战斗发生的时间点。
       * 若用于给客户端的消息：战斗在多久之前发生的，单位：毫秒。
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        time_ = 0L;
        onChanged();
        return this;
      }

      private boolean isVictory_ ;
      /**
       * <code>required bool isVictory = 5;</code>
       *
       * <pre>
       **我是否胜利了 
       * </pre>
       */
      public boolean hasIsVictory() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool isVictory = 5;</code>
       *
       * <pre>
       **我是否胜利了 
       * </pre>
       */
      public boolean getIsVictory() {
        return isVictory_;
      }
      /**
       * <code>required bool isVictory = 5;</code>
       *
       * <pre>
       **我是否胜利了 
       * </pre>
       */
      public Builder setIsVictory(boolean value) {
        bitField0_ |= 0x00000010;
        isVictory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool isVictory = 5;</code>
       *
       * <pre>
       **我是否胜利了 
       * </pre>
       */
      public Builder clearIsVictory() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isVictory_ = false;
        onChanged();
        return this;
      }

      private boolean isAttacker_ ;
      /**
       * <code>required bool isAttacker = 6;</code>
       *
       * <pre>
       **我是否是挑战方 
       * </pre>
       */
      public boolean hasIsAttacker() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bool isAttacker = 6;</code>
       *
       * <pre>
       **我是否是挑战方 
       * </pre>
       */
      public boolean getIsAttacker() {
        return isAttacker_;
      }
      /**
       * <code>required bool isAttacker = 6;</code>
       *
       * <pre>
       **我是否是挑战方 
       * </pre>
       */
      public Builder setIsAttacker(boolean value) {
        bitField0_ |= 0x00000020;
        isAttacker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool isAttacker = 6;</code>
       *
       * <pre>
       **我是否是挑战方 
       * </pre>
       */
      public Builder clearIsAttacker() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isAttacker_ = false;
        onChanged();
        return this;
      }

      private com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo enemy_ = com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo, com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfoOrBuilder> enemyBuilder_;
      /**
       * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
       *
       * <pre>
       **对手的信息 
       * </pre>
       */
      public boolean hasEnemy() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
       *
       * <pre>
       **对手的信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo getEnemy() {
        if (enemyBuilder_ == null) {
          return enemy_;
        } else {
          return enemyBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
       *
       * <pre>
       **对手的信息 
       * </pre>
       */
      public Builder setEnemy(com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo value) {
        if (enemyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          enemy_ = value;
          onChanged();
        } else {
          enemyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
       *
       * <pre>
       **对手的信息 
       * </pre>
       */
      public Builder setEnemy(
          com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.Builder builderForValue) {
        if (enemyBuilder_ == null) {
          enemy_ = builderForValue.build();
          onChanged();
        } else {
          enemyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
       *
       * <pre>
       **对手的信息 
       * </pre>
       */
      public Builder mergeEnemy(com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo value) {
        if (enemyBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              enemy_ != com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.getDefaultInstance()) {
            enemy_ =
              com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.newBuilder(enemy_).mergeFrom(value).buildPartial();
          } else {
            enemy_ = value;
          }
          onChanged();
        } else {
          enemyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
       *
       * <pre>
       **对手的信息 
       * </pre>
       */
      public Builder clearEnemy() {
        if (enemyBuilder_ == null) {
          enemy_ = com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.getDefaultInstance();
          onChanged();
        } else {
          enemyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
       *
       * <pre>
       **对手的信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.Builder getEnemyBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getEnemyFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
       *
       * <pre>
       **对手的信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfoOrBuilder getEnemyOrBuilder() {
        if (enemyBuilder_ != null) {
          return enemyBuilder_.getMessageOrBuilder();
        } else {
          return enemy_;
        }
      }
      /**
       * <code>required .com.mokylin.EnemyAvatarInfo enemy = 7;</code>
       *
       * <pre>
       **对手的信息 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo, com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfoOrBuilder> 
          getEnemyFieldBuilder() {
        if (enemyBuilder_ == null) {
          enemyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo, com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.Builder, com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfoOrBuilder>(
                  getEnemy(),
                  getParentForChildren(),
                  isClean());
          enemy_ = null;
        }
        return enemyBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.ArenaReport)
    }

    static {
      defaultInstance = new ArenaReport(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.ArenaReport)
  }

  public interface EnemyAvatarInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mokylin.EnemyAvatarInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     **名字 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     **名字 
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     **名字 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     **等级 
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     **等级 
     * </pre>
     */
    int getLevel();

    /**
     * <code>required int32 avatarId = 3;</code>
     *
     * <pre>
     **作为外形展示的英雄模板ID 
     * </pre>
     */
    boolean hasAvatarId();
    /**
     * <code>required int32 avatarId = 3;</code>
     *
     * <pre>
     **作为外形展示的英雄模板ID 
     * </pre>
     */
    int getAvatarId();

    /**
     * <code>required int32 frameId = 4;</code>
     *
     * <pre>
     **头像框ID 
     * </pre>
     */
    boolean hasFrameId();
    /**
     * <code>required int32 frameId = 4;</code>
     *
     * <pre>
     **头像框ID 
     * </pre>
     */
    int getFrameId();
  }
  /**
   * Protobuf type {@code com.mokylin.EnemyAvatarInfo}
   *
   * <pre>
   **
   * 敌人信息，主要用于显示
   * </pre>
   */
  public static final class EnemyAvatarInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mokylin.EnemyAvatarInfo)
      EnemyAvatarInfoOrBuilder {
    // Use EnemyAvatarInfo.newBuilder() to construct.
    private EnemyAvatarInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EnemyAvatarInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EnemyAvatarInfo defaultInstance;
    public static EnemyAvatarInfo getDefaultInstance() {
      return defaultInstance;
    }

    public EnemyAvatarInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EnemyAvatarInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              level_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              avatarId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              frameId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyAvatarInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyAvatarInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.class, com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<EnemyAvatarInfo> PARSER =
        new com.google.protobuf.AbstractParser<EnemyAvatarInfo>() {
      public EnemyAvatarInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnemyAvatarInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EnemyAvatarInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     **名字 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     **名字 
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     **名字 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     **等级 
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     **等级 
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    public static final int AVATARID_FIELD_NUMBER = 3;
    private int avatarId_;
    /**
     * <code>required int32 avatarId = 3;</code>
     *
     * <pre>
     **作为外形展示的英雄模板ID 
     * </pre>
     */
    public boolean hasAvatarId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 avatarId = 3;</code>
     *
     * <pre>
     **作为外形展示的英雄模板ID 
     * </pre>
     */
    public int getAvatarId() {
      return avatarId_;
    }

    public static final int FRAMEID_FIELD_NUMBER = 4;
    private int frameId_;
    /**
     * <code>required int32 frameId = 4;</code>
     *
     * <pre>
     **头像框ID 
     * </pre>
     */
    public boolean hasFrameId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 frameId = 4;</code>
     *
     * <pre>
     **头像框ID 
     * </pre>
     */
    public int getFrameId() {
      return frameId_;
    }

    private void initFields() {
      name_ = "";
      level_ = 0;
      avatarId_ = 0;
      frameId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAvatarId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrameId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, avatarId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, frameId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, avatarId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, frameId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.EnemyAvatarInfo}
     *
     * <pre>
     **
     * 敌人信息，主要用于显示
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mokylin.EnemyAvatarInfo)
        com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyAvatarInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyAvatarInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.class, com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        avatarId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        frameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.internal_static_com_mokylin_EnemyAvatarInfo_descriptor;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo build() {
        com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo buildPartial() {
        com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo result = new com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.avatarId_ = avatarId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.frameId_ = frameId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo) {
          return mergeFrom((com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo other) {
        if (other == com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasAvatarId()) {
          setAvatarId(other.getAvatarId());
        }
        if (other.hasFrameId()) {
          setFrameId(other.getFrameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasAvatarId()) {
          
          return false;
        }
        if (!hasFrameId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.ArenaMessage.EnemyAvatarInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **名字 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **名字 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **名字 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **名字 
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **名字 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **名字 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       **等级 
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       **等级 
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       **等级 
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000002;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       **等级 
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        onChanged();
        return this;
      }

      private int avatarId_ ;
      /**
       * <code>required int32 avatarId = 3;</code>
       *
       * <pre>
       **作为外形展示的英雄模板ID 
       * </pre>
       */
      public boolean hasAvatarId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 avatarId = 3;</code>
       *
       * <pre>
       **作为外形展示的英雄模板ID 
       * </pre>
       */
      public int getAvatarId() {
        return avatarId_;
      }
      /**
       * <code>required int32 avatarId = 3;</code>
       *
       * <pre>
       **作为外形展示的英雄模板ID 
       * </pre>
       */
      public Builder setAvatarId(int value) {
        bitField0_ |= 0x00000004;
        avatarId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 avatarId = 3;</code>
       *
       * <pre>
       **作为外形展示的英雄模板ID 
       * </pre>
       */
      public Builder clearAvatarId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        avatarId_ = 0;
        onChanged();
        return this;
      }

      private int frameId_ ;
      /**
       * <code>required int32 frameId = 4;</code>
       *
       * <pre>
       **头像框ID 
       * </pre>
       */
      public boolean hasFrameId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 frameId = 4;</code>
       *
       * <pre>
       **头像框ID 
       * </pre>
       */
      public int getFrameId() {
        return frameId_;
      }
      /**
       * <code>required int32 frameId = 4;</code>
       *
       * <pre>
       **头像框ID 
       * </pre>
       */
      public Builder setFrameId(int value) {
        bitField0_ |= 0x00000008;
        frameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 frameId = 4;</code>
       *
       * <pre>
       **头像框ID 
       * </pre>
       */
      public Builder clearFrameId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        frameId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.EnemyAvatarInfo)
    }

    static {
      defaultInstance = new EnemyAvatarInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.EnemyAvatarInfo)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_CGArenaOpenPanel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_CGArenaOpenPanel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_CGArenaAttack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_CGArenaAttack_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_CGArenaResetEnemys_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_CGArenaResetEnemys_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_CGArenaOpenReportsPanel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_CGArenaOpenReportsPanel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_CGArenaViewAllReports_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_CGArenaViewAllReports_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_GCArenaInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_GCArenaInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_Enemy_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_Enemy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_EnemyHero_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_EnemyHero_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_GCArenaEnemys_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_GCArenaEnemys_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_GCArenaSelectedEnemyChange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_GCArenaSelectedEnemyChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_GCArenaCombat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_GCArenaCombat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_ArenaFailReward_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_ArenaFailReward_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_ArenaBestRankReward_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_ArenaBestRankReward_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_GCArenaIsSendingReward_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_GCArenaIsSendingReward_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_GCArenaHasNewReport_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_GCArenaHasNewReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_GCArenaReports_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_GCArenaReports_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_GCArenaReportUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_GCArenaReportUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_ArenaReports_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_ArenaReports_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_ArenaReport_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_ArenaReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_EnemyAvatarInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_EnemyAvatarInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Arena.proto\022\013com.mokylin\032\021MessageType." +
      "proto\032\014Common.proto\032\022CombatReport.proto\032" +
      "\017db/DBMail.proto\"\031\n\020CGArenaOpenPanel:\005\210\265" +
      "\030\213\005\"V\n\rCGArenaAttack\022\014\n\004rank\030\001 \002(\005\022\021\n\the" +
      "roUuids\030\002 \003(\003\022\035\n\025isUnconditionalAttack\030\003" +
      " \002(\010:\005\210\265\030\214\005\"\033\n\022CGArenaResetEnemys:\005\210\265\030\215\005" +
      "\" \n\027CGArenaOpenReportsPanel:\005\210\265\030\216\005\"\036\n\025CG" +
      "ArenaViewAllReports:\005\210\265\030\217\005\"\220\001\n\013GCArenaIn" +
      "fo\022#\n\007enemies\030\001 \003(\0132\022.com.mokylin.Enemy\022" +
      "\016\n\006myRank\030\002 \002(\005\022\022\n\nmyBestRank\030\003 \002(\005\022\027\n\017i",
      "sReportNotView\030\004 \002(\010\022\030\n\020totalAttackCount" +
      "\030\005 \002(\005:\005\220\265\030\213\005\"\240\001\n\005Enemy\022\014\n\004uuid\030\001 \002(\003\022\014\n" +
      "\004rank\030\002 \002(\005\022\r\n\005force\030\003 \002(\005\022\016\n\006avatar\030\004 \002" +
      "(\005\022\023\n\013headFrameId\030\005 \002(\005\022\r\n\005level\030\006 \002(\005\022\014" +
      "\n\004name\030\007 \002(\t\022*\n\nenemyHeros\030\010 \003(\0132\026.com.m" +
      "okylin.EnemyHero\"A\n\tEnemyHero\022\022\n\ntemplat" +
      "eId\030\001 \002(\005\022\021\n\tstarCount\030\002 \002(\005\022\r\n\005level\030\003 " +
      "\002(\005\";\n\rGCArenaEnemys\022#\n\007enemies\030\001 \003(\0132\022." +
      "com.mokylin.Enemy:\005\220\265\030\214\005\"Y\n\032GCArenaSelec" +
      "tedEnemyChange\022\017\n\007oldUuid\030\001 \002(\003\022#\n\007enemi",
      "es\030\002 \003(\0132\022.com.mokylin.Enemy:\005\220\265\030\215\005\"\306\001\n\r" +
      "GCArenaCombat\022/\n\014combatReport\030\001 \002(\0132\031.co" +
      "m.mokylin.CombatReport\022\021\n\tfightGold\030\002 \002(" +
      "\003\0220\n\nfailReward\030\003 \001(\0132\034.com.mokylin.Aren" +
      "aFailReward\0228\n\016bestRankReward\030\004 \001(\0132 .co" +
      "m.mokylin.ArenaBestRankReward:\005\220\265\030\216\005\"?\n\017" +
      "ArenaFailReward\022,\n\tresources\030\001 \003(\0132\031.com" +
      ".mokylin.PrizResource\"P\n\023ArenaBestRankRe" +
      "ward\022\017\n\007diamond\030\001 \002(\005\022\023\n\013oldBestRank\030\002 \002" +
      "(\005\022\023\n\013newBestRank\030\003 \002(\005\"\037\n\026GCArenaIsSend",
      "ingReward:\005\220\265\030\222\005\"\034\n\023GCArenaHasNewReport:" +
      "\005\220\265\030\217\005\"G\n\016GCArenaReports\022.\n\014arenaReports" +
      "\030\001 \003(\0132\030.com.mokylin.ArenaReport:\005\220\265\030\220\005\"" +
      "y\n\023GCArenaReportUpdate\022+\n\tnewReport\030\001 \002(" +
      "\0132\030.com.mokylin.ArenaReport\022.\n\tdelReport" +
      "\030\002 \001(\0132\033.com.mokylin.CombatReportId:\005\220\265\030" +
      "\221\005\">\n\014ArenaReports\022.\n\014arenaReports\030\001 \003(\013" +
      "2\030.com.mokylin.ArenaReport\"\306\001\n\013ArenaRepo" +
      "rt\0223\n\016combatReportId\030\001 \002(\0132\033.com.mokylin" +
      ".CombatReportId\022\017\n\007oldRank\030\002 \002(\005\022\017\n\007newR",
      "ank\030\003 \002(\005\022\014\n\004time\030\004 \002(\003\022\021\n\tisVictory\030\005 \002" +
      "(\010\022\022\n\nisAttacker\030\006 \002(\010\022+\n\005enemy\030\007 \002(\0132\034." +
      "com.mokylin.EnemyAvatarInfo\"Q\n\017EnemyAvat" +
      "arInfo\022\014\n\004name\030\001 \002(\t\022\r\n\005level\030\002 \002(\005\022\020\n\010a" +
      "vatarId\030\003 \002(\005\022\017\n\007frameId\030\004 \002(\005B+\n\033com.mo" +
      "kylin.bleach.protobufB\014ArenaMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.mokylin.bleach.protobuf.MessageType.getDescriptor(),
          com.mokylin.bleach.protobuf.CommonMessage.getDescriptor(),
          com.mokylin.bleach.protobuf.CombatReportMessage.getDescriptor(),
          com.mokylin.bleach.protobuf.db.DBMail.getDescriptor(),
        }, assigner);
    internal_static_com_mokylin_CGArenaOpenPanel_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_mokylin_CGArenaOpenPanel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_CGArenaOpenPanel_descriptor,
        new java.lang.String[] { });
    internal_static_com_mokylin_CGArenaAttack_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_mokylin_CGArenaAttack_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_CGArenaAttack_descriptor,
        new java.lang.String[] { "Rank", "HeroUuids", "IsUnconditionalAttack", });
    internal_static_com_mokylin_CGArenaResetEnemys_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_mokylin_CGArenaResetEnemys_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_CGArenaResetEnemys_descriptor,
        new java.lang.String[] { });
    internal_static_com_mokylin_CGArenaOpenReportsPanel_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_mokylin_CGArenaOpenReportsPanel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_CGArenaOpenReportsPanel_descriptor,
        new java.lang.String[] { });
    internal_static_com_mokylin_CGArenaViewAllReports_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_mokylin_CGArenaViewAllReports_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_CGArenaViewAllReports_descriptor,
        new java.lang.String[] { });
    internal_static_com_mokylin_GCArenaInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_mokylin_GCArenaInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_GCArenaInfo_descriptor,
        new java.lang.String[] { "Enemies", "MyRank", "MyBestRank", "IsReportNotView", "TotalAttackCount", });
    internal_static_com_mokylin_Enemy_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_mokylin_Enemy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_Enemy_descriptor,
        new java.lang.String[] { "Uuid", "Rank", "Force", "Avatar", "HeadFrameId", "Level", "Name", "EnemyHeros", });
    internal_static_com_mokylin_EnemyHero_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_mokylin_EnemyHero_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_EnemyHero_descriptor,
        new java.lang.String[] { "TemplateId", "StarCount", "Level", });
    internal_static_com_mokylin_GCArenaEnemys_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_mokylin_GCArenaEnemys_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_GCArenaEnemys_descriptor,
        new java.lang.String[] { "Enemies", });
    internal_static_com_mokylin_GCArenaSelectedEnemyChange_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_mokylin_GCArenaSelectedEnemyChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_GCArenaSelectedEnemyChange_descriptor,
        new java.lang.String[] { "OldUuid", "Enemies", });
    internal_static_com_mokylin_GCArenaCombat_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_mokylin_GCArenaCombat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_GCArenaCombat_descriptor,
        new java.lang.String[] { "CombatReport", "FightGold", "FailReward", "BestRankReward", });
    internal_static_com_mokylin_ArenaFailReward_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_mokylin_ArenaFailReward_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_ArenaFailReward_descriptor,
        new java.lang.String[] { "Resources", });
    internal_static_com_mokylin_ArenaBestRankReward_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_mokylin_ArenaBestRankReward_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_ArenaBestRankReward_descriptor,
        new java.lang.String[] { "Diamond", "OldBestRank", "NewBestRank", });
    internal_static_com_mokylin_GCArenaIsSendingReward_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_com_mokylin_GCArenaIsSendingReward_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_GCArenaIsSendingReward_descriptor,
        new java.lang.String[] { });
    internal_static_com_mokylin_GCArenaHasNewReport_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_com_mokylin_GCArenaHasNewReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_GCArenaHasNewReport_descriptor,
        new java.lang.String[] { });
    internal_static_com_mokylin_GCArenaReports_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_com_mokylin_GCArenaReports_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_GCArenaReports_descriptor,
        new java.lang.String[] { "ArenaReports", });
    internal_static_com_mokylin_GCArenaReportUpdate_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_com_mokylin_GCArenaReportUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_GCArenaReportUpdate_descriptor,
        new java.lang.String[] { "NewReport", "DelReport", });
    internal_static_com_mokylin_ArenaReports_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_com_mokylin_ArenaReports_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_ArenaReports_descriptor,
        new java.lang.String[] { "ArenaReports", });
    internal_static_com_mokylin_ArenaReport_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_com_mokylin_ArenaReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_ArenaReport_descriptor,
        new java.lang.String[] { "CombatReportId", "OldRank", "NewRank", "Time", "IsVictory", "IsAttacker", "Enemy", });
    internal_static_com_mokylin_EnemyAvatarInfo_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_com_mokylin_EnemyAvatarInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mokylin_EnemyAvatarInfo_descriptor,
        new java.lang.String[] { "Name", "Level", "AvatarId", "FrameId", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.mokylin.bleach.protobuf.MessageType.cgMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.cgMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.cgMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.cgMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.cgMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.gcMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.gcMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.gcMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.gcMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.gcMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.gcMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.gcMessageType);
    registry.add(com.mokylin.bleach.protobuf.MessageType.gcMessageType);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.mokylin.bleach.protobuf.MessageType.getDescriptor();
    com.mokylin.bleach.protobuf.CommonMessage.getDescriptor();
    com.mokylin.bleach.protobuf.CombatReportMessage.getDescriptor();
    com.mokylin.bleach.protobuf.db.DBMail.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
