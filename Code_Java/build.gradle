buildscript {
    repositories {
        jcenter()
    }
    // buildscript dependencies can be used for build time plugins.
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}
// Include a gradle script that has all of our dependencies split out.
apply from: "gradle/dependencies.gradle"

group = 'com.mokylin.bleach'
version = '1.0-SNAPSHOT'

allprojects {
    // Apply the java plugin to add support for Java
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'
    // Using Jitpack so I need the repo name in the group to match.

    repositories {
        mavenLocal()
    }

    configurations.all {

        it.resolutionStrategy {
            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
//            failOnVersionConflict()

            // Auto force all of our explicit dependencies.
//            project.libs.each { k, v -> force(v) }

            // cache dynamic versions for 10 minutes
            cacheDynamicVersionsFor 10 * 60, 'seconds'
            // don't cache changing modules at all
            cacheChangingModulesFor 0, 'seconds'
        }
    }

    // Maven Publish Begin
    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }
    // This publishes sources with our jars.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }
    // Maven Publish End
}
allprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    shadowJar {
        classifier = null
    }
}
