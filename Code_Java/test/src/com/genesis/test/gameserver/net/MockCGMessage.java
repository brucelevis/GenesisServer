// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MockNetMessage.proto

package com.genesis.test.gameserver.net;

import com.genesis.test.protobuf.MockMessageType;

public final class MockCGMessage {
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_com_mokylin_test_CGTEST_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_com_mokylin_test_CGTEST_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_com_mokylin_test_CGMAKELOVE_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_com_mokylin_test_CGMAKELOVE_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_com_mokylin_test_CGLogin_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_com_mokylin_test_CGLogin_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_com_mokylin_test_Player_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_com_mokylin_test_Player_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_com_mokylin_test_GCLogin_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_com_mokylin_test_GCLogin_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

    static {
        java.lang.String[] descriptorData = {"\n\024MockNetMessage.proto\022\020com.mokylin.test" +
                "\032\025MockMessageType.proto\"8\n\006CGTEST\022\n\n\002id\030" +
                "\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\r\n\005other\030\003 \002(\003:\005\210\265\030\365" +
                "\003\"$\n\nCGMAKELOVE\022\017\n\007withWho\030\001 \002(\t:\005\210\265\030\211\006\"" +
                "r\n\007CGLogin\022\n\n\002id\030\001 \002(\003\022\014\n\004name\030\002 \002(\t\022\014\n\004" +
                "pass\030\003 \002(\005\022\r\n\005ratio\030\004 \002(\002\022)\n\007players\030\005 \003" +
                "(\0132\030.com.mokylin.test.Player:\005\210\265\030\370\006\"\027\n\006P" +
                "layer\022\r\n\005human\030\001 \002(\t\"\177\n\007GCLogin\022)\n\007playe" +
                "rs\030\001 \003(\0132\030.com.mokylin.test.Player\022\n\n\002id" +
                "\030\002 \002(\003\022\014\n\004name\030\003 \002(\t\022\014\n\004pass\030\004 \002(\005\022\r\n\005mo",
                "ney\030\005 \002(\002\022\013\n\003exp\030\006 \002(\001:\005\220\265\030\365\003B7\n&com.mok" +
                        "ylin.bleach.test.gameserver.netB\rMockCGM" + "essage"};
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_com_mokylin_test_CGTEST_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_com_mokylin_test_CGTEST_fieldAccessorTable =
                                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                        internal_static_com_mokylin_test_CGTEST_descriptor,
                                        new java.lang.String[]{"Id", "Name", "Other",});
                        internal_static_com_mokylin_test_CGMAKELOVE_descriptor =
                                getDescriptor().getMessageTypes().get(1);
                        internal_static_com_mokylin_test_CGMAKELOVE_fieldAccessorTable =
                                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                        internal_static_com_mokylin_test_CGMAKELOVE_descriptor,
                                        new java.lang.String[]{"WithWho",});
                        internal_static_com_mokylin_test_CGLogin_descriptor =
                                getDescriptor().getMessageTypes().get(2);
                        internal_static_com_mokylin_test_CGLogin_fieldAccessorTable =
                                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                        internal_static_com_mokylin_test_CGLogin_descriptor,
                                        new java.lang.String[]{"Id", "Name", "Pass", "Ratio",
                                                "Players",});
                        internal_static_com_mokylin_test_Player_descriptor =
                                getDescriptor().getMessageTypes().get(3);
                        internal_static_com_mokylin_test_Player_fieldAccessorTable =
                                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                        internal_static_com_mokylin_test_Player_descriptor,
                                        new java.lang.String[]{"Human",});
                        internal_static_com_mokylin_test_GCLogin_descriptor =
                                getDescriptor().getMessageTypes().get(4);
                        internal_static_com_mokylin_test_GCLogin_fieldAccessorTable =
                                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                        internal_static_com_mokylin_test_GCLogin_descriptor,
                                        new java.lang.String[]{"Players", "Id", "Name", "Pass",
                                                "Money", "Exp",});
                        com.google.protobuf.ExtensionRegistry registry =
                                com.google.protobuf.ExtensionRegistry.newInstance();
                        registry.add(
                                MockMessageType.cgMessageType);
                        registry.add(
                                MockMessageType.cgMessageType);
                        registry.add(
                                MockMessageType.cgMessageType);
                        registry.add(
                                MockMessageType.gcMessageType);
                        return registry;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                MockMessageType.getDescriptor(),},
                        assigner);
    }

    private MockCGMessage() {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    }

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    public interface CGTESTOrBuilder extends com.google.protobuf.MessageOrBuilder {

        // required int32 id = 1;

        /**
         * <code>required int32 id = 1;</code>
         */
        boolean hasId();

        /**
         * <code>required int32 id = 1;</code>
         */
        int getId();

        // required string name = 2;

        /**
         * <code>required string name = 2;</code>
         */
        boolean hasName();

        /**
         * <code>required string name = 2;</code>
         */
        java.lang.String getName();

        /**
         * <code>required string name = 2;</code>
         */
        com.google.protobuf.ByteString getNameBytes();

        // required int64 other = 3;

        /**
         * <code>required int64 other = 3;</code>
         */
        boolean hasOther();

        /**
         * <code>required int64 other = 3;</code>
         */
        long getOther();
    }

    public interface CGMAKELOVEOrBuilder extends com.google.protobuf.MessageOrBuilder {

        // required string withWho = 1;

        /**
         * <code>required string withWho = 1;</code>
         */
        boolean hasWithWho();

        /**
         * <code>required string withWho = 1;</code>
         */
        java.lang.String getWithWho();

        /**
         * <code>required string withWho = 1;</code>
         */
        com.google.protobuf.ByteString getWithWhoBytes();
    }

    public interface CGLoginOrBuilder extends com.google.protobuf.MessageOrBuilder {

        // required int64 id = 1;

        /**
         * <code>required int64 id = 1;</code>
         */
        boolean hasId();

        /**
         * <code>required int64 id = 1;</code>
         */
        long getId();

        // required string name = 2;

        /**
         * <code>required string name = 2;</code>
         */
        boolean hasName();

        /**
         * <code>required string name = 2;</code>
         */
        java.lang.String getName();

        /**
         * <code>required string name = 2;</code>
         */
        com.google.protobuf.ByteString getNameBytes();

        // required int32 pass = 3;

        /**
         * <code>required int32 pass = 3;</code>
         */
        boolean hasPass();

        /**
         * <code>required int32 pass = 3;</code>
         */
        int getPass();

        // required float ratio = 4;

        /**
         * <code>required float ratio = 4;</code>
         */
        boolean hasRatio();

        /**
         * <code>required float ratio = 4;</code>
         */
        float getRatio();

        // repeated .com.mokylin.test.Player players = 5;

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player> getPlayersList();

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        com.genesis.test.gameserver.net.MockCGMessage.Player getPlayers(int index);

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        int getPlayersCount();

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        java.util.List<? extends com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder> getPlayersOrBuilderList();

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder getPlayersOrBuilder(
                int index);
    }

    public interface PlayerOrBuilder extends com.google.protobuf.MessageOrBuilder {

        // required string human = 1;

        /**
         * <code>required string human = 1;</code>
         */
        boolean hasHuman();

        /**
         * <code>required string human = 1;</code>
         */
        java.lang.String getHuman();

        /**
         * <code>required string human = 1;</code>
         */
        com.google.protobuf.ByteString getHumanBytes();
    }

    public interface GCLoginOrBuilder extends com.google.protobuf.MessageOrBuilder {

        // repeated .com.mokylin.test.Player players = 1;

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player> getPlayersList();

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        com.genesis.test.gameserver.net.MockCGMessage.Player getPlayers(int index);

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        int getPlayersCount();

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        java.util.List<? extends com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder> getPlayersOrBuilderList();

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder getPlayersOrBuilder(
                int index);

        // required int64 id = 2;

        /**
         * <code>required int64 id = 2;</code>
         */
        boolean hasId();

        /**
         * <code>required int64 id = 2;</code>
         */
        long getId();

        // required string name = 3;

        /**
         * <code>required string name = 3;</code>
         */
        boolean hasName();

        /**
         * <code>required string name = 3;</code>
         */
        java.lang.String getName();

        /**
         * <code>required string name = 3;</code>
         */
        com.google.protobuf.ByteString getNameBytes();

        // required int32 pass = 4;

        /**
         * <code>required int32 pass = 4;</code>
         */
        boolean hasPass();

        /**
         * <code>required int32 pass = 4;</code>
         */
        int getPass();

        // required float money = 5;

        /**
         * <code>required float money = 5;</code>
         */
        boolean hasMoney();

        /**
         * <code>required float money = 5;</code>
         */
        float getMoney();

        // required double exp = 6;

        /**
         * <code>required double exp = 6;</code>
         */
        boolean hasExp();

        /**
         * <code>required double exp = 6;</code>
         */
        double getExp();
    }

    /**
     * Protobuf type {@code com.mokylin.test.CGTEST}
     */
    public static final class CGTEST extends com.google.protobuf.GeneratedMessage
            implements CGTESTOrBuilder {
        // required int32 id = 1;
        public static final int ID_FIELD_NUMBER = 1;
        // required string name = 2;
        public static final int NAME_FIELD_NUMBER = 2;
        // required int64 other = 3;
        public static final int OTHER_FIELD_NUMBER = 3;
        private static final CGTEST defaultInstance;
        private static final long serialVersionUID = 0L;
        public static com.google.protobuf.Parser<CGTEST> PARSER =
                new com.google.protobuf.AbstractParser<CGTEST>() {
                    public CGTEST parsePartialFrom(com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new CGTEST(input, extensionRegistry);
                    }
                };

        static {
            defaultInstance = new CGTEST(true);
            defaultInstance.initFields();
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        private int bitField0_;
        private int id_;
        private java.lang.Object name_;
        private long other_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use CGTEST.newBuilder() to construct.
        private CGTEST(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private CGTEST(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private CGTEST(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            id_ = input.readInt32();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            name_ = input.readBytes();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            other_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage())
                        .setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static CGTEST getDefaultInstance() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGTEST_descriptor;
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseFrom(
                byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseFrom(
                byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseDelimitedFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseFrom(
                com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGTEST parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(
                com.genesis.test.gameserver.net.MockCGMessage.CGTEST prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public CGTEST getDefaultInstanceForType() {
            return defaultInstance;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGTEST_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.genesis.test.gameserver.net.MockCGMessage.CGTEST.class,
                            com.genesis.test.gameserver.net.MockCGMessage.CGTEST.Builder.class);
        }

        @java.lang.Override
        public com.google.protobuf.Parser<CGTEST> getParserForType() {
            return PARSER;
        }

        /**
         * <code>required int32 id = 1;</code>
         */
        public boolean hasId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required int32 id = 1;</code>
         */
        public int getId() {
            return id_;
        }

        /**
         * <code>required string name = 2;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>required string name = 2;</code>
         */
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    name_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string name = 2;</code>
         */
        public com.google.protobuf.ByteString getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>required int64 other = 3;</code>
         */
        public boolean hasOther() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>required int64 other = 3;</code>
         */
        public long getOther() {
            return other_;
        }

        private void initFields() {
            id_ = 0;
            name_ = "";
            other_ = 0L;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }

            if (!hasId()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasName()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasOther()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt32(1, id_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getNameBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt64(3, other_);
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) {
                return size;
            }

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, id_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, getNameBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, other_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        @java.lang.Override
        protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code com.mokylin.test.CGTEST}
         */
        public static final class Builder
                extends com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements com.genesis.test.gameserver.net.MockCGMessage.CGTESTOrBuilder {
            private int bitField0_;
            // required int32 id = 1;
            private int id_;
            // required string name = 2;
            private java.lang.Object name_ = "";
            // required int64 other = 3;
            private long other_;

            // Construct using com.genesis.test.gameserver.net.MockCGMessage.CGTEST.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGTEST_descriptor;
            }

            private static Builder create() {
                return new Builder();
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGTEST_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.genesis.test.gameserver.net.MockCGMessage.CGTEST.class,
                                com.genesis.test.gameserver.net.MockCGMessage.CGTEST.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                id_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                name_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                other_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGTEST_descriptor;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.CGTEST getDefaultInstanceForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.CGTEST
                        .getDefaultInstance();
            }

            public com.genesis.test.gameserver.net.MockCGMessage.CGTEST build() {
                com.genesis.test.gameserver.net.MockCGMessage.CGTEST result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.CGTEST buildPartial() {
                com.genesis.test.gameserver.net.MockCGMessage.CGTEST result =
                        new com.genesis.test.gameserver.net.MockCGMessage.CGTEST(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.id_ = id_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.name_ = name_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.other_ = other_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.genesis.test.gameserver.net.MockCGMessage.CGTEST) {
                    return mergeFrom(
                            (com.genesis.test.gameserver.net.MockCGMessage.CGTEST) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(
                    com.genesis.test.gameserver.net.MockCGMessage.CGTEST other) {
                if (other == com.genesis.test.gameserver.net.MockCGMessage.CGTEST
                        .getDefaultInstance()) {
                    return this;
                }
                if (other.hasId()) {
                    setId(other.getId());
                }
                if (other.hasName()) {
                    bitField0_ |= 0x00000002;
                    name_ = other.name_;
                    onChanged();
                }
                if (other.hasOther()) {
                    setOther(other.getOther());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasId()) {

                    return false;
                }
                if (!hasName()) {

                    return false;
                }
                if (!hasOther()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.genesis.test.gameserver.net.MockCGMessage.CGTEST parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.genesis.test.gameserver.net.MockCGMessage.CGTEST) e
                            .getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required int32 id = 1;</code>
             */
            public boolean hasId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required int32 id = 1;</code>
             */
            public int getId() {
                return id_;
            }

            /**
             * <code>required int32 id = 1;</code>
             */
            public Builder setId(int value) {
                bitField0_ |= 0x00000001;
                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required int32 id = 1;</code>
             */
            public Builder clearId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                id_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>required string name = 2;</code>
             */
            public boolean hasName() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>required string name = 2;</code>
             */
            public java.lang.String getName() {
                java.lang.Object ref = name_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string name = 2;</code>
             */
            public Builder setName(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string name = 2;</code>
             */
            public com.google.protobuf.ByteString getNameBytes() {
                java.lang.Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string name = 2;</code>
             */
            public Builder setNameBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string name = 2;</code>
             */
            public Builder clearName() {
                bitField0_ = (bitField0_ & ~0x00000002);
                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <code>required int64 other = 3;</code>
             */
            public boolean hasOther() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>required int64 other = 3;</code>
             */
            public long getOther() {
                return other_;
            }

            /**
             * <code>required int64 other = 3;</code>
             */
            public Builder setOther(long value) {
                bitField0_ |= 0x00000004;
                other_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required int64 other = 3;</code>
             */
            public Builder clearOther() {
                bitField0_ = (bitField0_ & ~0x00000004);
                other_ = 0L;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.mokylin.test.CGTEST)
        }

        // @@protoc_insertion_point(class_scope:com.mokylin.test.CGTEST)
    }

    /**
     * Protobuf type {@code com.mokylin.test.CGMAKELOVE}
     */
    public static final class CGMAKELOVE extends com.google.protobuf.GeneratedMessage
            implements CGMAKELOVEOrBuilder {
        // required string withWho = 1;
        public static final int WITHWHO_FIELD_NUMBER = 1;
        private static final CGMAKELOVE defaultInstance;
        private static final long serialVersionUID = 0L;
        public static com.google.protobuf.Parser<CGMAKELOVE> PARSER =
                new com.google.protobuf.AbstractParser<CGMAKELOVE>() {
                    public CGMAKELOVE parsePartialFrom(com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new CGMAKELOVE(input, extensionRegistry);
                    }
                };

        static {
            defaultInstance = new CGMAKELOVE(true);
            defaultInstance.initFields();
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        private int bitField0_;
        private java.lang.Object withWho_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use CGMAKELOVE.newBuilder() to construct.
        private CGMAKELOVE(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private CGMAKELOVE(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private CGMAKELOVE(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            withWho_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage())
                        .setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static CGMAKELOVE getDefaultInstance() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGMAKELOVE_descriptor;
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseFrom(
                byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseFrom(
                byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseDelimitedFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseFrom(
                com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(
                com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public CGMAKELOVE getDefaultInstanceForType() {
            return defaultInstance;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGMAKELOVE_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE.class,
                            com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE.Builder.class);
        }

        @java.lang.Override
        public com.google.protobuf.Parser<CGMAKELOVE> getParserForType() {
            return PARSER;
        }

        /**
         * <code>required string withWho = 1;</code>
         */
        public boolean hasWithWho() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required string withWho = 1;</code>
         */
        public java.lang.String getWithWho() {
            java.lang.Object ref = withWho_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    withWho_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string withWho = 1;</code>
         */
        public com.google.protobuf.ByteString getWithWhoBytes() {
            java.lang.Object ref = withWho_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                withWho_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            withWho_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }

            if (!hasWithWho()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getWithWhoBytes());
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) {
                return size;
            }

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getWithWhoBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        @java.lang.Override
        protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code com.mokylin.test.CGMAKELOVE}
         */
        public static final class Builder
                extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVEOrBuilder {
            private int bitField0_;
            // required string withWho = 1;
            private java.lang.Object withWho_ = "";

            // Construct using com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGMAKELOVE_descriptor;
            }

            private static Builder create() {
                return new Builder();
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGMAKELOVE_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE.class,
                                com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                withWho_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGMAKELOVE_descriptor;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE getDefaultInstanceForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE
                        .getDefaultInstance();
            }

            public com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE build() {
                com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE result =
                        buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE buildPartial() {
                com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE result =
                        new com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.withWho_ = withWho_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE) {
                    return mergeFrom(
                            (com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(
                    com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE other) {
                if (other == com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE
                        .getDefaultInstance()) {
                    return this;
                }
                if (other.hasWithWho()) {
                    bitField0_ |= 0x00000001;
                    withWho_ = other.withWho_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasWithWho()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE parsedMessage =
                        null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage =
                            (com.genesis.test.gameserver.net.MockCGMessage.CGMAKELOVE) e
                                    .getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required string withWho = 1;</code>
             */
            public boolean hasWithWho() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required string withWho = 1;</code>
             */
            public java.lang.String getWithWho() {
                java.lang.Object ref = withWho_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    withWho_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string withWho = 1;</code>
             */
            public Builder setWithWho(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                withWho_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string withWho = 1;</code>
             */
            public com.google.protobuf.ByteString getWithWhoBytes() {
                java.lang.Object ref = withWho_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    withWho_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string withWho = 1;</code>
             */
            public Builder setWithWhoBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                withWho_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string withWho = 1;</code>
             */
            public Builder clearWithWho() {
                bitField0_ = (bitField0_ & ~0x00000001);
                withWho_ = getDefaultInstance().getWithWho();
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.mokylin.test.CGMAKELOVE)
        }

        // @@protoc_insertion_point(class_scope:com.mokylin.test.CGMAKELOVE)
    }

    /**
     * Protobuf type {@code com.mokylin.test.CGLogin}
     */
    public static final class CGLogin extends com.google.protobuf.GeneratedMessage
            implements CGLoginOrBuilder {
        // required int64 id = 1;
        public static final int ID_FIELD_NUMBER = 1;
        // required string name = 2;
        public static final int NAME_FIELD_NUMBER = 2;
        // required int32 pass = 3;
        public static final int PASS_FIELD_NUMBER = 3;
        // required float ratio = 4;
        public static final int RATIO_FIELD_NUMBER = 4;
        // repeated .com.mokylin.test.Player players = 5;
        public static final int PLAYERS_FIELD_NUMBER = 5;
        private static final CGLogin defaultInstance;
        private static final long serialVersionUID = 0L;
        public static com.google.protobuf.Parser<CGLogin> PARSER =
                new com.google.protobuf.AbstractParser<CGLogin>() {
                    public CGLogin parsePartialFrom(com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new CGLogin(input, extensionRegistry);
                    }
                };

        static {
            defaultInstance = new CGLogin(true);
            defaultInstance.initFields();
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        private int bitField0_;
        private long id_;
        private java.lang.Object name_;
        private int pass_;
        private float ratio_;
        private java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player>
                players_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use CGLogin.newBuilder() to construct.
        private CGLogin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private CGLogin(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private CGLogin(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            id_ = input.readInt64();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            name_ = input.readBytes();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            pass_ = input.readInt32();
                            break;
                        }
                        case 37: {
                            bitField0_ |= 0x00000008;
                            ratio_ = input.readFloat();
                            break;
                        }
                        case 42: {
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                players_ =
                                        new java.util.ArrayList<com.genesis.test.gameserver.net.MockCGMessage.Player>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            players_.add(input.readMessage(
                                    com.genesis.test.gameserver.net.MockCGMessage.Player.PARSER,
                                    extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage())
                        .setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    players_ = java.util.Collections.unmodifiableList(players_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static CGLogin getDefaultInstance() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGLogin_descriptor;
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseFrom(
                byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseFrom(
                byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseDelimitedFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseFrom(
                com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.CGLogin parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(
                com.genesis.test.gameserver.net.MockCGMessage.CGLogin prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public CGLogin getDefaultInstanceForType() {
            return defaultInstance;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGLogin_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.genesis.test.gameserver.net.MockCGMessage.CGLogin.class,
                            com.genesis.test.gameserver.net.MockCGMessage.CGLogin.Builder.class);
        }

        @java.lang.Override
        public com.google.protobuf.Parser<CGLogin> getParserForType() {
            return PARSER;
        }

        /**
         * <code>required int64 id = 1;</code>
         */
        public boolean hasId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required int64 id = 1;</code>
         */
        public long getId() {
            return id_;
        }

        /**
         * <code>required string name = 2;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>required string name = 2;</code>
         */
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    name_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string name = 2;</code>
         */
        public com.google.protobuf.ByteString getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>required int32 pass = 3;</code>
         */
        public boolean hasPass() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>required int32 pass = 3;</code>
         */
        public int getPass() {
            return pass_;
        }

        /**
         * <code>required float ratio = 4;</code>
         */
        public boolean hasRatio() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>required float ratio = 4;</code>
         */
        public float getRatio() {
            return ratio_;
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        public java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player> getPlayersList() {
            return players_;
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        public java.util.List<? extends com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder> getPlayersOrBuilderList() {
            return players_;
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        public int getPlayersCount() {
            return players_.size();
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        public com.genesis.test.gameserver.net.MockCGMessage.Player getPlayers(int index) {
            return players_.get(index);
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 5;</code>
         */
        public com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder getPlayersOrBuilder(
                int index) {
            return players_.get(index);
        }

        private void initFields() {
            id_ = 0L;
            name_ = "";
            pass_ = 0;
            ratio_ = 0F;
            players_ = java.util.Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }

            if (!hasId()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasName()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasPass()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasRatio()) {
                memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getPlayersCount(); i++) {
                if (!getPlayers(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, id_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getNameBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt32(3, pass_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeFloat(4, ratio_);
            }
            for (int i = 0; i < players_.size(); i++) {
                output.writeMessage(5, players_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) {
                return size;
            }

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream.computeInt64Size(1, id_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, getNameBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, pass_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, ratio_);
            }
            for (int i = 0; i < players_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, players_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        @java.lang.Override
        protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code com.mokylin.test.CGLogin}
         */
        public static final class Builder
                extends com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements com.genesis.test.gameserver.net.MockCGMessage.CGLoginOrBuilder {
            private int bitField0_;
            // required int64 id = 1;
            private long id_;
            // required string name = 2;
            private java.lang.Object name_ = "";
            // required int32 pass = 3;
            private int pass_;
            // required float ratio = 4;
            private float ratio_;
            // repeated .com.mokylin.test.Player players = 5;
            private java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player>
                    players_ = java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilder<com.genesis.test.gameserver.net.MockCGMessage.Player, com.genesis.test.gameserver.net.MockCGMessage.Player.Builder, com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder>
                    playersBuilder_;

            // Construct using com.genesis.test.gameserver.net.MockCGMessage.CGLogin.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGLogin_descriptor;
            }

            private static Builder create() {
                return new Builder();
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGLogin_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.genesis.test.gameserver.net.MockCGMessage.CGLogin.class,
                                com.genesis.test.gameserver.net.MockCGMessage.CGLogin.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getPlayersFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                id_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                name_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                pass_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                ratio_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000008);
                if (playersBuilder_ == null) {
                    players_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                } else {
                    playersBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_CGLogin_descriptor;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.CGLogin getDefaultInstanceForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.CGLogin
                        .getDefaultInstance();
            }

            public com.genesis.test.gameserver.net.MockCGMessage.CGLogin build() {
                com.genesis.test.gameserver.net.MockCGMessage.CGLogin result =
                        buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.CGLogin buildPartial() {
                com.genesis.test.gameserver.net.MockCGMessage.CGLogin result =
                        new com.genesis.test.gameserver.net.MockCGMessage.CGLogin(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.id_ = id_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.name_ = name_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.pass_ = pass_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.ratio_ = ratio_;
                if (playersBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010)) {
                        players_ = java.util.Collections.unmodifiableList(players_);
                        bitField0_ = (bitField0_ & ~0x00000010);
                    }
                    result.players_ = players_;
                } else {
                    result.players_ = playersBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.genesis.test.gameserver.net.MockCGMessage.CGLogin) {
                    return mergeFrom(
                            (com.genesis.test.gameserver.net.MockCGMessage.CGLogin) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(
                    com.genesis.test.gameserver.net.MockCGMessage.CGLogin other) {
                if (other == com.genesis.test.gameserver.net.MockCGMessage.CGLogin
                        .getDefaultInstance()) {
                    return this;
                }
                if (other.hasId()) {
                    setId(other.getId());
                }
                if (other.hasName()) {
                    bitField0_ |= 0x00000002;
                    name_ = other.name_;
                    onChanged();
                }
                if (other.hasPass()) {
                    setPass(other.getPass());
                }
                if (other.hasRatio()) {
                    setRatio(other.getRatio());
                }
                if (playersBuilder_ == null) {
                    if (!other.players_.isEmpty()) {
                        if (players_.isEmpty()) {
                            players_ = other.players_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                        } else {
                            ensurePlayersIsMutable();
                            players_.addAll(other.players_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.players_.isEmpty()) {
                        if (playersBuilder_.isEmpty()) {
                            playersBuilder_.dispose();
                            playersBuilder_ = null;
                            players_ = other.players_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                            playersBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getPlayersFieldBuilder() : null;
                        } else {
                            playersBuilder_.addAllMessages(other.players_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasId()) {

                    return false;
                }
                if (!hasName()) {

                    return false;
                }
                if (!hasPass()) {

                    return false;
                }
                if (!hasRatio()) {

                    return false;
                }
                for (int i = 0; i < getPlayersCount(); i++) {
                    if (!getPlayers(i).isInitialized()) {

                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.genesis.test.gameserver.net.MockCGMessage.CGLogin parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.genesis.test.gameserver.net.MockCGMessage.CGLogin) e
                            .getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required int64 id = 1;</code>
             */
            public boolean hasId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required int64 id = 1;</code>
             */
            public long getId() {
                return id_;
            }

            /**
             * <code>required int64 id = 1;</code>
             */
            public Builder setId(long value) {
                bitField0_ |= 0x00000001;
                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required int64 id = 1;</code>
             */
            public Builder clearId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                id_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>required string name = 2;</code>
             */
            public boolean hasName() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>required string name = 2;</code>
             */
            public java.lang.String getName() {
                java.lang.Object ref = name_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string name = 2;</code>
             */
            public Builder setName(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string name = 2;</code>
             */
            public com.google.protobuf.ByteString getNameBytes() {
                java.lang.Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string name = 2;</code>
             */
            public Builder setNameBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string name = 2;</code>
             */
            public Builder clearName() {
                bitField0_ = (bitField0_ & ~0x00000002);
                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <code>required int32 pass = 3;</code>
             */
            public boolean hasPass() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>required int32 pass = 3;</code>
             */
            public int getPass() {
                return pass_;
            }

            /**
             * <code>required int32 pass = 3;</code>
             */
            public Builder setPass(int value) {
                bitField0_ |= 0x00000004;
                pass_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required int32 pass = 3;</code>
             */
            public Builder clearPass() {
                bitField0_ = (bitField0_ & ~0x00000004);
                pass_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>required float ratio = 4;</code>
             */
            public boolean hasRatio() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>required float ratio = 4;</code>
             */
            public float getRatio() {
                return ratio_;
            }

            /**
             * <code>required float ratio = 4;</code>
             */
            public Builder setRatio(float value) {
                bitField0_ |= 0x00000008;
                ratio_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required float ratio = 4;</code>
             */
            public Builder clearRatio() {
                bitField0_ = (bitField0_ & ~0x00000008);
                ratio_ = 0F;
                onChanged();
                return this;
            }

            private void ensurePlayersIsMutable() {
                if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                    players_ =
                            new java.util.ArrayList<com.genesis.test.gameserver.net.MockCGMessage.Player>(
                                    players_);
                    bitField0_ |= 0x00000010;
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player> getPlayersList() {
                if (playersBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(players_);
                } else {
                    return playersBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public int getPlayersCount() {
                if (playersBuilder_ == null) {
                    return players_.size();
                } else {
                    return playersBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.Player getPlayers(
                    int index) {
                if (playersBuilder_ == null) {
                    return players_.get(index);
                } else {
                    return playersBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public Builder setPlayers(int index,
                    com.genesis.test.gameserver.net.MockCGMessage.Player value) {
                if (playersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePlayersIsMutable();
                    players_.set(index, value);
                    onChanged();
                } else {
                    playersBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public Builder setPlayers(int index,
                    com.genesis.test.gameserver.net.MockCGMessage.Player.Builder builderForValue) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    players_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    playersBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public Builder addPlayers(
                    com.genesis.test.gameserver.net.MockCGMessage.Player value) {
                if (playersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePlayersIsMutable();
                    players_.add(value);
                    onChanged();
                } else {
                    playersBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public Builder addPlayers(int index,
                    com.genesis.test.gameserver.net.MockCGMessage.Player value) {
                if (playersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePlayersIsMutable();
                    players_.add(index, value);
                    onChanged();
                } else {
                    playersBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public Builder addPlayers(
                    com.genesis.test.gameserver.net.MockCGMessage.Player.Builder builderForValue) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    players_.add(builderForValue.build());
                    onChanged();
                } else {
                    playersBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public Builder addPlayers(int index,
                    com.genesis.test.gameserver.net.MockCGMessage.Player.Builder builderForValue) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    players_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    playersBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public Builder addAllPlayers(
                    java.lang.Iterable<? extends com.genesis.test.gameserver.net.MockCGMessage.Player> values) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    super.addAll(values, players_);
                    onChanged();
                } else {
                    playersBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public Builder clearPlayers() {
                if (playersBuilder_ == null) {
                    players_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                    onChanged();
                } else {
                    playersBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public Builder removePlayers(int index) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    players_.remove(index);
                    onChanged();
                } else {
                    playersBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.Player.Builder getPlayersBuilder(
                    int index) {
                return getPlayersFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder getPlayersOrBuilder(
                    int index) {
                if (playersBuilder_ == null) {
                    return players_.get(index);
                } else {
                    return playersBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public java.util.List<? extends com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder> getPlayersOrBuilderList() {
                if (playersBuilder_ != null) {
                    return playersBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(players_);
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.Player.Builder addPlayersBuilder() {
                return getPlayersFieldBuilder().addBuilder(
                        com.genesis.test.gameserver.net.MockCGMessage.Player
                                .getDefaultInstance());
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.Player.Builder addPlayersBuilder(
                    int index) {
                return getPlayersFieldBuilder().addBuilder(index,
                        com.genesis.test.gameserver.net.MockCGMessage.Player
                                .getDefaultInstance());
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 5;</code>
             */
            public java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player.Builder> getPlayersBuilderList() {
                return getPlayersFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<com.genesis.test.gameserver.net.MockCGMessage.Player, com.genesis.test.gameserver.net.MockCGMessage.Player.Builder, com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder> getPlayersFieldBuilder() {
                if (playersBuilder_ == null) {
                    playersBuilder_ =
                            new com.google.protobuf.RepeatedFieldBuilder<com.genesis.test.gameserver.net.MockCGMessage.Player, com.genesis.test.gameserver.net.MockCGMessage.Player.Builder, com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder>(
                                    players_, ((bitField0_ & 0x00000010) == 0x00000010),
                                    getParentForChildren(), isClean());
                    players_ = null;
                }
                return playersBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:com.mokylin.test.CGLogin)
        }

        // @@protoc_insertion_point(class_scope:com.mokylin.test.CGLogin)
    }

    /**
     * Protobuf type {@code com.mokylin.test.Player}
     */
    public static final class Player extends com.google.protobuf.GeneratedMessage
            implements PlayerOrBuilder {
        // required string human = 1;
        public static final int HUMAN_FIELD_NUMBER = 1;
        private static final Player defaultInstance;
        private static final long serialVersionUID = 0L;
        public static com.google.protobuf.Parser<Player> PARSER =
                new com.google.protobuf.AbstractParser<Player>() {
                    public Player parsePartialFrom(com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new Player(input, extensionRegistry);
                    }
                };

        static {
            defaultInstance = new Player(true);
            defaultInstance.initFields();
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        private int bitField0_;
        private java.lang.Object human_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use Player.newBuilder() to construct.
        private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private Player(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private Player(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            human_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage())
                        .setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static Player getDefaultInstance() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_Player_descriptor;
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseFrom(
                byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseFrom(
                byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseDelimitedFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseFrom(
                com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.Player parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(
                com.genesis.test.gameserver.net.MockCGMessage.Player prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Player getDefaultInstanceForType() {
            return defaultInstance;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_Player_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.genesis.test.gameserver.net.MockCGMessage.Player.class,
                            com.genesis.test.gameserver.net.MockCGMessage.Player.Builder.class);
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Player> getParserForType() {
            return PARSER;
        }

        /**
         * <code>required string human = 1;</code>
         */
        public boolean hasHuman() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required string human = 1;</code>
         */
        public java.lang.String getHuman() {
            java.lang.Object ref = human_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    human_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string human = 1;</code>
         */
        public com.google.protobuf.ByteString getHumanBytes() {
            java.lang.Object ref = human_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                human_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            human_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }

            if (!hasHuman()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getHumanBytes());
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) {
                return size;
            }

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, getHumanBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        @java.lang.Override
        protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code com.mokylin.test.Player}
         */
        public static final class Builder
                extends com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder {
            private int bitField0_;
            // required string human = 1;
            private java.lang.Object human_ = "";

            // Construct using com.genesis.test.gameserver.net.MockCGMessage.Player.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_Player_descriptor;
            }

            private static Builder create() {
                return new Builder();
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_Player_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.genesis.test.gameserver.net.MockCGMessage.Player.class,
                                com.genesis.test.gameserver.net.MockCGMessage.Player.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                human_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_Player_descriptor;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.Player getDefaultInstanceForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.Player
                        .getDefaultInstance();
            }

            public com.genesis.test.gameserver.net.MockCGMessage.Player build() {
                com.genesis.test.gameserver.net.MockCGMessage.Player result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.Player buildPartial() {
                com.genesis.test.gameserver.net.MockCGMessage.Player result =
                        new com.genesis.test.gameserver.net.MockCGMessage.Player(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.human_ = human_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.genesis.test.gameserver.net.MockCGMessage.Player) {
                    return mergeFrom(
                            (com.genesis.test.gameserver.net.MockCGMessage.Player) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(
                    com.genesis.test.gameserver.net.MockCGMessage.Player other) {
                if (other == com.genesis.test.gameserver.net.MockCGMessage.Player
                        .getDefaultInstance()) {
                    return this;
                }
                if (other.hasHuman()) {
                    bitField0_ |= 0x00000001;
                    human_ = other.human_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasHuman()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.genesis.test.gameserver.net.MockCGMessage.Player parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.genesis.test.gameserver.net.MockCGMessage.Player) e
                            .getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required string human = 1;</code>
             */
            public boolean hasHuman() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required string human = 1;</code>
             */
            public java.lang.String getHuman() {
                java.lang.Object ref = human_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    human_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string human = 1;</code>
             */
            public Builder setHuman(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                human_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string human = 1;</code>
             */
            public com.google.protobuf.ByteString getHumanBytes() {
                java.lang.Object ref = human_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    human_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string human = 1;</code>
             */
            public Builder setHumanBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                human_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string human = 1;</code>
             */
            public Builder clearHuman() {
                bitField0_ = (bitField0_ & ~0x00000001);
                human_ = getDefaultInstance().getHuman();
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.mokylin.test.Player)
        }

        // @@protoc_insertion_point(class_scope:com.mokylin.test.Player)
    }

    /**
     * Protobuf type {@code com.mokylin.test.GCLogin}
     */
    public static final class GCLogin extends com.google.protobuf.GeneratedMessage
            implements GCLoginOrBuilder {
        // repeated .com.mokylin.test.Player players = 1;
        public static final int PLAYERS_FIELD_NUMBER = 1;
        // required int64 id = 2;
        public static final int ID_FIELD_NUMBER = 2;
        // required string name = 3;
        public static final int NAME_FIELD_NUMBER = 3;
        // required int32 pass = 4;
        public static final int PASS_FIELD_NUMBER = 4;
        // required float money = 5;
        public static final int MONEY_FIELD_NUMBER = 5;
        // required double exp = 6;
        public static final int EXP_FIELD_NUMBER = 6;
        private static final GCLogin defaultInstance;
        private static final long serialVersionUID = 0L;
        public static com.google.protobuf.Parser<GCLogin> PARSER =
                new com.google.protobuf.AbstractParser<GCLogin>() {
                    public GCLogin parsePartialFrom(com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new GCLogin(input, extensionRegistry);
                    }
                };

        static {
            defaultInstance = new GCLogin(true);
            defaultInstance.initFields();
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        private int bitField0_;
        private java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player>
                players_;
        private long id_;
        private java.lang.Object name_;
        private int pass_;
        private float money_;
        private double exp_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use GCLogin.newBuilder() to construct.
        private GCLogin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private GCLogin(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private GCLogin(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                players_ =
                                        new java.util.ArrayList<com.genesis.test.gameserver.net.MockCGMessage.Player>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            players_.add(input.readMessage(
                                    com.genesis.test.gameserver.net.MockCGMessage.Player.PARSER,
                                    extensionRegistry));
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000001;
                            id_ = input.readInt64();
                            break;
                        }
                        case 26: {
                            bitField0_ |= 0x00000002;
                            name_ = input.readBytes();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000004;
                            pass_ = input.readInt32();
                            break;
                        }
                        case 45: {
                            bitField0_ |= 0x00000008;
                            money_ = input.readFloat();
                            break;
                        }
                        case 49: {
                            bitField0_ |= 0x00000010;
                            exp_ = input.readDouble();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage())
                        .setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    players_ = java.util.Collections.unmodifiableList(players_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static GCLogin getDefaultInstance() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_GCLogin_descriptor;
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseFrom(
                byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseFrom(
                byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseDelimitedFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseFrom(
                com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.genesis.test.gameserver.net.MockCGMessage.GCLogin parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(
                com.genesis.test.gameserver.net.MockCGMessage.GCLogin prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public GCLogin getDefaultInstanceForType() {
            return defaultInstance;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_GCLogin_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.genesis.test.gameserver.net.MockCGMessage.GCLogin.class,
                            com.genesis.test.gameserver.net.MockCGMessage.GCLogin.Builder.class);
        }

        @java.lang.Override
        public com.google.protobuf.Parser<GCLogin> getParserForType() {
            return PARSER;
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        public java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player> getPlayersList() {
            return players_;
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        public java.util.List<? extends com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder> getPlayersOrBuilderList() {
            return players_;
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        public int getPlayersCount() {
            return players_.size();
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        public com.genesis.test.gameserver.net.MockCGMessage.Player getPlayers(int index) {
            return players_.get(index);
        }

        /**
         * <code>repeated .com.mokylin.test.Player players = 1;</code>
         */
        public com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder getPlayersOrBuilder(
                int index) {
            return players_.get(index);
        }

        /**
         * <code>required int64 id = 2;</code>
         */
        public boolean hasId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required int64 id = 2;</code>
         */
        public long getId() {
            return id_;
        }

        /**
         * <code>required string name = 3;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>required string name = 3;</code>
         */
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    name_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string name = 3;</code>
         */
        public com.google.protobuf.ByteString getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>required int32 pass = 4;</code>
         */
        public boolean hasPass() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>required int32 pass = 4;</code>
         */
        public int getPass() {
            return pass_;
        }

        /**
         * <code>required float money = 5;</code>
         */
        public boolean hasMoney() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>required float money = 5;</code>
         */
        public float getMoney() {
            return money_;
        }

        /**
         * <code>required double exp = 6;</code>
         */
        public boolean hasExp() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>required double exp = 6;</code>
         */
        public double getExp() {
            return exp_;
        }

        private void initFields() {
            players_ = java.util.Collections.emptyList();
            id_ = 0L;
            name_ = "";
            pass_ = 0;
            money_ = 0F;
            exp_ = 0D;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }

            if (!hasId()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasName()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasPass()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMoney()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasExp()) {
                memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getPlayersCount(); i++) {
                if (!getPlayers(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < players_.size(); i++) {
                output.writeMessage(1, players_.get(i));
            }
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(2, id_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(3, getNameBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt32(4, pass_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeFloat(5, money_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeDouble(6, exp_);
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) {
                return size;
            }

            size = 0;
            for (int i = 0; i < players_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, players_.get(i));
            }
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, id_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(3, getNameBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream.computeInt32Size(4, pass_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream.computeFloatSize(5, money_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream.computeDoubleSize(6, exp_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        @java.lang.Override
        protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code com.mokylin.test.GCLogin}
         */
        public static final class Builder
                extends com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements com.genesis.test.gameserver.net.MockCGMessage.GCLoginOrBuilder {
            private int bitField0_;
            // repeated .com.mokylin.test.Player players = 1;
            private java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player>
                    players_ = java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilder<com.genesis.test.gameserver.net.MockCGMessage.Player, com.genesis.test.gameserver.net.MockCGMessage.Player.Builder, com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder>
                    playersBuilder_;
            // required int64 id = 2;
            private long id_;
            // required string name = 3;
            private java.lang.Object name_ = "";
            // required int32 pass = 4;
            private int pass_;
            // required float money = 5;
            private float money_;
            // required double exp = 6;
            private double exp_;

            // Construct using com.genesis.test.gameserver.net.MockCGMessage.GCLogin.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_GCLogin_descriptor;
            }

            private static Builder create() {
                return new Builder();
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_GCLogin_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.genesis.test.gameserver.net.MockCGMessage.GCLogin.class,
                                com.genesis.test.gameserver.net.MockCGMessage.GCLogin.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getPlayersFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                if (playersBuilder_ == null) {
                    players_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    playersBuilder_.clear();
                }
                id_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                name_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                pass_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                money_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000010);
                exp_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000020);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.internal_static_com_mokylin_test_GCLogin_descriptor;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.GCLogin getDefaultInstanceForType() {
                return com.genesis.test.gameserver.net.MockCGMessage.GCLogin
                        .getDefaultInstance();
            }

            public com.genesis.test.gameserver.net.MockCGMessage.GCLogin build() {
                com.genesis.test.gameserver.net.MockCGMessage.GCLogin result =
                        buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.genesis.test.gameserver.net.MockCGMessage.GCLogin buildPartial() {
                com.genesis.test.gameserver.net.MockCGMessage.GCLogin result =
                        new com.genesis.test.gameserver.net.MockCGMessage.GCLogin(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (playersBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        players_ = java.util.Collections.unmodifiableList(players_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.players_ = players_;
                } else {
                    result.players_ = playersBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.id_ = id_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.name_ = name_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.pass_ = pass_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.money_ = money_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.exp_ = exp_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.genesis.test.gameserver.net.MockCGMessage.GCLogin) {
                    return mergeFrom(
                            (com.genesis.test.gameserver.net.MockCGMessage.GCLogin) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(
                    com.genesis.test.gameserver.net.MockCGMessage.GCLogin other) {
                if (other == com.genesis.test.gameserver.net.MockCGMessage.GCLogin
                        .getDefaultInstance()) {
                    return this;
                }
                if (playersBuilder_ == null) {
                    if (!other.players_.isEmpty()) {
                        if (players_.isEmpty()) {
                            players_ = other.players_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensurePlayersIsMutable();
                            players_.addAll(other.players_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.players_.isEmpty()) {
                        if (playersBuilder_.isEmpty()) {
                            playersBuilder_.dispose();
                            playersBuilder_ = null;
                            players_ = other.players_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            playersBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getPlayersFieldBuilder() : null;
                        } else {
                            playersBuilder_.addAllMessages(other.players_);
                        }
                    }
                }
                if (other.hasId()) {
                    setId(other.getId());
                }
                if (other.hasName()) {
                    bitField0_ |= 0x00000004;
                    name_ = other.name_;
                    onChanged();
                }
                if (other.hasPass()) {
                    setPass(other.getPass());
                }
                if (other.hasMoney()) {
                    setMoney(other.getMoney());
                }
                if (other.hasExp()) {
                    setExp(other.getExp());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasId()) {

                    return false;
                }
                if (!hasName()) {

                    return false;
                }
                if (!hasPass()) {

                    return false;
                }
                if (!hasMoney()) {

                    return false;
                }
                if (!hasExp()) {

                    return false;
                }
                for (int i = 0; i < getPlayersCount(); i++) {
                    if (!getPlayers(i).isInitialized()) {

                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.genesis.test.gameserver.net.MockCGMessage.GCLogin parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.genesis.test.gameserver.net.MockCGMessage.GCLogin) e
                            .getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private void ensurePlayersIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    players_ =
                            new java.util.ArrayList<com.genesis.test.gameserver.net.MockCGMessage.Player>(
                                    players_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player> getPlayersList() {
                if (playersBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(players_);
                } else {
                    return playersBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public int getPlayersCount() {
                if (playersBuilder_ == null) {
                    return players_.size();
                } else {
                    return playersBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.Player getPlayers(
                    int index) {
                if (playersBuilder_ == null) {
                    return players_.get(index);
                } else {
                    return playersBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public Builder setPlayers(int index,
                    com.genesis.test.gameserver.net.MockCGMessage.Player value) {
                if (playersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePlayersIsMutable();
                    players_.set(index, value);
                    onChanged();
                } else {
                    playersBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public Builder setPlayers(int index,
                    com.genesis.test.gameserver.net.MockCGMessage.Player.Builder builderForValue) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    players_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    playersBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public Builder addPlayers(
                    com.genesis.test.gameserver.net.MockCGMessage.Player value) {
                if (playersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePlayersIsMutable();
                    players_.add(value);
                    onChanged();
                } else {
                    playersBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public Builder addPlayers(int index,
                    com.genesis.test.gameserver.net.MockCGMessage.Player value) {
                if (playersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePlayersIsMutable();
                    players_.add(index, value);
                    onChanged();
                } else {
                    playersBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public Builder addPlayers(
                    com.genesis.test.gameserver.net.MockCGMessage.Player.Builder builderForValue) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    players_.add(builderForValue.build());
                    onChanged();
                } else {
                    playersBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public Builder addPlayers(int index,
                    com.genesis.test.gameserver.net.MockCGMessage.Player.Builder builderForValue) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    players_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    playersBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public Builder addAllPlayers(
                    java.lang.Iterable<? extends com.genesis.test.gameserver.net.MockCGMessage.Player> values) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    super.addAll(values, players_);
                    onChanged();
                } else {
                    playersBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public Builder clearPlayers() {
                if (playersBuilder_ == null) {
                    players_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    playersBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public Builder removePlayers(int index) {
                if (playersBuilder_ == null) {
                    ensurePlayersIsMutable();
                    players_.remove(index);
                    onChanged();
                } else {
                    playersBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.Player.Builder getPlayersBuilder(
                    int index) {
                return getPlayersFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder getPlayersOrBuilder(
                    int index) {
                if (playersBuilder_ == null) {
                    return players_.get(index);
                } else {
                    return playersBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public java.util.List<? extends com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder> getPlayersOrBuilderList() {
                if (playersBuilder_ != null) {
                    return playersBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(players_);
                }
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.Player.Builder addPlayersBuilder() {
                return getPlayersFieldBuilder().addBuilder(
                        com.genesis.test.gameserver.net.MockCGMessage.Player
                                .getDefaultInstance());
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public com.genesis.test.gameserver.net.MockCGMessage.Player.Builder addPlayersBuilder(
                    int index) {
                return getPlayersFieldBuilder().addBuilder(index,
                        com.genesis.test.gameserver.net.MockCGMessage.Player
                                .getDefaultInstance());
            }

            /**
             * <code>repeated .com.mokylin.test.Player players = 1;</code>
             */
            public java.util.List<com.genesis.test.gameserver.net.MockCGMessage.Player.Builder> getPlayersBuilderList() {
                return getPlayersFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<com.genesis.test.gameserver.net.MockCGMessage.Player, com.genesis.test.gameserver.net.MockCGMessage.Player.Builder, com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder> getPlayersFieldBuilder() {
                if (playersBuilder_ == null) {
                    playersBuilder_ =
                            new com.google.protobuf.RepeatedFieldBuilder<com.genesis.test.gameserver.net.MockCGMessage.Player, com.genesis.test.gameserver.net.MockCGMessage.Player.Builder, com.genesis.test.gameserver.net.MockCGMessage.PlayerOrBuilder>(
                                    players_, ((bitField0_ & 0x00000001) == 0x00000001),
                                    getParentForChildren(), isClean());
                    players_ = null;
                }
                return playersBuilder_;
            }

            /**
             * <code>required int64 id = 2;</code>
             */
            public boolean hasId() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>required int64 id = 2;</code>
             */
            public long getId() {
                return id_;
            }

            /**
             * <code>required int64 id = 2;</code>
             */
            public Builder setId(long value) {
                bitField0_ |= 0x00000002;
                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required int64 id = 2;</code>
             */
            public Builder clearId() {
                bitField0_ = (bitField0_ & ~0x00000002);
                id_ = 0L;
                onChanged();
                return this;
            }

            /**
             * <code>required string name = 3;</code>
             */
            public boolean hasName() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>required string name = 3;</code>
             */
            public java.lang.String getName() {
                java.lang.Object ref = name_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string name = 3;</code>
             */
            public Builder setName(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string name = 3;</code>
             */
            public com.google.protobuf.ByteString getNameBytes() {
                java.lang.Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string name = 3;</code>
             */
            public Builder setNameBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string name = 3;</code>
             */
            public Builder clearName() {
                bitField0_ = (bitField0_ & ~0x00000004);
                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <code>required int32 pass = 4;</code>
             */
            public boolean hasPass() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>required int32 pass = 4;</code>
             */
            public int getPass() {
                return pass_;
            }

            /**
             * <code>required int32 pass = 4;</code>
             */
            public Builder setPass(int value) {
                bitField0_ |= 0x00000008;
                pass_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required int32 pass = 4;</code>
             */
            public Builder clearPass() {
                bitField0_ = (bitField0_ & ~0x00000008);
                pass_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>required float money = 5;</code>
             */
            public boolean hasMoney() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>required float money = 5;</code>
             */
            public float getMoney() {
                return money_;
            }

            /**
             * <code>required float money = 5;</code>
             */
            public Builder setMoney(float value) {
                bitField0_ |= 0x00000010;
                money_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required float money = 5;</code>
             */
            public Builder clearMoney() {
                bitField0_ = (bitField0_ & ~0x00000010);
                money_ = 0F;
                onChanged();
                return this;
            }

            /**
             * <code>required double exp = 6;</code>
             */
            public boolean hasExp() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <code>required double exp = 6;</code>
             */
            public double getExp() {
                return exp_;
            }

            /**
             * <code>required double exp = 6;</code>
             */
            public Builder setExp(double value) {
                bitField0_ |= 0x00000020;
                exp_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required double exp = 6;</code>
             */
            public Builder clearExp() {
                bitField0_ = (bitField0_ & ~0x00000020);
                exp_ = 0D;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.mokylin.test.GCLogin)
        }

        // @@protoc_insertion_point(class_scope:com.mokylin.test.GCLogin)
    }

    // @@protoc_insertion_point(outer_class_scope)
}
